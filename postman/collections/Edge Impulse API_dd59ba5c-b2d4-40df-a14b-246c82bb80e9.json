{
	"info": {
		"_postman_id": "18a553a8-db6b-4def-8ac8-74795392c9af",
		"name": "Edge Impulse API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "user",
					"item": [
						{
							"name": "Get current user",
							"id": "326a05d7-b202-403a-b85a-17399f548322",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"user"
									]
								},
								"description": "Get information about the current user. This function is only available through a JWT token."
							},
							"response": [
								{
									"id": "e71237ba-2df3-456d-a8dc-c728f18243e7",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"activated\": true,\n  \"created\": \"2019-08-31T17:32:28Z\",\n  \"email\": \"magna nostrud in minim\",\n  \"experiments\": {},\n  \"id\": 1,\n  \"name\": \"Jan Jongboom\",\n  \"organizations\": [\n    {\n      \"id\": 76851332,\n      \"name\": \"cupidatat et\",\n      \"isDeveloperProfile\": false,\n      \"whitelabelId\": 9342009.648543432,\n      \"logo\": \"qui anim consequat\"\n    },\n    {\n      \"id\": 37617523,\n      \"name\": \"non irure anim officia\",\n      \"isDeveloperProfile\": true,\n      \"whitelabelId\": -55737082.01703633,\n      \"logo\": \"Duis\"\n    }\n  ],\n  \"pending\": true,\n  \"projects\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"collaborators\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labelingMethod\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isEnterpriseProject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"whitelabelId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastAccessed\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerUserId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerOrganizationId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataExplorerScreenshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"collaborators\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labelingMethod\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isEnterpriseProject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"whitelabelId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastAccessed\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerUserId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerOrganizationId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataExplorerScreenshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"showImagine2022\": false,\n  \"staffInfo\": {\n    \"isStaff\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hasSudoRights\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"companyName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"success\": true,\n  \"username\": \"janjongboom\",\n  \"error\": \"magna quis sed adipisicing\",\n  \"photo\": \"https://usercdn.edgeimpulse.com/photos/1.jpg\",\n  \"lastTosAcceptanceDate\": \"2019-08-31T17:32:28Z\",\n  \"evaluation\": false,\n  \"ambassador\": true\n}"
								}
							]
						},
						{
							"name": "Update current user",
							"id": "0c1b613d-daed-4592-8c15-737c4c8d7573",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Jan Jongboom\",\n  \"showImagine2022\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"user"
									]
								},
								"description": "Update user properties such as name. This function is only available through a JWT token."
							},
							"response": [
								{
									"id": "9e8617ce-f2f2-4101-8329-3dba5027072a",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Jan Jongboom\",\n  \"showImagine2022\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
								}
							]
						},
						{
							"name": "Delete current user",
							"id": "0068bc9e-6cf8-4b91-b415-3eb529eae9e7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"user"
									]
								},
								"description": "Delete a user. This function is only available through a JWT token, and can only remove the current user."
							},
							"response": [
								{
									"id": "35614150-f4ff-4d52-8ba2-9589d3aa4728",
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
								}
							]
						},
						{
							"name": "Convert current evaluation user",
							"id": "deb80316-0bf9-42ba-9b58-5ac3d4dd4f80",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Jan Jongboom\",\n  \"username\": \"janjongboom\",\n  \"email\": \"jan@edgeimpulse.com\",\n  \"password\": \"nisi\",\n  \"privacyPolicy\": false,\n  \"projectName\": \"dolore qui Ut\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/user/convert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"user",
										"convert"
									]
								},
								"description": "Convert current evaluation user account to regular account."
							},
							"response": [
								{
									"id": "24d7864c-73c9-4568-93ba-3b4ccb88d4bd",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Jan Jongboom\",\n  \"username\": \"janjongboom\",\n  \"email\": \"jan@edgeimpulse.com\",\n  \"password\": \"nisi\",\n  \"privacyPolicy\": false,\n  \"projectName\": \"dolore qui Ut\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/convert",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"convert"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
								}
							]
						},
						{
							"name": "Activate current user",
							"id": "696bfb9f-6a83-4058-8f9d-30291d9b0cf1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"code\": \"veniam officia in dolor\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/user/activate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"user",
										"activate"
									]
								},
								"description": "Activate the current user account (requires an activation code). This function is only available through a JWT token."
							},
							"response": [
								{
									"id": "4df12e1c-14cd-4c40-8afd-a2461748a64e",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"veniam officia in dolor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/activate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"activate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
								}
							]
						},
						{
							"name": "Request activation code",
							"id": "99c5ca12-2440-43a8-8ad2-222b6049077c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/user/request-activation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"user",
										"request-activation"
									]
								},
								"description": "Request a new activation code for the current user. This function is only available through a JWT token."
							},
							"response": [
								{
									"id": "d78aa31c-bdde-473b-b715-6e3c292c419c",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/user/request-activation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"request-activation"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
								}
							]
						},
						{
							"name": "Create developer profile",
							"id": "cd13db96-f4b4-4942-8184-02c561caceeb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/user/create-developer-profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"user",
										"create-developer-profile"
									]
								},
								"description": "Create a developer profile for the current active user."
							},
							"response": [
								{
									"id": "9009e94a-83d8-43eb-81dd-f17a9da79089",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/user/create-developer-profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"create-developer-profile"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"organizationId\": 63403916,\n  \"success\": false,\n  \"error\": \"in occaecat\",\n  \"link\": \"ut laboris\"\n}"
								}
							]
						},
						{
							"name": "List emails",
							"id": "c1c1c586-3e1b-4780-abef-03f5f284adec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/user/emails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"user",
										"emails"
									]
								},
								"description": "Get a list of all emails sent by Edge Impulse to the current user. This function is only available through a JWT token, and is not available for all users."
							},
							"response": [
								{
									"id": "cdc5e8d6-9ed7-4455-b648-26acca48882b",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/user/emails",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"emails"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"emails\": [\n    {\n      \"from\": \"consequat in\",\n      \"to\": \"dolore aliquip\",\n      \"created\": \"2014-06-05T16:03:25.503Z\",\n      \"subject\": \"cillum\",\n      \"bodyText\": \"commodo Dui\",\n      \"bodyHTML\": \"deserunt eiusmod\",\n      \"sent\": true,\n      \"providerResponse\": \"do qui ipsum in\",\n      \"userId\": -80357646,\n      \"projectId\": 75176543\n    },\n    {\n      \"from\": \"aliqua amet consequat\",\n      \"to\": \"laboris occaecat nulla est\",\n      \"created\": \"2012-03-15T02:20:10.256Z\",\n      \"subject\": \"reprehenderit officia\",\n      \"bodyText\": \"officia voluptate nostrud commodo\",\n      \"bodyHTML\": \"velit ad consectetur\",\n      \"sent\": false,\n      \"providerResponse\": \"id laboris nisi velit\",\n      \"userId\": 51684465,\n      \"projectId\": -62358372\n    }\n  ],\n  \"success\": true,\n  \"error\": \"et qui reprehenderit\"\n}"
								}
							]
						},
						{
							"name": "Upload photo",
							"id": "bf63210a-ac70-41bb-b5cc-07803b3f22c7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "photo",
											"type": "file",
											"description": "(Required) ",
											"value": null
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/user/photo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"user",
										"photo"
									]
								},
								"description": "Upload a photo for the current user. This function is only available through a JWT token. Don't trust the code generated by the widget, there are examples of using this API in Python, cURL and Node.js under the parameters."
							},
							"response": [
								{
									"id": "9044d418-e6af-4993-83a7-4f0b44670025",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"description": "(Required) ",
													"key": "photo",
													"type": "file"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/photo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"photo"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"url\": \"in\",\n  \"error\": \"ut\"\n}"
								}
							]
						},
						{
							"name": "Change password current user",
							"id": "c8b64534-b7ca-4b9b-854f-0348a116908b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currentPassword\": \"ullamco Duis consequat cupidatat\",\n  \"newPassword\": \"ut anim adipisicing\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/user/change-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"user",
										"change-password"
									]
								},
								"description": "Change the password for the current user account. This function is only available through a JWT token."
							},
							"response": [
								{
									"id": "225ba5e3-a55c-455f-8b7a-81db6df796c5",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currentPassword\": \"ullamco Duis consequat cupidatat\",\n  \"newPassword\": \"ut anim adipisicing\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/change-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"change-password"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
								}
							]
						},
						{
							"name": "Get organizations",
							"id": "1a6e8ef2-c98e-4d2e-8069-9c37c1026d89",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/user/organizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"user",
										"organizations"
									]
								},
								"description": "List all organizations that the current user is a member of. This function is only available through a JWT token."
							},
							"response": [
								{
									"id": "4a180fed-527f-4a67-b985-bb7a8a70bf35",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/user/organizations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"organizations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"organizations\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"users\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeveloperProfile\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"whitelabelId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"headerImg\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"users\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeveloperProfile\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"whitelabelId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"headerImg\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": false,\n  \"error\": \"ex elit\"\n}"
								}
							]
						},
						{
							"name": "Get user by third party activation code",
							"id": "efd5307a-8a7b-4ef1-a01d-3fd8ba30a6d1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"activationCode\": \"labore ea adipisicing\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/user/by-third-party-activation-code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"user",
										"by-third-party-activation-code"
									]
								},
								"description": "Get information about a user through an activation code. This function is only available through a JWT token."
							},
							"response": [
								{
									"id": "2748488f-babb-4375-835e-21d62c74f00c",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"activationCode\": \"labore ea adipisicing\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/by-third-party-activation-code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"by-third-party-activation-code"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"activated\": false,\n  \"created\": \"2019-08-31T17:32:28Z\",\n  \"email\": \"eiusmod\",\n  \"experiments\": {},\n  \"id\": 1,\n  \"name\": \"Jan Jongboom\",\n  \"organizations\": [\n    {\n      \"id\": 33045023,\n      \"name\": \"proident\",\n      \"isDeveloperProfile\": false,\n      \"whitelabelId\": 1700781.5112599581,\n      \"logo\": \"labore anim laboris do\"\n    },\n    {\n      \"id\": 91492304,\n      \"name\": \"velit dolore Lorem\",\n      \"isDeveloperProfile\": false,\n      \"whitelabelId\": 39308401.27320555,\n      \"logo\": \"voluptate anim mollit tempor\"\n    }\n  ],\n  \"pending\": false,\n  \"projects\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"collaborators\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labelingMethod\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isEnterpriseProject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"whitelabelId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastAccessed\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerUserId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerOrganizationId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataExplorerScreenshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"collaborators\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labelingMethod\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isEnterpriseProject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"whitelabelId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastAccessed\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerUserId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerOrganizationId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataExplorerScreenshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"showImagine2022\": true,\n  \"staffInfo\": {\n    \"isStaff\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hasSudoRights\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"companyName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"success\": true,\n  \"username\": \"janjongboom\",\n  \"error\": \"ut veniam\",\n  \"photo\": \"https://usercdn.edgeimpulse.com/photos/1.jpg\",\n  \"lastTosAcceptanceDate\": \"2019-08-31T17:32:28Z\",\n  \"evaluation\": false,\n  \"ambassador\": false\n}"
								}
							]
						},
						{
							"name": "Activate user by third party activation code",
							"id": "8b684c9a-0cf9-409f-acf3-4be66e5c3c79",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"activationCode\": \"eiusmod in\",\n  \"password\": \"amet cillum veniam ut\",\n  \"username\": \"janjongboom\",\n  \"name\": \"Jan Jongboom\",\n  \"privacyPolicy\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/user/activate-by-third-party-activation-code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"user",
										"activate-by-third-party-activation-code"
									]
								},
								"description": "Activate a user that was created by a third party. This function is only available through a JWT token."
							},
							"response": [
								{
									"id": "356953e8-8ada-441b-a1a4-0997506e6c58",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"activationCode\": \"eiusmod in\",\n  \"password\": \"amet cillum veniam ut\",\n  \"username\": \"janjongboom\",\n  \"name\": \"Jan Jongboom\",\n  \"privacyPolicy\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/user/activate-by-third-party-activation-code",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"activate-by-third-party-activation-code"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"qui\",\n  \"token\": \"voluptate sed incididunt do\",\n  \"redirectUrl\": \"dolor\"\n}"
								}
							]
						},
						{
							"name": "Accept Terms of Service",
							"id": "e8a559e1-477b-4395-9ef8-c921a29b5e93",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/user/accept-tos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"user",
										"accept-tos"
									]
								},
								"description": "Accept Terms of Service."
							},
							"response": [
								{
									"id": "c4f1ae36-23c1-4a27-b846-4e37a74e2e24",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/user/accept-tos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"user",
												"accept-tos"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
								}
							]
						}
					],
					"id": "9bd9256a-ca89-46e0-97ac-598317467ad3"
				},
				{
					"name": "users",
					"item": [
						{
							"name": "{user Id}",
							"item": [
								{
									"name": "Get user",
									"id": "9aec8e18-e4c3-4701-8591-709bf2da2389",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":userId"
											],
											"variable": [
												{
													"id": "14a1297c-6873-4d89-adf1-7bdaedf6486e",
													"key": "userId",
													"value": "49175899",
													"description": "(Required) User ID"
												}
											]
										},
										"description": "Get information about a user. This function is only available through a JWT token."
									},
									"response": [
										{
											"id": "87f1fc21-9c90-4303-954e-832e16ad9036",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId",
															"value": "49175899",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"activated\": false,\n  \"created\": \"2019-08-31T17:32:28Z\",\n  \"email\": \"eiusmod\",\n  \"experiments\": {},\n  \"id\": 1,\n  \"name\": \"Jan Jongboom\",\n  \"organizations\": [\n    {\n      \"id\": 33045023,\n      \"name\": \"proident\",\n      \"isDeveloperProfile\": false,\n      \"whitelabelId\": 1700781.5112599581,\n      \"logo\": \"labore anim laboris do\"\n    },\n    {\n      \"id\": 91492304,\n      \"name\": \"velit dolore Lorem\",\n      \"isDeveloperProfile\": false,\n      \"whitelabelId\": 39308401.27320555,\n      \"logo\": \"voluptate anim mollit tempor\"\n    }\n  ],\n  \"pending\": false,\n  \"projects\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"collaborators\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labelingMethod\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isEnterpriseProject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"whitelabelId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastAccessed\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerUserId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerOrganizationId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataExplorerScreenshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"collaborators\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labelingMethod\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isEnterpriseProject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"whitelabelId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastAccessed\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerUserId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerOrganizationId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataExplorerScreenshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"showImagine2022\": true,\n  \"staffInfo\": {\n    \"isStaff\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hasSudoRights\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"companyName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"success\": true,\n  \"username\": \"janjongboom\",\n  \"error\": \"ut veniam\",\n  \"photo\": \"https://usercdn.edgeimpulse.com/photos/1.jpg\",\n  \"lastTosAcceptanceDate\": \"2019-08-31T17:32:28Z\",\n  \"evaluation\": false,\n  \"ambassador\": false\n}"
										}
									]
								},
								{
									"name": "Update user",
									"id": "2136f8c5-0457-462b-b3be-13562a47c9bd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Jan Jongboom\",\n  \"showImagine2022\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":userId"
											],
											"variable": [
												{
													"id": "9913c27e-7761-4a24-b9be-f3874b0620a7",
													"key": "userId",
													"value": "49175899",
													"description": "(Required) User ID"
												}
											]
										},
										"description": "Update user properties such as name. This function is only available through a JWT token."
									},
									"response": [
										{
											"id": "593291f6-302b-4efe-b516-605d143e1dd4",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Jan Jongboom\",\n  \"showImagine2022\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId",
															"value": "49175899",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Delete user",
									"id": "b2643b86-d5a1-4972-9474-078fd65be737",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":userId"
											],
											"variable": [
												{
													"id": "0c491117-c517-4e3c-8297-4881ed4d77ec",
													"key": "userId",
													"value": "49175899",
													"description": "(Required) User ID"
												}
											]
										},
										"description": "Delete a user. This function is only available through a JWT token, and can only remove the current user."
									},
									"response": [
										{
											"id": "a8b433e8-782d-4933-8588-5986e1fcfff5",
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId",
															"value": "49175899",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Activate user",
									"id": "6583e160-5a64-482c-8c41-8b91f3696c61",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"code\": \"veniam officia in dolor\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/:userId/activate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":userId",
												"activate"
											],
											"variable": [
												{
													"id": "dd270939-0bcc-4030-b670-3cdba7ebd8b6",
													"key": "userId",
													"value": "49175899",
													"description": "(Required) User ID"
												}
											]
										},
										"description": "Activate a user account (requires an activation code). This function is only available through a JWT token."
									},
									"response": [
										{
											"id": "459e4ad1-9337-48bf-8622-cdb33a5918c3",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"code\": \"veniam officia in dolor\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId/activate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId",
														"activate"
													],
													"variable": [
														{
															"key": "userId",
															"value": "49175899",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Request activation code",
									"id": "6674db26-76b7-44a8-987d-27759ba693ef",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/:userId/request-activation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":userId",
												"request-activation"
											],
											"variable": [
												{
													"id": "65217804-9958-4577-bc82-9cf0dd5e7bd4",
													"key": "userId",
													"value": "49175899",
													"description": "(Required) User ID"
												}
											]
										},
										"description": "Request a new activation code. This function is only available through a JWT token."
									},
									"response": [
										{
											"id": "21fce66a-9b30-4bb1-8d9f-51e86acd2b3d",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId/request-activation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId",
														"request-activation"
													],
													"variable": [
														{
															"key": "userId",
															"value": "49175899",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "List emails",
									"id": "9bfabe91-79f1-4e84-9e39-16d628ada45a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/:userId/emails",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":userId",
												"emails"
											],
											"variable": [
												{
													"id": "82eca4bf-aaca-41a2-befb-5b3753fdd7fd",
													"key": "userId",
													"value": "49175899",
													"description": "(Required) User ID"
												}
											]
										},
										"description": "Get a list of all emails sent by Edge Impulse to a user. This function is only available through a JWT token, and is not available for all users."
									},
									"response": [
										{
											"id": "b3af7c26-fe6a-45e4-9a69-8daa6e0fb693",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId/emails",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId",
														"emails"
													],
													"variable": [
														{
															"key": "userId",
															"value": "49175899",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"emails\": [\n    {\n      \"from\": \"Ut fugiat labore\",\n      \"to\": \"sit\",\n      \"created\": \"1980-08-26T21:27:08.813Z\",\n      \"subject\": \"laboris magna\",\n      \"bodyText\": \"incididunt labore in occaecat\",\n      \"bodyHTML\": \"non\",\n      \"sent\": true,\n      \"providerResponse\": \"ea esse\",\n      \"userId\": -41705757,\n      \"projectId\": 23741146\n    },\n    {\n      \"from\": \"nulla qui incididun\",\n      \"to\": \"Lorem fugiat adipisicing commodo\",\n      \"created\": \"1950-01-29T18:29:35.750Z\",\n      \"subject\": \"Ut do dolore ani\",\n      \"bodyText\": \"Excepteur qui labore\",\n      \"bodyHTML\": \"in ad\",\n      \"sent\": true,\n      \"providerResponse\": \"Excepteur\",\n      \"userId\": 48030655,\n      \"projectId\": 44777197\n    }\n  ],\n  \"success\": true,\n  \"error\": \"ullamco fugiat ut ad\"\n}"
										}
									]
								},
								{
									"name": "Upload photo",
									"id": "e1170262-62a3-4c6c-929d-0c52dba9e9a3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "photo",
													"type": "file",
													"description": "(Required) ",
													"value": null
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/:userId/photo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":userId",
												"photo"
											],
											"variable": [
												{
													"id": "69222f90-f56f-43fe-8a04-e35ee4069c16",
													"key": "userId",
													"value": "49175899",
													"description": "(Required) User ID"
												}
											]
										},
										"description": "Upload a photo for a user. This function is only available through a JWT token, and is not available for all users."
									},
									"response": [
										{
											"id": "6901722d-a877-4000-a46c-4584b2cff7b0",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"description": "(Required) ",
															"key": "photo",
															"type": "file"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId/photo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId",
														"photo"
													],
													"variable": [
														{
															"key": "userId",
															"value": "49175899",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"url\": \"in\",\n  \"error\": \"ut\"\n}"
										}
									]
								},
								{
									"name": "Change password",
									"id": "95e32408-bd3b-49a7-9e2a-31b240c73034",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"currentPassword\": \"ullamco Duis consequat cupidatat\",\n  \"newPassword\": \"ut anim adipisicing\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/:userId/change-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":userId",
												"change-password"
											],
											"variable": [
												{
													"id": "5b1baa81-5e16-473c-a171-752dd05e0e59",
													"key": "userId",
													"value": "49175899",
													"description": "(Required) User ID"
												}
											]
										},
										"description": "Change the password for a user account. This function is only available through a JWT token."
									},
									"response": [
										{
											"id": "fdeae7bc-6a27-48fe-a49d-3b2314447c86",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"currentPassword\": \"ullamco Duis consequat cupidatat\",\n  \"newPassword\": \"ut anim adipisicing\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId/change-password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId",
														"change-password"
													],
													"variable": [
														{
															"key": "userId",
															"value": "49175899",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Set password for SSO user",
									"id": "4fdfe11f-a2d8-43a8-b642-fb9674f564b2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"accessToken\": \"consequat sed\",\n  \"identityProvider\": \"ut nostrud\",\n  \"password\": \"id consequat anim\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/users/:userId/set-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":userId",
												"set-password"
											],
											"variable": [
												{
													"id": "1a78d757-6345-40bd-9edb-1e640bd67e80",
													"key": "userId",
													"value": "49175899",
													"description": "(Required) User ID"
												}
											]
										},
										"description": "Set the password for a new SSO user. This function is only available through an SSO access token."
									},
									"response": [
										{
											"id": "d00c1e92-6501-4376-8ab1-4d57c704e860",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accessToken\": \"consequat sed\",\n  \"identityProvider\": \"ut nostrud\",\n  \"password\": \"id consequat anim\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId/set-password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId",
														"set-password"
													],
													"variable": [
														{
															"key": "userId",
															"value": "49175899",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Get organizations",
									"id": "1a939b49-2f60-41e2-87a8-c2408a721e7b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/:userId/organizations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":userId",
												"organizations"
											],
											"variable": [
												{
													"id": "d0d0646c-95e6-473e-b967-5a097f32d404",
													"key": "userId",
													"value": "49175899",
													"description": "(Required) User ID"
												}
											]
										},
										"description": "List all organizations for a user. This function is only available through a JWT token."
									},
									"response": [
										{
											"id": "8f21df7c-cd59-4c89-abd0-d665d7c4aa2a",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId/organizations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId",
														"organizations"
													],
													"variable": [
														{
															"key": "userId",
															"value": "49175899",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"organizations\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"users\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeveloperProfile\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"whitelabelId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"headerImg\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"users\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeveloperProfile\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"whitelabelId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"headerImg\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"error\": \"ut in pariatur exercitation\"\n}"
										}
									]
								},
								{
									"name": "Get buckets",
									"id": "8c4e1f0e-ca85-4c38-9bd0-b4763158a439",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/:userId/buckets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												":userId",
												"buckets"
											],
											"variable": [
												{
													"id": "3955170c-0ef1-4724-a2dd-db7ff42de96b",
													"key": "userId",
													"value": "49175899",
													"description": "(Required) User ID"
												}
											]
										},
										"description": "List all organizational storage buckets that a user has access to. This function is only available through a JWT token."
									},
									"response": [
										{
											"id": "5a05bf0d-6e7b-4be0-a6fb-1d8e72d1f260",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/users/:userId/buckets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"users",
														":userId",
														"buckets"
													],
													"variable": [
														{
															"key": "userId",
															"value": "49175899",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"buckets\": [\n    {\n      \"id\": 55229098,\n      \"organizationId\": 32388211,\n      \"organizationName\": \"ut\",\n      \"name\": \"id commodo ea laborum\",\n      \"bucket\": \"ipsum exercitation\",\n      \"region\": \"ea laborum\",\n      \"whitelabelId\": 74147006,\n      \"prefix\": \"laboris ut\"\n    },\n    {\n      \"id\": 35671337,\n      \"organizationId\": 68612155,\n      \"organizationName\": \"reprehenderit eu\",\n      \"name\": \"do esse Ut eiusmod voluptate\",\n      \"bucket\": \"cillum irure ame\",\n      \"region\": \"irure occaecat laborum\",\n      \"whitelabelId\": -10115938,\n      \"prefix\": \"magna ut laboris\"\n    }\n  ],\n  \"success\": true,\n  \"error\": \"nisi commodo culpa irure consequat\"\n}"
										}
									]
								}
							],
							"id": "33785ab2-6fa6-41ff-8ca3-b8e0a13d11aa"
						},
						{
							"name": "Get buckets current user",
							"id": "dbf84091-a427-42a5-91b5-73281943bf6e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/users/buckets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"users",
										"buckets"
									]
								},
								"description": "List all organizational storage buckets that the current user has access to. This function is only available through a JWT token."
							},
							"response": [
								{
									"id": "a88e7b5a-e8bf-4b0b-af9f-2ad4b818d9c6",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/users/buckets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"users",
												"buckets"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"buckets\": [\n    {\n      \"id\": 8780281,\n      \"organizationId\": -842659,\n      \"organizationName\": \"ipsum dolore in anim nisi\",\n      \"name\": \"aliquip in laborum\",\n      \"bucket\": \"do aute\",\n      \"region\": \"anim do deserunt\",\n      \"whitelabelId\": -66692294,\n      \"prefix\": \"amet sint\"\n    },\n    {\n      \"id\": -6673584,\n      \"organizationId\": -6857963,\n      \"organizationName\": \"dolore nulla consequat\",\n      \"name\": \"consequat elit mollit ut\",\n      \"bucket\": \"reprehende\",\n      \"region\": \"incididunt ut\",\n      \"whitelabelId\": 15109296,\n      \"prefix\": \"ex enim\"\n    }\n  ],\n  \"success\": true,\n  \"error\": \"aliqua\"\n}"
								}
							]
						}
					],
					"id": "5c2094fa-07c1-47a6-a3e6-b83b244197bb"
				},
				{
					"name": "third-party-auth",
					"item": [
						{
							"name": "{auth Id}",
							"item": [
								{
									"name": "Get third party auth",
									"id": "cd9175bb-3149-4cee-9798-60e250ed6c8a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/third-party-auth/:authId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"third-party-auth",
												":authId"
											],
											"variable": [
												{
													"id": "df97e9fa-1c25-4545-96b8-2227eca1f0fd",
													"key": "authId",
													"value": "49175899",
													"description": "(Required) Auth ID"
												}
											]
										},
										"description": "Get information about a third party authentication partner"
									},
									"response": [
										{
											"id": "63a5c1a4-eb00-4409-8879-2e41a96aea81",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/third-party-auth/:authId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"third-party-auth",
														":authId"
													],
													"variable": [
														{
															"key": "authId",
															"value": "49175899",
															"description": "(Required) Auth ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"auth\": {\n    \"id\": 41660079,\n    \"name\": \"qui in adipisicing\",\n    \"description\": \"magn\",\n    \"logo\": \"al\",\n    \"domains\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"created\": \"1947-12-18T05:23:50.093Z\"\n  },\n  \"success\": false,\n  \"error\": \"commodo sunt tempor cupidatat id\"\n}"
										}
									]
								},
								{
									"name": "Update third party auth",
									"id": "ec44921c-d1e6-4ea2-9497-101f1a44df91",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"ut cill\",\n  \"description\": \"labore eiusmod\",\n  \"logo\": \"ex cillum consectetur adipisicing labore\",\n  \"domains\": [\n    \"incididunt fugiat\",\n    \"cillum Duis\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/third-party-auth/:authId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"third-party-auth",
												":authId"
											],
											"variable": [
												{
													"id": "0357fe86-9d26-47e9-9491-0b3dbb6a6ea8",
													"key": "authId",
													"value": "49175899",
													"description": "(Required) Auth ID"
												}
											]
										},
										"description": "Update a third party authentication partner"
									},
									"response": [
										{
											"id": "c94237ff-a505-4bf6-9e99-b7343b3778db",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"consequat id nulla sit\",\n  \"description\": \"ut cupidatat reprehender\",\n  \"logo\": \"pariatur ad\",\n  \"domains\": [\n    \"amet dolore est\",\n    \"quis\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/third-party-auth/:authId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"third-party-auth",
														":authId"
													],
													"variable": [
														{
															"key": "authId",
															"value": "49175899",
															"description": "(Required) Auth ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Delete third party auth",
									"id": "50525668-ade7-40bf-af50-7f10c9468e15",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/third-party-auth/:authId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"third-party-auth",
												":authId"
											],
											"variable": [
												{
													"id": "d6950474-41fb-487a-8d94-ee9d29d8aaab",
													"key": "authId",
													"value": "49175899",
													"description": "(Required) Auth ID"
												}
											]
										},
										"description": "Delete a third party authentication partner"
									},
									"response": [
										{
											"id": "0c9d5728-4a7a-434f-93c3-29ceea76dd7c",
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/third-party-auth/:authId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"third-party-auth",
														":authId"
													],
													"variable": [
														{
															"key": "authId",
															"value": "49175899",
															"description": "(Required) Auth ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Create or login a user",
									"id": "cbe70713-a76f-4d6d-b0f6-119e966f0519",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Jan Jongboom\",\n  \"username\": \"janjongboom\",\n  \"email\": \"jan@edgeimpulse.com\",\n  \"privacyPolicy\": false,\n  \"projectName\": \"nostrud qui\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/third-party-auth/:authId/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"third-party-auth",
												":authId",
												"login"
											],
											"variable": [
												{
													"id": "a09205b0-71e6-4740-9d15-028b1f274ca3",
													"key": "authId",
													"value": "49175899",
													"description": "(Required) Auth ID"
												}
											]
										},
										"description": "Login as a user as a third-party authentication provider. If the user does not exists, it's automatically created. You can only log in as users that were previously created by you."
									},
									"response": [
										{
											"id": "196ae9b8-b485-4abb-8091-489fd10d2db6",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Jan Jongboom\",\n  \"username\": \"janjongboom\",\n  \"email\": \"jan@edgeimpulse.com\",\n  \"privacyPolicy\": false,\n  \"projectName\": \"nostrud qui\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/third-party-auth/:authId/login",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"third-party-auth",
														":authId",
														"login"
													],
													"variable": [
														{
															"key": "authId",
															"value": "49175899",
															"description": "(Required) Auth ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"status\": \"userNotManagedByThirdParty\",\n  \"success\": false,\n  \"error\": \"mollit pariatur cupidatat\",\n  \"jwtToken\": \"anim id occaecat\"\n}"
										}
									]
								}
							],
							"id": "5ec16069-a4ac-459d-aca9-50b230763d30"
						},
						{
							"name": "Get all third party auth",
							"id": "68b6a9dc-d8b7-46b1-8c73-3803134c9954",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/third-party-auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"third-party-auth"
									]
								},
								"description": "Get information about all third party authentication partners"
							},
							"response": [
								{
									"id": "7b917ca2-fdd1-493a-9dc9-74285098e060",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/third-party-auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"third-party-auth"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"auths\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"domains\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"domains\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": false,\n  \"error\": \"elit ad laborum tempor\"\n}"
								}
							]
						},
						{
							"name": "Create third party auth",
							"id": "bb050850-b482-4119-a3a6-d9acf7b82868",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"voluptate amet\",\n  \"description\": \"Ut velit cillum adipisicing\",\n  \"logo\": \"qui dolor com\",\n  \"domains\": [\n    \"tempor ipsum enim sunt sint\",\n    \"labo\"\n  ],\n  \"secretKey\": \"elit tempor\",\n  \"apiKey\": \"cupidatat est eu qui\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/third-party-auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"third-party-auth"
									]
								},
								"description": "Create a new third party authentication partner"
							},
							"response": [
								{
									"id": "d55d0041-86f7-44b8-93de-93eddd6551cd",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"nostrud ut elit\",\n  \"description\": \"cillum am\",\n  \"logo\": \"adipisicing Lorem mollit\",\n  \"domains\": [\n    \"reprehenderit consectetur\",\n    \"ad eiusmod Ut\"\n  ],\n  \"secretKey\": \"commodo veniam occaecat sit\",\n  \"apiKey\": \"velit aliqua qui nulla cillum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/third-party-auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"third-party-auth"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"apiKey\": \"Ex\",\n  \"id\": -3085797,\n  \"secretKey\": \"Ut sed pariatur fugiat\",\n  \"success\": true,\n  \"error\": \"occaecat labore qui nostrud \"\n}"
								}
							]
						}
					],
					"id": "0e44cd75-68ef-416a-9d0c-8c5b5906c7e3"
				},
				{
					"name": "{project Id}",
					"item": [
						{
							"name": "collaborators",
							"item": [
								{
									"name": "Add collaborator",
									"id": "8ea4ae52-cdc7-4e0c-82e4-87bf8ccb9900",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"usernameOrEmail\": \"officia sed\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/collaborators/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"collaborators",
												"add"
											],
											"variable": [
												{
													"id": "c06d1391-2751-4038-860c-6f365008bf92",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Add a collaborator to a project."
									},
									"response": [
										{
											"id": "86daf143-0ade-4100-af9e-5d7e39380a8f",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"usernameOrEmail\": \"officia sed\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/collaborators/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"collaborators",
														"add"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Remove collaborator",
									"id": "f7daacc2-fb60-4583-b9ec-507180260abb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"usernameOrEmail\": \"officia sed\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/collaborators/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"collaborators",
												"remove"
											],
											"variable": [
												{
													"id": "7c075c69-becc-4629-aeaf-9efbc1f3b8b7",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Remove a collaborator to a project. Note that you cannot invoke this function if only a single collaborator is present."
									},
									"response": [
										{
											"id": "fdabe960-018b-49db-9536-c70dbe692933",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"usernameOrEmail\": \"officia sed\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/collaborators/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"collaborators",
														"remove"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Transfer ownership (user)",
									"id": "66d61660-207c-46da-9a4d-ae8c192e52ec",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"usernameOrEmail\": \"officia sed\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/collaborators/transfer-ownership",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"collaborators",
												"transfer-ownership"
											],
											"variable": [
												{
													"id": "c237c277-21de-475d-9e2b-96b99a564eb3",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Transfer ownership of a project to another user."
									},
									"response": [
										{
											"id": "5924caa7-4825-4e0d-aeef-32bd79837187",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"usernameOrEmail\": \"officia sed\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/collaborators/transfer-ownership",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"collaborators",
														"transfer-ownership"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Transfer ownership (organization)",
									"id": "c03d945f-b6f7-4601-97c2-287523df7669",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"organizationId\": -13943221\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/collaborators/transfer-ownership-org",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"collaborators",
												"transfer-ownership-org"
											],
											"variable": [
												{
													"id": "643f5c6b-bc5a-441f-bab4-0aab4b7d9c01",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Transfer ownership of a project to another organization."
									},
									"response": [
										{
											"id": "317ae7d3-f15a-4fa5-9b31-6850478e97a0",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"organizationId\": -13943221\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/collaborators/transfer-ownership-org",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"collaborators",
														"transfer-ownership-org"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								}
							],
							"id": "e6fb376f-e27b-40eb-8f99-e989f877f310"
						},
						{
							"name": "hmackeys",
							"item": [
								{
									"name": "Get HMAC keys",
									"id": "36cf1c2e-5dbf-4d9d-8ea2-b4503b286ca9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/hmackeys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"hmackeys"
											],
											"variable": [
												{
													"id": "5acd3b22-bf8a-46d7-af5a-54a01f9acf02",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Retrieve all HMAC keys."
									},
									"response": [
										{
											"id": "2b90c1d2-eea5-44c3-8a39-e5bc309c0606",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/hmackeys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"hmackeys"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hmacKeys\": [\n    {\n      \"id\": 98158997,\n      \"hmacKey\": \"do quis enim comm\",\n      \"isDevelopmentKey\": true,\n      \"name\": \"magna\",\n      \"created\": \"2008-02-14T01:54:33.669Z\"\n    },\n    {\n      \"id\": 69156288,\n      \"hmacKey\": \"consectetur veniam\",\n      \"isDevelopmentKey\": false,\n      \"name\": \"est aliqui\",\n      \"created\": \"2009-07-28T21:26:42.494Z\"\n    }\n  ],\n  \"success\": false,\n  \"error\": \"commodo veniam ad id\"\n}"
										}
									]
								},
								{
									"name": "Add HMAC key",
									"id": "b148eb86-c897-431d-b702-ed6da80405ea",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"nulla pariatur eu\",\n  \"hmacKey\": \"elit ut laboris nisi\",\n  \"isDevelopmentKey\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/hmackeys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"hmackeys"
											],
											"variable": [
												{
													"id": "f1003343-3e93-4968-9104-1583e36f13cd",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Add an HMAC key. If you set `developmentKey` to `true` this flag will be removed from the current development HMAC key."
									},
									"response": [
										{
											"id": "4a4dd0d2-ddcf-424f-bc2f-2dfa06297bef",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"nulla pariatur eu\",\n  \"hmacKey\": \"elit ut laboris nisi\",\n  \"isDevelopmentKey\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/hmackeys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"hmackeys"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Remove HMAC key",
									"id": "1118a8b2-68be-4e06-985e-1f15d28736a6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/hmackeys/:hmacId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"hmackeys",
												":hmacId"
											],
											"variable": [
												{
													"id": "8dd495dc-9900-4127-8432-8801081ef922",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												},
												{
													"id": "e3e4fd2f-c50b-4e3f-bd78-84b9c4709340",
													"key": "hmacId",
													"value": "49175899",
													"description": "(Required) Hmac key ID"
												}
											]
										},
										"description": "Revoke an HMAC key. Note that if you revoke the development key some services (such as automatic provisioning of devices through the serial daemon) will no longer work."
									},
									"response": [
										{
											"id": "06404154-88ee-4ff3-8585-90e7c147be87",
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/hmackeys/:hmacId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"hmackeys",
														":hmacId"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"key": "hmacId",
															"value": "49175899",
															"description": "(Required) Hmac key ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								}
							],
							"id": "a63a7060-94e3-487f-9d96-5857708e3a06"
						},
						{
							"name": "apikeys",
							"item": [
								{
									"name": "Get API keys",
									"id": "fa2c1072-a411-4816-adbb-8ff2d6f6b57c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/apikeys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"apikeys"
											],
											"variable": [
												{
													"id": "811baa6d-ff81-4341-8cb5-dd3b4933d1b0",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Retrieve all API keys. This does **not** return the full API key, but only a portion (for security purposes). The development key will be returned in full, as it'll be set in devices and is thus not private."
									},
									"response": [
										{
											"id": "bd710704-4a12-4c24-83cd-28ca27bb034a",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/apikeys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"apikeys"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"apiKeys\": [\n    {\n      \"id\": 45626916,\n      \"name\": \"non ea elit\",\n      \"apiKey\": \"nisi et deserunt\",\n      \"isDevelopmentKey\": false,\n      \"created\": \"1976-02-27T02:14:00.618Z\",\n      \"role\": \"admin\"\n    },\n    {\n      \"id\": -63551118,\n      \"name\": \"Lorem\",\n      \"apiKey\": \"est amet laborum\",\n      \"isDevelopmentKey\": false,\n      \"created\": \"1952-02-02T21:30:15.376Z\",\n      \"role\": \"admin\"\n    }\n  ],\n  \"success\": true,\n  \"error\": \"do id\"\n}"
										}
									]
								},
								{
									"name": "Add API key",
									"id": "f8eaf715-b652-44eb-851f-1ce0072139e6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"reprehenderit veniam\",\n  \"apiKey\": \"aliquip eiusmod commodo voluptate\",\n  \"isDevelopmentKey\": false,\n  \"role\": \"ingestiononly\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/apikeys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"apikeys"
											],
											"variable": [
												{
													"id": "b254962d-1874-4f4c-b1aa-b8ec1585c498",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Add an API key. If you set `developmentKey` to `true` this flag will be removed from the current development API key."
									},
									"response": [
										{
											"id": "020f69c2-a290-4cb0-93a8-5c8f50ee915e",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"reprehenderit veniam\",\n  \"apiKey\": \"aliquip eiusmod commodo voluptate\",\n  \"isDevelopmentKey\": false,\n  \"role\": \"ingestiononly\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/apikeys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"apikeys"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Revoke API key",
									"id": "963eaac4-127f-448e-b1d0-79efe819913b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/apikeys/:apiKeyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"apikeys",
												":apiKeyId"
											],
											"variable": [
												{
													"id": "414667c3-923a-4502-8d69-077dc23a14f7",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												},
												{
													"id": "7a324bd2-5374-413e-ad6c-ac240c2a10e1",
													"key": "apiKeyId",
													"value": "49175899",
													"description": "(Required) API key ID"
												}
											]
										},
										"description": "Revoke an API key. Note that if you revoke the development API key some services (such as automatic provisioning of devices through the serial daemon) will no longer work."
									},
									"response": [
										{
											"id": "860126cd-16cd-4f87-800b-609465e0fbe4",
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/apikeys/:apiKeyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"apikeys",
														":apiKeyId"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"key": "apiKeyId",
															"value": "49175899",
															"description": "(Required) API key ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								}
							],
							"id": "643049f3-22c9-45a7-a86b-c59ba817982e"
						},
						{
							"name": "versions",
							"item": [
								{
									"name": "{version Id}",
									"item": [
										{
											"name": "Update version",
											"id": "5fc35176-4f39-41fb-8650-512c38b04bbe",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"sit in\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/versions/:versionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"versions",
														":versionId"
													],
													"variable": [
														{
															"id": "8c96faf8-8315-48da-8695-f9bbd375886c",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "efd6cf72-5f4b-495f-9971-020b0603f74a",
															"key": "versionId",
															"value": "49175899",
															"description": "(Required) Version ID"
														}
													]
												},
												"description": "Updates a version, this only updates fields that were set in the body."
											},
											"response": [
												{
													"id": "3282b17c-5bcb-4acd-a1cd-c38afab7c169",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"sit in\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/versions/:versionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"versions",
																":versionId"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "versionId",
																	"value": "49175899",
																	"description": "(Required) Version ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Delete versions",
											"id": "fd472dcc-c370-4460-b54b-24f91cf9d393",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/versions/:versionId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"versions",
														":versionId"
													],
													"variable": [
														{
															"id": "7d2ac506-b0ae-4a13-a43f-7fb004a41755",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "29bcfe52-fea4-49b2-8778-7c96792f51cc",
															"key": "versionId",
															"value": "49175899",
															"description": "(Required) Version ID"
														}
													]
												},
												"description": "Delete a version. This does not delete the version from cold storage."
											},
											"response": [
												{
													"id": "e0cf1fca-1a2b-42f4-a149-c7a55840c48d",
													"name": "OK",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/versions/:versionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"versions",
																":versionId"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "versionId",
																	"value": "49175899",
																	"description": "(Required) Version ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Make version private",
											"id": "00629692-0652-4d4f-abbd-5e966fdccc1a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/versions/:versionId/make-private",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"versions",
														":versionId",
														"make-private"
													],
													"variable": [
														{
															"id": "69dc8f73-ac69-469a-9739-e707c4a02d2f",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "f615842b-43ad-4cde-863f-2286c6a63bee",
															"key": "versionId",
															"value": "49175899",
															"description": "(Required) Version ID"
														}
													]
												},
												"description": "Make a public version private."
											},
											"response": [
												{
													"id": "eba374c6-7fba-4ea8-9168-af3abf741e5b",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/versions/:versionId/make-private",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"versions",
																":versionId",
																"make-private"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "versionId",
																	"value": "49175899",
																	"description": "(Required) Version ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										}
									],
									"id": "c28e7bd5-41e5-4f4d-b223-702f44ee7876"
								},
								{
									"name": "List versions",
									"id": "0ec6bdbf-5fff-4864-a6b2-23656a493dba",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"versions"
											],
											"variable": [
												{
													"id": "de1bb444-f5fd-4515-8bc2-9494abea5d90",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Get all versions for this project."
									},
									"response": [
										{
											"id": "8266e69e-814e-42d4-8214-7bbed015e14b",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/versions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"versions"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"nostrud l\",\n  \"nextVersion\": 95808319,\n  \"versions\": [\n    {\n      \"id\": 23601477,\n      \"version\": -55910487,\n      \"description\": \"exercitation magna veniam ut laborum\",\n      \"bucket\": {\n        \"path\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"organizationName\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"bucket\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"created\": \"1964-10-18T14:08:44.318Z\",\n      \"userId\": -86595161,\n      \"userName\": \"dolore adipisicing dolor\",\n      \"userPhoto\": \"ex\",\n      \"publicProjectId\": -73071195,\n      \"publicProjectUrl\": \"in ex\",\n      \"trainingAccuracy\": 13333954.439265132,\n      \"testAccuracy\": -81505183.79158407,\n      \"totalSamplesCount\": \"nostrud proident\"\n    },\n    {\n      \"id\": 45768935,\n      \"version\": -55921188,\n      \"description\": \"nostrud et\",\n      \"bucket\": {\n        \"path\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"organizationName\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"bucket\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"created\": \"1967-04-29T08:49:10.460Z\",\n      \"userId\": 965292,\n      \"userName\": \"non\",\n      \"userPhoto\": \"proident Duis\",\n      \"publicProjectId\": -82377093,\n      \"publicProjectUrl\": \"in in reprehenderit\",\n      \"trainingAccuracy\": -28183786.014989838,\n      \"testAccuracy\": -76863347.35207856,\n      \"totalSamplesCount\": \"do sit laborum aliquip\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "List public versions",
									"id": "195afc14-56bc-457a-9b98-a449af98d42a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/versions/public",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"versions",
												"public"
											],
											"variable": [
												{
													"id": "01d84ca8-b6f4-4e83-85d6-39f4cde4767b",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Get all public versions for this project. You don't need any authentication for this function."
									},
									"response": [
										{
											"id": "d5904984-7a45-44fb-850b-52df6bdeb338",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/versions/public",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"versions",
														"public"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": false,\n  \"versions\": [\n    {\n      \"version\": -37305048,\n      \"publicProjectId\": 84692638,\n      \"publicProjectUrl\": \"pariatur Lorem dolore in aliquip\"\n    },\n    {\n      \"version\": 79162113,\n      \"publicProjectId\": 17313800,\n      \"publicProjectUrl\": \"id\"\n    }\n  ],\n  \"error\": \"nulla sit non\"\n}"
										}
									]
								}
							],
							"id": "ff484f3d-12f6-4a08-b801-5f828f3a575a"
						},
						{
							"name": "devices",
							"item": [
								{
									"name": "Lists devices",
									"id": "2ab73898-f715-47a9-9273-7a7387425e15",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"devices"
											],
											"variable": [
												{
													"id": "9a8d516b-352d-4cc2-9066-68cc0a06ec7c",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "List all devices for this project. Devices get included here if they connect to the remote management API or if they have sent data to the ingestion API and had the `device_id` field set."
									},
									"response": [
										{
											"id": "e8b8d1c0-d4d1-46d6-a37a-5dc1ad75713a",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/devices",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"devices"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"enim amet aliquip\",\n  \"devices\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSeen\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sensors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"remote_mgmt_connected\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"supportsSnapshotStreaming\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"remote_mgmt_host\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSeen\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sensors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"remote_mgmt_connected\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"supportsSnapshotStreaming\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"remote_mgmt_host\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create device",
									"id": "7dfe0f5c-c215-4d66-be6e-c40c6c2288d5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceId\": \"ac:87:a3:0a:2d:1b\",\n  \"deviceType\": \"DISCO_L475VG_IOT01A\",\n  \"ifNotExists\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/devices/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"devices",
												"create"
											],
											"variable": [
												{
													"id": "a5e44cf4-00b4-4f14-b93c-91c8130d750d",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Create a new device. If you set `ifNotExists` to `false` and the device already exists, the `deviceType` will be overwritten."
									},
									"response": [
										{
											"id": "5ac35f2c-75ab-46e2-a2c8-92c0f6e5ee57",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceId\": \"ac:87:a3:0a:2d:1b\",\n  \"deviceType\": \"DISCO_L475VG_IOT01A\",\n  \"ifNotExists\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/devices/create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"devices",
														"create"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Rename",
									"id": "8be4cf61-fa35-4313-a64b-53095f1e4f37",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Jan's development board\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/devices/:deviceId/rename",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"devices",
												":deviceId",
												"rename"
											],
											"variable": [
												{
													"id": "07b0390d-4ddf-4d0f-9500-adca39a7bb7c",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												},
												{
													"id": "1a30c715-07fe-4afe-b7c1-254813c6d7a8",
													"key": "deviceId",
													"value": "ipsum non sunt",
													"description": "(Required) Device ID"
												}
											]
										},
										"description": "Set the current name for a device."
									},
									"response": [
										{
											"id": "449d7b33-6423-4988-9aed-25cb2405be00",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Jan's development board\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/devices/:deviceId/rename",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"devices",
														":deviceId",
														"rename"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"key": "deviceId",
															"value": "ipsum non sunt",
															"description": "(Required) Device ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								}
							],
							"id": "33d1608d-537e-423d-bd43-913a5485cb77"
						},
						{
							"name": "device/{device Id}",
							"item": [
								{
									"name": "Get device",
									"id": "ba0e165c-4598-4f46-8552-690cbe16b852",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/device/:deviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"device",
												":deviceId"
											],
											"variable": [
												{
													"id": "c71fc233-2e08-4dfe-86a1-bca8e11c63d2",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												},
												{
													"id": "a6648f83-907e-4d71-8e77-6a976b01c4e2",
													"key": "deviceId",
													"value": "ipsum non sunt",
													"description": "(Required) Device ID"
												}
											]
										},
										"description": "Retrieves a single device"
									},
									"response": [
										{
											"id": "a3685cec-a72b-4a13-b466-73361f58decc",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/device/:deviceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"device",
														":deviceId"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"key": "deviceId",
															"value": "ipsum non sunt",
															"description": "(Required) Device ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": false,\n  \"error\": \"commodo anim\",\n  \"device\": {\n    \"id\": 1,\n    \"deviceId\": \"38:f9:d3:d7:62:03\",\n    \"created\": \"2019-07-21T17:32:28Z\",\n    \"lastSeen\": \"2019-08-31T17:32:28Z\",\n    \"name\": \"m6d.1 desk sensor\",\n    \"deviceType\": \"DISCO-L475VG\",\n    \"sensors\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"remote_mgmt_connected\": true,\n    \"supportsSnapshotStreaming\": true,\n    \"remote_mgmt_host\": \"ea irure mollit incididun\"\n  }\n}"
										}
									]
								},
								{
									"name": "Delete device",
									"id": "7dba2ff5-6868-4a13-b2a5-dbb5a28a86a0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/device/:deviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"device",
												":deviceId"
											],
											"variable": [
												{
													"id": "db4d1a36-78c9-4ca6-b593-80b43db5835f",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												},
												{
													"id": "b5024b46-a3a9-4b2d-86f3-a1b1f239a377",
													"key": "deviceId",
													"value": "ipsum non sunt",
													"description": "(Required) Device ID"
												}
											]
										},
										"description": "Delete a device. When this device sends a new message to ingestion or connects to remote management the device will be recreated."
									},
									"response": [
										{
											"id": "324678e3-0925-49e0-a39e-1ccb15771246",
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/device/:deviceId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"device",
														":deviceId"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"key": "deviceId",
															"value": "ipsum non sunt",
															"description": "(Required) Device ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Start sampling",
									"id": "1b6fe03a-7562-4e80-95c1-60999353c3e0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"label\": \"aute et ad fugiat\",\n  \"lengthMs\": -97003452,\n  \"category\": \"anomaly\",\n  \"intervalMs\": 11240489.16400282,\n  \"sensor\": \"nisi\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/device/:deviceId/start-sampling",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"device",
												":deviceId",
												"start-sampling"
											],
											"variable": [
												{
													"id": "5ae34604-80aa-431c-8e93-0cb8542933e7",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												},
												{
													"id": "789fbe10-e9f4-42a8-97e4-5677b880519e",
													"key": "deviceId",
													"value": "ipsum non sunt",
													"description": "(Required) Device ID"
												}
											]
										},
										"description": "Start sampling on a device. This function returns immediately. Updates are streamed through the websocket API."
									},
									"response": [
										{
											"id": "3ba822b5-a8e7-478d-888d-65ebb976f565",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"label\": \"aute et ad fugiat\",\n  \"lengthMs\": -97003452,\n  \"category\": \"anomaly\",\n  \"intervalMs\": 11240489.16400282,\n  \"sensor\": \"nisi\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/device/:deviceId/start-sampling",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"device",
														":deviceId",
														"start-sampling"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"key": "deviceId",
															"value": "ipsum non sunt",
															"description": "(Required) Device ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"amet qui sunt\",\n  \"id\": -13958880\n}"
										}
									]
								}
							],
							"id": "f479ae19-7e4c-4b4f-b8d7-4248cb413011"
						},
						{
							"name": "raw-data",
							"item": [
								{
									"name": "label-object-detection-queue",
									"item": [
										{
											"name": "Object detection label queue",
											"id": "96868fbd-6cdd-4aef-8be1-464526e394dc",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/label-object-detection-queue",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														"label-object-detection-queue"
													],
													"variable": [
														{
															"id": "b8acfc26-a8bf-45ee-b800-d5fdf995beee",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Get all unlabeled items from the object detection queue."
											},
											"response": [
												{
													"id": "b33e6fd7-3190-4bbb-a08f-83413d27dcfe",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/label-object-detection-queue",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																"label-object-detection-queue"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"samples\": [\n    {\n      \"id\": -70060490\n    },\n    {\n      \"id\": 22846781\n    }\n  ],\n  \"success\": true,\n  \"error\": \"irure ex voluptate cupidatat\"\n}"
												}
											]
										},
										{
											"name": "Object detection label queue count",
											"id": "8be9f588-1a4b-4aad-bae6-a41ee979426d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/label-object-detection-queue/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														"label-object-detection-queue",
														"count"
													],
													"variable": [
														{
															"id": "5da3f9ed-07ea-4c52-86fe-10bed3ee6fad",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Get count for unlabeled items from the object detection queue."
											},
											"response": [
												{
													"id": "3967f62c-be41-420d-89d6-7cec140ce643",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/label-object-detection-queue/count",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																"label-object-detection-queue",
																"count"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"samplesCount\": -79456605,\n  \"success\": false,\n  \"error\": \"nisi velit irure non\"\n}"
												}
											]
										}
									],
									"id": "c8505b52-6c7d-4415-9845-2dab7037bcaf"
								},
								{
									"name": "delete-all",
									"item": [
										{
											"name": "Remove all samples",
											"id": "6eef99c7-8f89-43cc-9831-238cbc5471ee",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/delete-all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														"delete-all"
													],
													"variable": [
														{
															"id": "1c6ed0c3-d67d-41eb-a8b4-f9b9d43a3182",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Deletes all samples for this project over all categories. This also invalidates all DSP and learn blocks. Note that this does not delete the data from cold storage."
											},
											"response": [
												{
													"id": "ebfbde48-1c35-4471-aa0d-308f6f361187",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/delete-all",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																"delete-all"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Remove all samples by category",
											"id": "c52d6f9a-1c3a-457a-81d7-a45814fad7ee",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/delete-all/:category",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														"delete-all",
														":category"
													],
													"variable": [
														{
															"id": "7beaf8d4-129b-44ac-9ef1-bf7eb78da20e",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "687e4a61-0454-4524-a628-7161d97139a4",
															"key": "category",
															"value": "testing",
															"description": "(Required) Which of the three acquisition categories to download data from"
														}
													]
												},
												"description": "Deletes all samples for this project over a single category. Note that this does not delete the data from cold storage."
											},
											"response": [
												{
													"id": "51483fb7-2a4c-4547-8f28-cefb2cbd3e2d",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/delete-all/:category",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																"delete-all",
																":category"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "category",
																	"value": "testing",
																	"description": "(Required) Which of the three acquisition categories to download data from"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										}
									],
									"id": "d63a2046-9a84-4d04-ad49-2aa47b3a4004"
								},
								{
									"name": "{sample Id}",
									"item": [
										{
											"name": "Get sample",
											"id": "395c1689-b989-45c2-97cf-d569e8aa6c56",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId?limitPayloadValues=49175899",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId"
													],
													"query": [
														{
															"key": "limitPayloadValues",
															"value": "49175899",
															"description": "Limit the number of payload values in the response"
														}
													],
													"variable": [
														{
															"id": "0ce847b2-4387-4ce0-8064-1bc08e97748a",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "ffa486a8-1377-497b-8577-60231be31287",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Get a sample."
											},
											"response": [
												{
													"id": "86078a12-97f8-4870-a9fe-76765b284117",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId?limitPayloadValues=49175899",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId"
															],
															"query": [
																{
																	"key": "limitPayloadValues",
																	"value": "49175899"
																}
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"payload\": {\n    \"device_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sensors\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"values\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"device_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cropStart\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cropEnd\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"sample\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"filename\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signatureValidate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"created\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"category\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"coldstorageFilename\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"label\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"intervalMs\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"frequency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"originalIntervalMs\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"originalFrequency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sensors\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"valuesCount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"added\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"boundingBoxes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"boundingBoxesType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"chartType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isDisabled\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isProcessing\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"processingError\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signatureMethod\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signatureKey\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"totalLengthMs\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"thumbnailVideo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"thumbnailVideoFull\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"processingJobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"success\": true,\n  \"totalPayloadLength\": -52989835,\n  \"error\": \"amet\"\n}"
												}
											]
										},
										{
											"name": "Remove sample",
											"id": "03c3e9a5-1e97-4f5b-bc63-a4cded8fc531",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId"
													],
													"variable": [
														{
															"id": "f5a0f0a2-f7fb-40ac-885e-6f4319a66c95",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "2d2ff24b-bec4-4f40-98e7-737bbf6671b8",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Deletes the sample. Note that this does not delete the data from cold storage."
											},
											"response": [
												{
													"id": "850fcf93-f5de-44f5-b467-4a1700895684",
													"name": "OK",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Download file",
											"id": "ec63dff0-b8ae-490c-a586-8b78ddbb2dd5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/octet-stream"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/raw",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"raw"
													],
													"variable": [
														{
															"id": "e50c7b9d-f183-4502-b249-ae2cd60880e9",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "fda268ce-b6fa-428c-b32c-097e560909fa",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Download a sample in it's original format as uploaded to the ingestion service."
											},
											"response": [
												{
													"id": "6047efbb-46bc-499b-af20-0a0d87ab2b23",
													"name": "CBOR or JSON file",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/raw",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"raw"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/octet-stream"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "ipsum non sunt"
												}
											]
										},
										{
											"name": "Get WAV file",
											"id": "a07cb761-aac0-4fd3-9710-471fa665fc9b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "audio/wav"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/wav?axisIx=49175899&sliceStart=49175899&sliceEnd=49175899",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"wav"
													],
													"query": [
														{
															"key": "axisIx",
															"value": "49175899",
															"description": "(Required) Axis index"
														},
														{
															"key": "sliceStart",
															"value": "49175899",
															"description": "Begin index of the slice"
														},
														{
															"key": "sliceEnd",
															"value": "49175899",
															"description": "End index of the slice"
														}
													],
													"variable": [
														{
															"id": "1db30603-1201-4702-9942-babeb704d748",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "bafea611-b34c-4b65-9715-f4ac39946d94",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Get a sample as a WAV file. This only applies to samples with an audio axis."
											},
											"response": [
												{
													"id": "1ba71053-06f7-44b7-9815-04a4545b8deb",
													"name": "Wav file",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/wav?axisIx=49175899&sliceStart=49175899&sliceEnd=49175899",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"wav"
															],
															"query": [
																{
																	"key": "axisIx",
																	"value": "49175899"
																},
																{
																	"key": "sliceStart",
																	"value": "49175899"
																},
																{
																	"key": "sliceEnd",
																	"value": "49175899"
																}
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "audio/wav"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "ipsum non sunt"
												}
											]
										},
										{
											"name": "Get image file",
											"id": "b74ec167-78b9-4247-9b65-f12c42f1dd6c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "image/jpeg"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/image?afterInputBlock=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"image"
													],
													"query": [
														{
															"key": "afterInputBlock",
															"value": "false",
															"description": "Whether to process the image through the input block first"
														}
													],
													"variable": [
														{
															"id": "23da522d-b3bd-44f6-91a3-8fd2c256e0d6",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "7c67e964-ff77-4cbc-90a0-f6e8da45687f",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Get a sample as an image file. This only applies to samples with RGBA data."
											},
											"response": [
												{
													"id": "3f664275-2d6d-4d8b-84ff-e25ecddfdfda",
													"name": "Image file (either JPEG or PNG format)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/image?afterInputBlock=false",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"image"
															],
															"query": [
																{
																	"key": "afterInputBlock",
																	"value": "false"
																}
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "image/jpeg"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "ipsum non sunt"
												}
											]
										},
										{
											"name": "Get video file",
											"id": "deff2748-e83e-4062-99b9-aeefcae98424",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "video/mp4"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/video?afterInputBlock=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"video"
													],
													"query": [
														{
															"key": "afterInputBlock",
															"value": "false",
															"description": "Whether to process the image through the input block first"
														}
													],
													"variable": [
														{
															"id": "3c4a6c7a-8609-4a94-b5d3-620161802b54",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "58e516c8-2c83-4e5d-909c-39d1c1d1a2db",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Get a sample as an video file. This only applies to samples with video data."
											},
											"response": [
												{
													"id": "435167ff-b794-42f7-a456-8d16f01079c0",
													"name": "Video file in AVI or MP4 format",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/video?afterInputBlock=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"video"
															],
															"query": [
																{
																	"key": "afterInputBlock",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "video/mp4"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "ipsum non sunt"
												}
											]
										},
										{
											"name": "Get sample slice",
											"id": "6c685ad6-da56-467b-b41c-2d9ed534b1f9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/slice?sliceStart=49175899&sliceEnd=49175899",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"slice"
													],
													"query": [
														{
															"key": "sliceStart",
															"value": "49175899",
															"description": "(Required) Begin index of the slice"
														},
														{
															"key": "sliceEnd",
															"value": "49175899",
															"description": "(Required) End index of the slice"
														}
													],
													"variable": [
														{
															"id": "3bbcfd1b-46bb-449b-b59f-bbdc9848528e",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "f3f3bb02-1c10-426b-b20d-3fbcab7b65d9",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Get a slice of a sample."
											},
											"response": [
												{
													"id": "5d2afc80-ea42-4318-961d-8b12b793241d",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/slice?sliceStart=49175899&sliceEnd=49175899",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"slice"
															],
															"query": [
																{
																	"key": "sliceStart",
																	"value": "49175899"
																},
																{
																	"key": "sliceEnd",
																	"value": "49175899"
																}
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"payload\": {\n    \"device_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sensors\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"values\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"device_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cropStart\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cropEnd\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"sample\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"filename\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signatureValidate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"created\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"category\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"coldstorageFilename\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"label\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"intervalMs\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"frequency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"originalIntervalMs\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"originalFrequency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sensors\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"valuesCount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"added\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"boundingBoxes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"boundingBoxesType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"chartType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isDisabled\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isProcessing\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"processingError\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signatureMethod\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signatureKey\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"totalLengthMs\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"thumbnailVideo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"thumbnailVideoFull\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"processingJobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"success\": true,\n  \"totalPayloadLength\": -52989835,\n  \"error\": \"amet\"\n}"
												}
											]
										},
										{
											"name": "Rename sample",
											"id": "b98d8306-9ead-42f7-91b7-5b10bc7c2b27",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"faulty-machine2.A3de\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/rename",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"rename"
													],
													"variable": [
														{
															"id": "ff235463-b78e-4537-8108-0f765b247460",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "e535a2a2-6497-4252-a0de-becd223e6e39",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Sets the file name of the sample. This name does not need to be unique, but it's highly recommended to do so."
											},
											"response": [
												{
													"id": "09883573-1c5c-46ad-a7ea-77b35013de19",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"faulty-machine2.A3de\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/rename",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"rename"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Edit label",
											"id": "43110852-fb07-4f2b-ae1e-90d9887446b1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"label\": \"water-hammer\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/edit-label",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"edit-label"
													],
													"variable": [
														{
															"id": "1a0ddbcd-0520-4d7c-b062-3c3a09c5b223",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "29478652-2250-4aa8-b393-a8caaa559ad7",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Sets the label (also known as class) of the sample. Use the same label for similar types of data, as they are used during training."
											},
											"response": [
												{
													"id": "b15d708e-2cbd-4e17-9eff-1e90341f49ef",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"label\": \"water-hammer\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/edit-label",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"edit-label"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Move sample",
											"id": "7cd0c662-398f-45a1-9ddc-72cc8cf9a49c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"newCategory\": \"testing\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/move",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"move"
													],
													"variable": [
														{
															"id": "17eb732d-e6e4-4fce-b7cb-8636c51d59ed",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "4d704057-b120-4c7b-8575-a46f55cff41d",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Move a sample to another category (e.g. from test to training)."
											},
											"response": [
												{
													"id": "c374a10b-ae2c-4978-bd79-e44d62401364",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"newCategory\": \"testing\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/move",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"move"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Crop sample",
											"id": "ec50a54b-3759-469b-a701-3c6e1856ffdd",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cropStart\": 0,\n  \"cropEnd\": 128\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/crop",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"crop"
													],
													"variable": [
														{
															"id": "b59980ac-ddbe-47aa-92a4-b2484522f785",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "b5a215e6-c3a4-4ed2-98e8-65b73c634e54",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Crop a sample to within a new range."
											},
											"response": [
												{
													"id": "8ded9f56-9b93-4224-9245-42b87b8257dd",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"cropStart\": 0,\n  \"cropEnd\": 128\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/crop",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"crop"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"requiresProcessing\": false,\n  \"success\": false,\n  \"error\": \"non\"\n}"
												}
											]
										},
										{
											"name": "Split sample into frames",
											"id": "c26e1f5f-1305-4fd1-aa97-1a2b19124706",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"fps\": -24488980\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/split",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"split"
													],
													"variable": [
														{
															"id": "f24c800f-67c4-474e-a7da-23992e18b0a4",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "83127329-e998-467e-ba4f-efe543136581",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Split a video sample into individual frames."
											},
											"response": [
												{
													"id": "5e95fde4-9ba0-40de-9ffe-ea50436c96b6",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"fps\": -24488980\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/split",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"split"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Find segments",
											"id": "a7074cd9-38ce-4bff-9aba-5ea673bc7f15",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"shiftSegments\": true,\n  \"segmentLengthMs\": 21016497\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/find-segments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"find-segments"
													],
													"variable": [
														{
															"id": "30cf85dd-69c5-4b3c-a565-fa7bb417d432",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "10ba71af-2845-4aca-a959-cecd615d7f31",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Find start and end times for all non-noise events in a sample"
											},
											"response": [
												{
													"id": "b2b04a66-4eea-4664-9af2-31791ee2d1b5",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"shiftSegments\": true,\n  \"segmentLengthMs\": 21016497\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/find-segments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"find-segments"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"segments\": [\n    {\n      \"startMs\": 14388584,\n      \"endMs\": -57008204\n    },\n    {\n      \"startMs\": 53631153,\n      \"endMs\": -6184967\n    }\n  ],\n  \"success\": false,\n  \"error\": \"enim minim voluptate\"\n}"
												}
											]
										},
										{
											"name": "Segment sample",
											"id": "5c051d85-bee1-40a9-84e6-4e3c75d6e047",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"segments\": [\n    {\n      \"startMs\": -44027450,\n      \"endMs\": -71032105\n    },\n    {\n      \"startMs\": -7119021,\n      \"endMs\": 36444166\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/segment",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"segment"
													],
													"variable": [
														{
															"id": "15c55e0d-a778-46ec-bb59-104e814eb7b6",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "72f42b6c-c11a-45a9-a8c4-e186bf546453",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Slice a sample into multiple segments. The original file will be marked as deleted, but you can crop any created segment to retrieve the original file."
											},
											"response": [
												{
													"id": "8dc013a5-d274-4ca9-be6c-d229984d1f01",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"segments\": [\n    {\n      \"startMs\": 74113706,\n      \"endMs\": 85869867\n    },\n    {\n      \"startMs\": -94700866,\n      \"endMs\": 43159091\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/segment",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"segment"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Set bounding boxes",
											"id": "bccfc449-08ce-4967-a4d0-784b1d29fd5b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"boundingBoxes\": [\n    {\n      \"label\": \"voluptate mollit dolore adipisicing\",\n      \"x\": -35557015,\n      \"y\": 34843870,\n      \"width\": -28713023,\n      \"height\": 81978560\n    },\n    {\n      \"label\": \"culpa in\",\n      \"x\": 3084560,\n      \"y\": 73843811,\n      \"width\": 8935262,\n      \"height\": 84136514\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/bounding-boxes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"bounding-boxes"
													],
													"variable": [
														{
															"id": "5a0b984f-3151-48cf-ba36-47dc568f0648",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "f8229b5f-5a19-4c84-b043-1074e69cd36b",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Set the bounding boxes for a sample"
											},
											"response": [
												{
													"id": "1aac40ce-d023-42a5-ab8e-66d87681bb44",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"boundingBoxes\": [\n    {\n      \"label\": \"deserunt ullamco\",\n      \"x\": 48543646,\n      \"y\": 91159049,\n      \"width\": 52682139,\n      \"height\": 89185043\n    },\n    {\n      \"label\": \"ea in veniam labore\",\n      \"x\": -44331134,\n      \"y\": -34998919,\n      \"width\": -79680402,\n      \"height\": -40153460\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/bounding-boxes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"bounding-boxes"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Store the last segment length",
											"id": "59a90a95-28c6-4947-b918-d5466e88894a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"segmentLength\": 1000\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/store-segment-length",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"store-segment-length"
													],
													"variable": [
														{
															"id": "3dadd329-e141-4880-8a19-cdddb04fd400",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "When segmenting a sample into smaller segments, store the segment length to ensure uniform segment lengths."
											},
											"response": [
												{
													"id": "0ac00870-772d-4c53-9568-4b0fb2163402",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"segmentLength\": 1000\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/store-segment-length",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"store-segment-length"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Get the original downsampled data",
											"id": "62ec54a3-69af-450b-8c57-ebee5077110c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/original?limitPayloadValues=49175899&zoomStart=49175899&zoomEnd=49175899",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"original"
													],
													"query": [
														{
															"key": "limitPayloadValues",
															"value": "49175899",
															"description": "Limit the number of payload values in the response"
														},
														{
															"key": "zoomStart",
															"value": "49175899",
															"description": "Zoom into the sample, with the focus starting at this index"
														},
														{
															"key": "zoomEnd",
															"value": "49175899",
															"description": "Zoom into the sample, with the focus ending at this index"
														}
													],
													"variable": [
														{
															"id": "803eb9fc-a85a-44b6-b195-a8a1205df1d6",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "f4b28adf-34b3-4e74-9b86-b1157d94642b",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Get the original, uncropped, downsampled data."
											},
											"response": [
												{
													"id": "e0cbc070-417f-4ea1-a0db-66424243dbf5",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/original?limitPayloadValues=49175899&zoomStart=49175899&zoomEnd=49175899",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"original"
															],
															"query": [
																{
																	"key": "limitPayloadValues",
																	"value": "49175899"
																},
																{
																	"key": "zoomStart",
																	"value": "49175899"
																},
																{
																	"key": "zoomEnd",
																	"value": "49175899"
																}
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"payload\": {\n    \"device_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sensors\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"values\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"device_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cropStart\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cropEnd\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"sample\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"filename\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signatureValidate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"created\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"category\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"coldstorageFilename\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"label\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"intervalMs\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"frequency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"originalIntervalMs\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"originalFrequency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sensors\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"valuesCount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"added\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"boundingBoxes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"boundingBoxesType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"chartType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isDisabled\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isProcessing\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"processingError\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signatureMethod\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signatureKey\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"totalLengthMs\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"thumbnailVideo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"thumbnailVideoFull\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"processingJobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"success\": true,\n  \"totalPayloadLength\": -52989835,\n  \"error\": \"amet\"\n}"
												}
											]
										},
										{
											"name": "Enable sample",
											"id": "c68f01ca-1008-4398-a57d-67276feeace1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"enable"
													],
													"variable": [
														{
															"id": "5adba995-ae06-4bb7-9371-c1437079d603",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "9925478f-e202-43de-9f06-691f9c673b9a",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Enable a sample, ensuring that it is not excluded from the dataset."
											},
											"response": [
												{
													"id": "7d04676a-465d-495a-87d5-76605e30f847",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/enable",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"enable"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Disable sample",
											"id": "ece3e3a9-1923-4afa-9079-43c83d4a8e65",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"disable"
													],
													"variable": [
														{
															"id": "ad68c3bd-43f9-41cb-a2f0-5a6bda15f984",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "40a7ca44-7794-47aa-9cf7-740554cb476c",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Disable a sample, ensuring that it is excluded from the dataset."
											},
											"response": [
												{
													"id": "0b44eaaf-1cce-45d0-9dfa-afe2ece39ee0",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/disable",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"disable"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Auto-label an image",
											"id": "f45baa27-022f-4044-8253-835ddfd55a7f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"neuralNetwork\": \"currentProject\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/autolabel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"autolabel"
													],
													"variable": [
														{
															"id": "66f4d302-9184-4de0-b348-bc050ffbe1ba",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "6883d687-c11d-4210-8976-e576801a84ca",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Classify an image using another neural network."
											},
											"response": [
												{
													"id": "fd83327d-9db7-4073-b965-1e70644d3248",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"neuralNetwork\": \"currentProject\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/autolabel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"autolabel"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"allLabels\": [\n    \"velit tempor\",\n    \"consectetur moll\"\n  ],\n  \"results\": [\n    {\n      \"label\": \"nulla\",\n      \"x\": 91626404,\n      \"y\": 96405855,\n      \"width\": -66108734,\n      \"height\": 2046893\n    },\n    {\n      \"label\": \"ullamco\",\n      \"x\": -94834826,\n      \"y\": 32093416,\n      \"width\": 23516580,\n      \"height\": -8411338\n    }\n  ],\n  \"success\": true,\n  \"error\": \"deserunt\"\n}"
												}
											]
										},
										{
											"name": "Set sample metadata",
											"id": "3de2657d-1d3c-483f-89b6-cea1fef3b09a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"metadata\": {\n    \"Excepteur_8\": \"tempor sunt\",\n    \"consequat4\": \"ullamco consectetur id adipisicing\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														":sampleId",
														"metadata"
													],
													"variable": [
														{
															"id": "a9836a7b-ae0f-47f4-ae1d-80e665257f11",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "fe50d42a-1c4c-49dc-9aee-38c94c3d2adc",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Adds or updates the metadata associated to a sample."
											},
											"response": [
												{
													"id": "5e94962d-ae6e-4792-8e03-c8d9ee4ccc35",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"metadata\": {\n    \"Excepteur_8\": \"tempor sunt\",\n    \"consequat4\": \"ullamco consectetur id adipisicing\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/:sampleId/metadata",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																":sampleId",
																"metadata"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										}
									],
									"id": "b80a6e2f-161e-460d-92bd-fb2335912d91"
								},
								{
									"name": "batch",
									"item": [
										{
											"name": "Edit labels for multiple samples",
											"id": "019cdf93-0cd6-401e-bb51-5a00f5b8874e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"label\": \"water-hammer\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/batch/edit-labels?category=testing&labels=[\"idle\", \"snake\"]&filename=ipsum non sunt&maxLength=49175899&minLength=49175899&minFrequency=86207481.94513136&maxFrequency=86207481.94513136&signatureValidity=invalid&includeDisabled=disabled&ids=[1, 2, 3]",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														"batch",
														"edit-labels"
													],
													"query": [
														{
															"key": "category",
															"value": "testing",
															"description": "(Required) Which of the three acquisition categories to retrieve data from"
														},
														{
															"key": "labels",
															"value": "[\"idle\", \"snake\"]",
															"description": "Only include samples with a label within the given list of labels, given as a JSON string"
														},
														{
															"key": "filename",
															"value": "ipsum non sunt",
															"description": "Only include samples whose filename includes the given filename"
														},
														{
															"key": "maxLength",
															"value": "49175899",
															"description": "Only include samples shorter than the given length, in milliseconds"
														},
														{
															"key": "minLength",
															"value": "49175899",
															"description": "Only include samples longer than the given length, in milliseconds"
														},
														{
															"key": "minFrequency",
															"value": "86207481.94513136",
															"description": "Only include samples with higher frequency than given frequency, in hertz"
														},
														{
															"key": "maxFrequency",
															"value": "86207481.94513136",
															"description": "Only include samples with lower frequency than given frequency, in hertz"
														},
														{
															"key": "signatureValidity",
															"value": "invalid",
															"description": "Include samples with either valid or invalid signatures"
														},
														{
															"key": "includeDisabled",
															"value": "disabled",
															"description": "Include only enabled or disabled samples (or both)"
														},
														{
															"key": "ids",
															"value": "[1, 2, 3]",
															"description": "Only include samples with an ID within the given list of IDs, given as a JSON string"
														}
													],
													"variable": [
														{
															"id": "26bb72a6-d13f-45b5-93ac-309c65755e8b",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Sets the label (also known as class) of multiple samples."
											},
											"response": [
												{
													"id": "a77f63cb-5beb-4759-a555-81e144287eaf",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"label\": \"water-hammer\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/batch/edit-labels?category=testing&labels=[\"idle\", \"snake\"]&filename=ipsum non sunt&maxLength=49175899&minLength=49175899&minFrequency=86207481.94513136&maxFrequency=86207481.94513136&signatureValidity=invalid&includeDisabled=disabled&ids=[1, 2, 3]",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																"batch",
																"edit-labels"
															],
															"query": [
																{
																	"key": "category",
																	"value": "testing"
																},
																{
																	"key": "labels",
																	"value": "[\"idle\", \"snake\"]"
																},
																{
																	"key": "filename",
																	"value": "ipsum non sunt"
																},
																{
																	"key": "maxLength",
																	"value": "49175899"
																},
																{
																	"key": "minLength",
																	"value": "49175899"
																},
																{
																	"key": "minFrequency",
																	"value": "86207481.94513136"
																},
																{
																	"key": "maxFrequency",
																	"value": "86207481.94513136"
																},
																{
																	"key": "signatureValidity",
																	"value": "invalid"
																},
																{
																	"key": "includeDisabled",
																	"value": "disabled"
																},
																{
																	"key": "ids",
																	"value": "[1, 2, 3]"
																}
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Remove multiple samples",
											"id": "3e7e9c14-70bf-48b6-b83e-e7e487a98d88",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/batch/delete?category=testing&labels=[\"idle\", \"snake\"]&filename=ipsum non sunt&maxLength=49175899&minLength=49175899&minFrequency=86207481.94513136&maxFrequency=86207481.94513136&signatureValidity=invalid&includeDisabled=disabled&ids=[1, 2, 3]",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														"batch",
														"delete"
													],
													"query": [
														{
															"key": "category",
															"value": "testing",
															"description": "(Required) Which of the three acquisition categories to retrieve data from"
														},
														{
															"key": "labels",
															"value": "[\"idle\", \"snake\"]",
															"description": "Only include samples with a label within the given list of labels, given as a JSON string"
														},
														{
															"key": "filename",
															"value": "ipsum non sunt",
															"description": "Only include samples whose filename includes the given filename"
														},
														{
															"key": "maxLength",
															"value": "49175899",
															"description": "Only include samples shorter than the given length, in milliseconds"
														},
														{
															"key": "minLength",
															"value": "49175899",
															"description": "Only include samples longer than the given length, in milliseconds"
														},
														{
															"key": "minFrequency",
															"value": "86207481.94513136",
															"description": "Only include samples with higher frequency than given frequency, in hertz"
														},
														{
															"key": "maxFrequency",
															"value": "86207481.94513136",
															"description": "Only include samples with lower frequency than given frequency, in hertz"
														},
														{
															"key": "signatureValidity",
															"value": "invalid",
															"description": "Include samples with either valid or invalid signatures"
														},
														{
															"key": "includeDisabled",
															"value": "disabled",
															"description": "Include only enabled or disabled samples (or both)"
														},
														{
															"key": "ids",
															"value": "[1, 2, 3]",
															"description": "Only include samples with an ID within the given list of IDs, given as a JSON string"
														}
													],
													"variable": [
														{
															"id": "f1dfd6cb-84d4-4007-8a6d-9df194e12c55",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Deletes samples. Note that this does not delete the data from cold storage."
											},
											"response": [
												{
													"id": "e473772f-ae59-4a91-9137-b7085556db9d",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/batch/delete?category=testing&labels=[\"idle\", \"snake\"]&filename=ipsum non sunt&maxLength=49175899&minLength=49175899&minFrequency=86207481.94513136&maxFrequency=86207481.94513136&signatureValidity=invalid&includeDisabled=disabled&ids=[1, 2, 3]",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																"batch",
																"delete"
															],
															"query": [
																{
																	"key": "category",
																	"value": "testing"
																},
																{
																	"key": "labels",
																	"value": "[\"idle\", \"snake\"]"
																},
																{
																	"key": "filename",
																	"value": "ipsum non sunt"
																},
																{
																	"key": "maxLength",
																	"value": "49175899"
																},
																{
																	"key": "minLength",
																	"value": "49175899"
																},
																{
																	"key": "minFrequency",
																	"value": "86207481.94513136"
																},
																{
																	"key": "maxFrequency",
																	"value": "86207481.94513136"
																},
																{
																	"key": "signatureValidity",
																	"value": "invalid"
																},
																{
																	"key": "includeDisabled",
																	"value": "disabled"
																},
																{
																	"key": "ids",
																	"value": "[1, 2, 3]"
																}
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Move multiple samples",
											"id": "a34af617-c8b7-49a3-a370-e2073cfe63e1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"newCategory\": \"testing\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/batch/moveSamples?category=testing&labels=[\"idle\", \"snake\"]&filename=ipsum non sunt&maxLength=49175899&minLength=49175899&minFrequency=86207481.94513136&maxFrequency=86207481.94513136&signatureValidity=invalid&includeDisabled=disabled&ids=[1, 2, 3]",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														"batch",
														"moveSamples"
													],
													"query": [
														{
															"key": "category",
															"value": "testing",
															"description": "(Required) Which of the three acquisition categories to retrieve data from"
														},
														{
															"key": "labels",
															"value": "[\"idle\", \"snake\"]",
															"description": "Only include samples with a label within the given list of labels, given as a JSON string"
														},
														{
															"key": "filename",
															"value": "ipsum non sunt",
															"description": "Only include samples whose filename includes the given filename"
														},
														{
															"key": "maxLength",
															"value": "49175899",
															"description": "Only include samples shorter than the given length, in milliseconds"
														},
														{
															"key": "minLength",
															"value": "49175899",
															"description": "Only include samples longer than the given length, in milliseconds"
														},
														{
															"key": "minFrequency",
															"value": "86207481.94513136",
															"description": "Only include samples with higher frequency than given frequency, in hertz"
														},
														{
															"key": "maxFrequency",
															"value": "86207481.94513136",
															"description": "Only include samples with lower frequency than given frequency, in hertz"
														},
														{
															"key": "signatureValidity",
															"value": "invalid",
															"description": "Include samples with either valid or invalid signatures"
														},
														{
															"key": "includeDisabled",
															"value": "disabled",
															"description": "Include only enabled or disabled samples (or both)"
														},
														{
															"key": "ids",
															"value": "[1, 2, 3]",
															"description": "Only include samples with an ID within the given list of IDs, given as a JSON string"
														}
													],
													"variable": [
														{
															"id": "56efda90-29c9-44d4-90c8-e9a7e9fd5f0d",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Move multiple samples to another category (e.g. from test to training)."
											},
											"response": [
												{
													"id": "dac853e0-63f3-430d-9867-d6d4061fd9ae",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"newCategory\": \"testing\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/batch/moveSamples?category=testing&labels=[\"idle\", \"snake\"]&filename=ipsum non sunt&maxLength=49175899&minLength=49175899&minFrequency=86207481.94513136&maxFrequency=86207481.94513136&signatureValidity=invalid&includeDisabled=disabled&ids=[1, 2, 3]",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																"batch",
																"moveSamples"
															],
															"query": [
																{
																	"key": "category",
																	"value": "testing"
																},
																{
																	"key": "labels",
																	"value": "[\"idle\", \"snake\"]"
																},
																{
																	"key": "filename",
																	"value": "ipsum non sunt"
																},
																{
																	"key": "maxLength",
																	"value": "49175899"
																},
																{
																	"key": "minLength",
																	"value": "49175899"
																},
																{
																	"key": "minFrequency",
																	"value": "86207481.94513136"
																},
																{
																	"key": "maxFrequency",
																	"value": "86207481.94513136"
																},
																{
																	"key": "signatureValidity",
																	"value": "invalid"
																},
																{
																	"key": "includeDisabled",
																	"value": "disabled"
																},
																{
																	"key": "ids",
																	"value": "[1, 2, 3]"
																}
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Enable multiple samples",
											"id": "1c38fa18-2921-46a4-9541-c4e525eef6fb",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/batch/enable-samples?category=testing&labels=[\"idle\", \"snake\"]&filename=ipsum non sunt&maxLength=49175899&minLength=49175899&minFrequency=86207481.94513136&maxFrequency=86207481.94513136&signatureValidity=invalid&includeDisabled=disabled&ids=[1, 2, 3]",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														"batch",
														"enable-samples"
													],
													"query": [
														{
															"key": "category",
															"value": "testing",
															"description": "(Required) Which of the three acquisition categories to retrieve data from"
														},
														{
															"key": "labels",
															"value": "[\"idle\", \"snake\"]",
															"description": "Only include samples with a label within the given list of labels, given as a JSON string"
														},
														{
															"key": "filename",
															"value": "ipsum non sunt",
															"description": "Only include samples whose filename includes the given filename"
														},
														{
															"key": "maxLength",
															"value": "49175899",
															"description": "Only include samples shorter than the given length, in milliseconds"
														},
														{
															"key": "minLength",
															"value": "49175899",
															"description": "Only include samples longer than the given length, in milliseconds"
														},
														{
															"key": "minFrequency",
															"value": "86207481.94513136",
															"description": "Only include samples with higher frequency than given frequency, in hertz"
														},
														{
															"key": "maxFrequency",
															"value": "86207481.94513136",
															"description": "Only include samples with lower frequency than given frequency, in hertz"
														},
														{
															"key": "signatureValidity",
															"value": "invalid",
															"description": "Include samples with either valid or invalid signatures"
														},
														{
															"key": "includeDisabled",
															"value": "disabled",
															"description": "Include only enabled or disabled samples (or both)"
														},
														{
															"key": "ids",
															"value": "[1, 2, 3]",
															"description": "Only include samples with an ID within the given list of IDs, given as a JSON string"
														}
													],
													"variable": [
														{
															"id": "77800164-6cba-4c4d-b45e-133e40b0beac",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Enables samples, ensuring that they are not excluded from the dataset."
											},
											"response": [
												{
													"id": "34a0ffeb-834d-4745-a05a-d35ae644da55",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/batch/enable-samples?category=testing&labels=[\"idle\", \"snake\"]&filename=ipsum non sunt&maxLength=49175899&minLength=49175899&minFrequency=86207481.94513136&maxFrequency=86207481.94513136&signatureValidity=invalid&includeDisabled=disabled&ids=[1, 2, 3]",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																"batch",
																"enable-samples"
															],
															"query": [
																{
																	"key": "category",
																	"value": "testing"
																},
																{
																	"key": "labels",
																	"value": "[\"idle\", \"snake\"]"
																},
																{
																	"key": "filename",
																	"value": "ipsum non sunt"
																},
																{
																	"key": "maxLength",
																	"value": "49175899"
																},
																{
																	"key": "minLength",
																	"value": "49175899"
																},
																{
																	"key": "minFrequency",
																	"value": "86207481.94513136"
																},
																{
																	"key": "maxFrequency",
																	"value": "86207481.94513136"
																},
																{
																	"key": "signatureValidity",
																	"value": "invalid"
																},
																{
																	"key": "includeDisabled",
																	"value": "disabled"
																},
																{
																	"key": "ids",
																	"value": "[1, 2, 3]"
																}
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Disable multiple samples",
											"id": "4715ee1c-aa62-4d03-9e1f-d1532093ef3e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/batch/disable-samples?category=testing&labels=[\"idle\", \"snake\"]&filename=ipsum non sunt&maxLength=49175899&minLength=49175899&minFrequency=86207481.94513136&maxFrequency=86207481.94513136&signatureValidity=invalid&includeDisabled=disabled&ids=[1, 2, 3]",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														"batch",
														"disable-samples"
													],
													"query": [
														{
															"key": "category",
															"value": "testing",
															"description": "(Required) Which of the three acquisition categories to retrieve data from"
														},
														{
															"key": "labels",
															"value": "[\"idle\", \"snake\"]",
															"description": "Only include samples with a label within the given list of labels, given as a JSON string"
														},
														{
															"key": "filename",
															"value": "ipsum non sunt",
															"description": "Only include samples whose filename includes the given filename"
														},
														{
															"key": "maxLength",
															"value": "49175899",
															"description": "Only include samples shorter than the given length, in milliseconds"
														},
														{
															"key": "minLength",
															"value": "49175899",
															"description": "Only include samples longer than the given length, in milliseconds"
														},
														{
															"key": "minFrequency",
															"value": "86207481.94513136",
															"description": "Only include samples with higher frequency than given frequency, in hertz"
														},
														{
															"key": "maxFrequency",
															"value": "86207481.94513136",
															"description": "Only include samples with lower frequency than given frequency, in hertz"
														},
														{
															"key": "signatureValidity",
															"value": "invalid",
															"description": "Include samples with either valid or invalid signatures"
														},
														{
															"key": "includeDisabled",
															"value": "disabled",
															"description": "Include only enabled or disabled samples (or both)"
														},
														{
															"key": "ids",
															"value": "[1, 2, 3]",
															"description": "Only include samples with an ID within the given list of IDs, given as a JSON string"
														}
													],
													"variable": [
														{
															"id": "6f388b34-882c-44bf-9695-00b3ad0dd79b",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Disables samples, ensuring that they are excluded from the dataset."
											},
											"response": [
												{
													"id": "63b3926f-4632-4534-9607-535de94a0a5c",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/batch/disable-samples?category=testing&labels=[\"idle\", \"snake\"]&filename=ipsum non sunt&maxLength=49175899&minLength=49175899&minFrequency=86207481.94513136&maxFrequency=86207481.94513136&signatureValidity=invalid&includeDisabled=disabled&ids=[1, 2, 3]",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																"batch",
																"disable-samples"
															],
															"query": [
																{
																	"key": "category",
																	"value": "testing"
																},
																{
																	"key": "labels",
																	"value": "[\"idle\", \"snake\"]"
																},
																{
																	"key": "filename",
																	"value": "ipsum non sunt"
																},
																{
																	"key": "maxLength",
																	"value": "49175899"
																},
																{
																	"key": "minLength",
																	"value": "49175899"
																},
																{
																	"key": "minFrequency",
																	"value": "86207481.94513136"
																},
																{
																	"key": "maxFrequency",
																	"value": "86207481.94513136"
																},
																{
																	"key": "signatureValidity",
																	"value": "invalid"
																},
																{
																	"key": "includeDisabled",
																	"value": "disabled"
																},
																{
																	"key": "ids",
																	"value": "[1, 2, 3]"
																}
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										}
									],
									"id": "2f809686-88a5-4af8-a1bb-fba0431d1f3a"
								},
								{
									"name": "data-explorer",
									"item": [
										{
											"name": "settings",
											"item": [
												{
													"name": "Get data explorer settings",
													"id": "5fc8d195-fdef-47d8-993b-4a9739056064",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/data-explorer/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																"data-explorer",
																"settings"
															],
															"variable": [
																{
																	"id": "da2dcc31-7ca9-45df-9149-eeafd540a372",
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														},
														"description": "Get data explorer configuration, like the type of data, and the input / dsp block to use."
													},
													"response": [
														{
															"id": "a2a4fe5b-cccb-4235-9e07-7263f75aad40",
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:projectId/raw-data/data-explorer/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":projectId",
																		"raw-data",
																		"data-explorer",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "projectId",
																			"value": "49175899",
																			"description": "(Required) Project ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"dimensionalityReductionRecommendation\": \"tsne\",\n  \"success\": true,\n  \"error\": \"pariatur labore ut do\",\n  \"preset\": \"current-impulse\",\n  \"dimensionalityReductionTechnique\": \"pca\"\n}"
														}
													]
												},
												{
													"name": "Set data explorer settings",
													"id": "0af24fad-d03e-49c8-b2cf-29f4750e852e",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"preset\": \"images\",\n  \"dimensionalityReductionTechnique\": \"tsne\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/data-explorer/settings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																"data-explorer",
																"settings"
															],
															"variable": [
																{
																	"id": "3a14baab-83d3-4a20-8a50-9e843f235f47",
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														},
														"description": "Set data explorer configuration, like the type of data, and the input / dsp block to use."
													},
													"response": [
														{
															"id": "cb4f08aa-8973-4c70-bd39-8491e69e5665",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"preset\": \"images\",\n  \"dimensionalityReductionTechnique\": \"tsne\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:projectId/raw-data/data-explorer/settings",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":projectId",
																		"raw-data",
																		"data-explorer",
																		"settings"
																	],
																	"variable": [
																		{
																			"key": "projectId",
																			"value": "49175899",
																			"description": "(Required) Project ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												}
											],
											"id": "07b0370c-cbbb-4939-ac99-a3bcc28bde4c"
										},
										{
											"name": "Get data explorer features",
											"id": "ac58507d-d917-4b95-9906-6741c138b227",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/data-explorer/features",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														"data-explorer",
														"features"
													],
													"variable": [
														{
															"id": "41830a52-e71b-46dc-99c5-4a0c15b511cf",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "t-SNE2 output of the raw dataset"
											},
											"response": [
												{
													"id": "909361a1-d388-42c4-bf66-cdf4d5c4581d",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/data-explorer/features",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																"data-explorer",
																"features"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"data\": [\n    {\n      \"X\": {\n        \"sunt_d\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"y\": 46124777,\n      \"yLabel\": \"in\",\n      \"sample\": {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startMs\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endMs\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    {\n      \"X\": {\n        \"tempor6\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"est2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"mollit49\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"y\": 4225630,\n      \"yLabel\": \"eu ex\",\n      \"sample\": {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startMs\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endMs\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    }\n  ],\n  \"hasFeatures\": false,\n  \"success\": false,\n  \"error\": \"occaecat ut dolore cupidatat\",\n  \"inputBlock\": {\n    \"id\": 13404237,\n    \"type\": \"time-series\",\n    \"name\": \"Time series\",\n    \"title\": \"Time series\",\n    \"primaryVersion\": true,\n    \"windowSizeMs\": 2004,\n    \"windowIncreaseMs\": 42926145,\n    \"frequencyHz\": 60,\n    \"classificationWindowIncreaseMs\": -79635311,\n    \"padZeros\": false,\n    \"imageWidth\": 28,\n    \"imageHeight\": 28,\n    \"resizeMode\": \"squash\",\n    \"resizeMethod\": \"lanczos3\",\n    \"cropAnchor\": \"middle-center\",\n    \"baseBlockId\": 10084111.187413573,\n    \"tunerBaseBlockId\": -96040481.60067156,\n    \"tunerTemplateId\": -53575200.65440471,\n    \"tunerPrimary\": false,\n    \"clonedFromBlockId\": 90949073.17000341,\n    \"mutated\": true,\n    \"enabled\": true,\n    \"db\": false,\n    \"description\": \"Reduced learning rate and more layers\",\n    \"createdBy\": \"createImpulse\",\n    \"createdAt\": \"1974-12-03T02:17:25.097Z\"\n  }\n}"
												}
											]
										},
										{
											"name": "Check data explorer features",
											"id": "ddbbcb81-631d-425b-b594-ec93d28042d2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/data-explorer/has-features",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														"data-explorer",
														"has-features"
													],
													"variable": [
														{
															"id": "99018b61-cabf-45d7-9437-8e08bc7e75bf",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "t-SNE2 output of the raw dataset"
											},
											"response": [
												{
													"id": "108e7491-90c4-47fa-a1e4-dbbcb14ca789",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/data-explorer/has-features",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																"data-explorer",
																"has-features"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"hasFeatures\": false,\n  \"success\": true,\n  \"error\": \"occaecat cupidatat\",\n  \"inputBlock\": {\n    \"id\": -93106148,\n    \"type\": \"time-series\",\n    \"name\": \"Time series\",\n    \"title\": \"Time series\",\n    \"primaryVersion\": false,\n    \"windowSizeMs\": 2004,\n    \"windowIncreaseMs\": 9834551,\n    \"frequencyHz\": 60,\n    \"classificationWindowIncreaseMs\": 24394773,\n    \"padZeros\": true,\n    \"imageWidth\": 28,\n    \"imageHeight\": 28,\n    \"resizeMode\": \"squash\",\n    \"resizeMethod\": \"nearest\",\n    \"cropAnchor\": \"middle-center\",\n    \"baseBlockId\": -13794982.495626718,\n    \"tunerBaseBlockId\": -29544028.12623158,\n    \"tunerTemplateId\": 41121951.98045483,\n    \"tunerPrimary\": false,\n    \"clonedFromBlockId\": 60061985.9830485,\n    \"mutated\": true,\n    \"enabled\": true,\n    \"db\": true,\n    \"description\": \"Reduced learning rate and more layers\",\n    \"createdBy\": \"createImpulse\",\n    \"createdAt\": \"1991-08-02T20:54:49.394Z\"\n  }\n}"
												}
											]
										},
										{
											"name": "Get data explorer predictions",
											"id": "c34d20f0-f9ef-4f08-b7b8-c6e08e00d67a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/data-explorer/predictions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														"data-explorer",
														"predictions"
													],
													"variable": [
														{
															"id": "5eb77b1e-d5c4-4d0e-9e54-7626331ba7c4",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Predictions for every data explorer point (only available when using current impulse to populate data explorer)"
											},
											"response": [
												{
													"id": "9e224bc6-91eb-4100-b8d2-e5ac3fc1bf94",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/data-explorer/predictions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																"data-explorer",
																"predictions"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"classificationType\": \"regression\",\n  \"labels\": [\n    \"laboris\",\n    \"sint cillum nulla\"\n  ],\n  \"predictions\": [\n    {\n      \"sampleId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"startMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"endMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prediction\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"predictionCorrect\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"f1Score\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"sampleId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"startMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"endMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prediction\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"predictionCorrect\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"f1Score\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"error\": \"do velit\"\n}"
												}
											]
										},
										{
											"name": "Clear data explorer",
											"id": "d0ae3ba3-643a-40f1-9f5c-419188a41dd5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/data-explorer/clear",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														"data-explorer",
														"clear"
													],
													"variable": [
														{
															"id": "46fe1787-9844-4ec6-8797-a5a9af3b4019",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Remove the current data explorer state"
											},
											"response": [
												{
													"id": "432b0c2d-79ef-4e63-9a43-ed25e976c8f3",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/data-explorer/clear",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																"data-explorer",
																"clear"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Upload a data explorer screenshot",
											"id": "c962e564-b26b-4c83-85ca-24de0a8afbb6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "image",
															"type": "file",
															"description": "(Required) ",
															"value": null
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/data-explorer/screenshot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														"data-explorer",
														"screenshot"
													],
													"variable": [
														{
															"id": "4a739563-8b5e-44e4-882b-022b379847f3",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Used internally (from a data pipeline) to upload a picture of the data explorer"
											},
											"response": [
												{
													"id": "13421609-6cad-4a0e-9d48-2104e926c6ee",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"description": "(Required) ",
																	"key": "image",
																	"type": "file"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/raw-data/data-explorer/screenshot",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"raw-data",
																"data-explorer",
																"screenshot"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										}
									],
									"id": "94231298-8816-4d07-83f6-681f65f3022d"
								},
								{
									"name": "List samples",
									"id": "de1140c5-5535-41eb-8471-b9876eb16101",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/raw-data?category=testing&limit=49175899&offset=49175899&excludeSensors=false&labels=[\"idle\", \"snake\"]&filename=ipsum non sunt&maxLength=49175899&minLength=49175899&minFrequency=86207481.94513136&maxFrequency=86207481.94513136&signatureValidity=invalid&includeDisabled=disabled",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"raw-data"
											],
											"query": [
												{
													"key": "category",
													"value": "testing",
													"description": "(Required) Which of the three acquisition categories to retrieve data from"
												},
												{
													"key": "limit",
													"value": "49175899",
													"description": "Maximum number of results"
												},
												{
													"key": "offset",
													"value": "49175899",
													"description": "Offset in results, can be used in conjunction with LimitResultsParameter to implement paging."
												},
												{
													"key": "excludeSensors",
													"value": "false",
													"description": "Whether to exclude sensors in the response (as these can slow down requests when you have large pages)."
												},
												{
													"key": "labels",
													"value": "[\"idle\", \"snake\"]",
													"description": "Only include samples with a label within the given list of labels, given as a JSON string"
												},
												{
													"key": "filename",
													"value": "ipsum non sunt",
													"description": "Only include samples whose filename includes the given filename"
												},
												{
													"key": "maxLength",
													"value": "49175899",
													"description": "Only include samples shorter than the given length, in milliseconds"
												},
												{
													"key": "minLength",
													"value": "49175899",
													"description": "Only include samples longer than the given length, in milliseconds"
												},
												{
													"key": "minFrequency",
													"value": "86207481.94513136",
													"description": "Only include samples with higher frequency than given frequency, in hertz"
												},
												{
													"key": "maxFrequency",
													"value": "86207481.94513136",
													"description": "Only include samples with lower frequency than given frequency, in hertz"
												},
												{
													"key": "signatureValidity",
													"value": "invalid",
													"description": "Include samples with either valid or invalid signatures"
												},
												{
													"key": "includeDisabled",
													"value": "disabled",
													"description": "Include only enabled or disabled samples (or both)"
												}
											],
											"variable": [
												{
													"id": "43405a34-de3b-4773-8a18-28a7269d2267",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Retrieve all raw data by category."
									},
									"response": [
										{
											"id": "d3874e13-19ec-403c-8317-ca02ad805478",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data?category=testing&limit=49175899&offset=49175899&excludeSensors=false&labels=[\"idle\", \"snake\"]&filename=ipsum non sunt&maxLength=49175899&minLength=49175899&minFrequency=86207481.94513136&maxFrequency=86207481.94513136&signatureValidity=invalid&includeDisabled=disabled",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data"
													],
													"query": [
														{
															"key": "category",
															"value": "testing"
														},
														{
															"key": "limit",
															"value": "49175899"
														},
														{
															"key": "offset",
															"value": "49175899"
														},
														{
															"key": "excludeSensors",
															"value": "false"
														},
														{
															"key": "labels",
															"value": "[\"idle\", \"snake\"]"
														},
														{
															"key": "filename",
															"value": "ipsum non sunt"
														},
														{
															"key": "maxLength",
															"value": "49175899"
														},
														{
															"key": "minLength",
															"value": "49175899"
														},
														{
															"key": "minFrequency",
															"value": "86207481.94513136"
														},
														{
															"key": "maxFrequency",
															"value": "86207481.94513136"
														},
														{
															"key": "signatureValidity",
															"value": "invalid"
														},
														{
															"key": "includeDisabled",
															"value": "disabled"
														}
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"samples\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"filename\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"signatureValidate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"coldstorageFilename\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"intervalMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"frequency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"originalIntervalMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"originalFrequency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sensors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"valuesCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"added\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"boundingBoxes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"boundingBoxesType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"chartType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDisabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isProcessing\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"processingError\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"signatureMethod\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"signatureKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalLengthMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"thumbnailVideo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"thumbnailVideoFull\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"processingJobId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"filename\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"signatureValidate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"coldstorageFilename\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"intervalMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"frequency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"originalIntervalMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"originalFrequency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sensors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"valuesCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"added\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"boundingBoxes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"boundingBoxesType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"chartType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDisabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isProcessing\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"processingError\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"signatureMethod\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"signatureKey\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalLengthMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"thumbnailVideo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"thumbnailVideoFull\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"processingJobId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"totalCount\": -27548333,\n  \"error\": \"ullamco officia\"\n}"
										}
									]
								},
								{
									"name": "Count samples",
									"id": "82d5a9f2-8a20-464f-9f22-6ef009e56af4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/raw-data/count?category=testing&labels=[\"idle\", \"snake\"]&filename=ipsum non sunt&maxLength=49175899&minLength=49175899&minFrequency=86207481.94513136&maxFrequency=86207481.94513136&signatureValidity=invalid&includeDisabled=disabled",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"raw-data",
												"count"
											],
											"query": [
												{
													"key": "category",
													"value": "testing",
													"description": "(Required) Which of the three acquisition categories to retrieve data from"
												},
												{
													"key": "labels",
													"value": "[\"idle\", \"snake\"]",
													"description": "Only include samples with a label within the given list of labels, given as a JSON string"
												},
												{
													"key": "filename",
													"value": "ipsum non sunt",
													"description": "Only include samples whose filename includes the given filename"
												},
												{
													"key": "maxLength",
													"value": "49175899",
													"description": "Only include samples shorter than the given length, in milliseconds"
												},
												{
													"key": "minLength",
													"value": "49175899",
													"description": "Only include samples longer than the given length, in milliseconds"
												},
												{
													"key": "minFrequency",
													"value": "86207481.94513136",
													"description": "Only include samples with higher frequency than given frequency, in hertz"
												},
												{
													"key": "maxFrequency",
													"value": "86207481.94513136",
													"description": "Only include samples with lower frequency than given frequency, in hertz"
												},
												{
													"key": "signatureValidity",
													"value": "invalid",
													"description": "Include samples with either valid or invalid signatures"
												},
												{
													"key": "includeDisabled",
													"value": "disabled",
													"description": "Include only enabled or disabled samples (or both)"
												}
											],
											"variable": [
												{
													"id": "53bed4dc-b5f3-43e9-a490-4a8d1da0b437",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Count all raw data by category."
									},
									"response": [
										{
											"id": "2ad54dfe-b756-4d8c-a041-ae21c814c07f",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/count?category=testing&labels=[\"idle\", \"snake\"]&filename=ipsum non sunt&maxLength=49175899&minLength=49175899&minFrequency=86207481.94513136&maxFrequency=86207481.94513136&signatureValidity=invalid&includeDisabled=disabled",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														"count"
													],
													"query": [
														{
															"key": "category",
															"value": "testing"
														},
														{
															"key": "labels",
															"value": "[\"idle\", \"snake\"]"
														},
														{
															"key": "filename",
															"value": "ipsum non sunt"
														},
														{
															"key": "maxLength",
															"value": "49175899"
														},
														{
															"key": "minLength",
															"value": "49175899"
														},
														{
															"key": "minFrequency",
															"value": "86207481.94513136"
														},
														{
															"key": "maxFrequency",
															"value": "86207481.94513136"
														},
														{
															"key": "signatureValidity",
															"value": "invalid"
														},
														{
															"key": "includeDisabled",
															"value": "disabled"
														}
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"count\": -37222444,\n  \"success\": true,\n  \"error\": \"et proident\"\n}"
										}
									]
								},
								{
									"name": "Track objects",
									"id": "97b0c1a1-002e-4e87-8e9a-075b78184c4f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sourceSampleId\": -82350177,\n  \"nextSampleId\": 38965653\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/raw-data/track-objects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"raw-data",
												"track-objects"
											],
											"variable": [
												{
													"id": "6097a58d-27e5-4a25-92d8-e3d3d6ba94b8",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Track objects between two samples. Source sample should have bounding boxes set."
									},
									"response": [
										{
											"id": "56bad9d6-c061-4812-8b24-059caa109cb2",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sourceSampleId\": -82350177,\n  \"nextSampleId\": 38965653\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/raw-data/track-objects",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"raw-data",
														"track-objects"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"boundingBoxes\": [\n    {\n      \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"x\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"y\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"width\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"height\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"label\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"x\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"y\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"width\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"height\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": false,\n  \"error\": \"consequat\"\n}"
										}
									]
								}
							],
							"id": "3a2507c3-77fd-4a45-abed-b280dfec713b"
						},
						{
							"name": "impulse",
							"item": [
								{
									"name": "block-versions/{block Type}/{block Id}",
									"item": [
										{
											"name": "Create new block version",
											"id": "c63892d6-a77c-43dc-8d72-d34d8dfdd576",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/impulse/block-versions/:blockType/:blockId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"impulse",
														"block-versions",
														":blockType",
														":blockId"
													],
													"variable": [
														{
															"id": "2462df6e-4d5a-4006-9881-365c0769a978",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "29877c0a-df68-4a23-bc69-7ae9a101a867",
															"key": "blockType",
															"value": "ipsum non sunt",
															"description": "(Required) Type of block"
														},
														{
															"id": "112f1a72-68b0-4731-9e55-d5ce885627ed",
															"key": "blockId",
															"value": "49175899",
															"description": "(Required) Block ID"
														}
													]
												},
												"description": "Create a new version of a given block"
											},
											"response": [
												{
													"id": "288a6a94-0217-40c6-bfbc-997bd1ea34bc",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/impulse/block-versions/:blockType/:blockId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"impulse",
																"block-versions",
																":blockType",
																":blockId"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "blockType",
																	"value": "ipsum non sunt",
																	"description": "(Required) Type of block"
																},
																{
																	"key": "blockId",
																	"value": "49175899",
																	"description": "(Required) Block ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": -17107594.053569704,\n  \"success\": false,\n  \"error\": \"sed consectetur aliqua\"\n}"
												}
											]
										},
										{
											"name": "Update block version details",
											"id": "4967b78e-208e-442e-a96b-b4265948d663",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": 45979441,\n  \"primaryVersion\": false,\n  \"name\": \"NN Classifier\",\n  \"description\": \"Reduced learning rate and more layers\",\n  \"dsp\": [\n    27,\n    27\n  ],\n  \"axes\": [\n    \"accX\",\n    \"accX\"\n  ],\n  \"input\": 1,\n  \"windowSizeMs\": 2004,\n  \"windowIncreaseMs\": 28776089,\n  \"frequencyHz\": 60,\n  \"classificationWindowIncreaseMs\": 41338095,\n  \"padZeros\": false,\n  \"imageWidth\": 28,\n  \"imageHeight\": 28,\n  \"resizeMode\": \"squash\",\n  \"resizeMethod\": \"lanczos3\",\n  \"cropAnchor\": \"middle-center\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/impulse/block-versions/:blockType/:blockId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"impulse",
														"block-versions",
														":blockType",
														":blockId"
													],
													"variable": [
														{
															"id": "d1971457-9610-415b-94a6-0ab485d3fee0",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "66d01717-eecd-4ef9-8437-73da4886c316",
															"key": "blockType",
															"value": "ipsum non sunt",
															"description": "(Required) Type of block"
														},
														{
															"id": "44d64332-66a0-402a-b61d-b2290d1c2954",
															"key": "blockId",
															"value": "49175899",
															"description": "(Required) Block ID"
														}
													]
												},
												"description": "Update the details of a block version"
											},
											"response": [
												{
													"id": "7b9db636-1a2f-4d4a-95fc-753453edd0f4",
													"name": "OK",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": 17396912,\n  \"primaryVersion\": false,\n  \"name\": \"NN Classifier\",\n  \"description\": \"Reduced learning rate and more layers\",\n  \"dsp\": [\n    27,\n    27\n  ],\n  \"axes\": [\n    \"accX\",\n    \"accX\"\n  ],\n  \"input\": 1,\n  \"windowSizeMs\": 2004,\n  \"windowIncreaseMs\": -57468986,\n  \"frequencyHz\": 60,\n  \"classificationWindowIncreaseMs\": -3862383,\n  \"padZeros\": true,\n  \"imageWidth\": 28,\n  \"imageHeight\": 28,\n  \"resizeMode\": \"squash\",\n  \"resizeMethod\": \"nearest\",\n  \"cropAnchor\": \"middle-center\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/impulse/block-versions/:blockType/:blockId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"impulse",
																"block-versions",
																":blockType",
																":blockId"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "blockType",
																	"value": "ipsum non sunt",
																	"description": "(Required) Type of block"
																},
																{
																	"key": "blockId",
																	"value": "49175899",
																	"description": "(Required) Block ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										}
									],
									"id": "75bcef0f-2881-419b-bc05-8fe18c0f3d90"
								},
								{
									"name": "Get impulse",
									"id": "3ac14e25-af7c-4c75-8de8-69d2957d7915",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/impulse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"impulse"
											],
											"variable": [
												{
													"id": "622b6f31-0816-4be3-81a3-0e35042743e0",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Retrieve the impulse for this project"
									},
									"response": [
										{
											"id": "1190c778-1ee9-4e03-ac89-755d26bb11ec",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/impulse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"impulse"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"mollit nulla et\",\n  \"impulse\": {\n    \"inputBlocks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"dspBlocks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"learnBlocks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}"
										}
									]
								},
								{
									"name": "Create impulse",
									"id": "358bc760-b2f4-4c76-8cf1-285e422360dd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"inputBlocks\": [\n    {\n      \"id\": -66251124,\n      \"type\": \"time-series\",\n      \"name\": \"Time series\",\n      \"title\": \"Time series\",\n      \"primaryVersion\": false,\n      \"windowSizeMs\": 2004,\n      \"windowIncreaseMs\": -57316771,\n      \"frequencyHz\": 60,\n      \"classificationWindowIncreaseMs\": 91262854,\n      \"padZeros\": true,\n      \"imageWidth\": 28,\n      \"imageHeight\": 28,\n      \"resizeMode\": \"squash\",\n      \"resizeMethod\": \"lanczos3\",\n      \"cropAnchor\": \"middle-center\",\n      \"baseBlockId\": -84333379.39436835,\n      \"tunerBaseBlockId\": -99007306.7362658,\n      \"tunerTemplateId\": 17450654.79101427,\n      \"tunerPrimary\": true,\n      \"clonedFromBlockId\": 77265637.91865256,\n      \"mutated\": true,\n      \"enabled\": false,\n      \"db\": true,\n      \"description\": \"Reduced learning rate and more layers\",\n      \"createdBy\": \"createImpulse\",\n      \"createdAt\": \"1970-04-04T12:32:04.494Z\"\n    },\n    {\n      \"id\": 65872690,\n      \"type\": \"time-series\",\n      \"name\": \"Time series\",\n      \"title\": \"Time series\",\n      \"primaryVersion\": false,\n      \"windowSizeMs\": 2004,\n      \"windowIncreaseMs\": 25287336,\n      \"frequencyHz\": 60,\n      \"classificationWindowIncreaseMs\": -88240701,\n      \"padZeros\": true,\n      \"imageWidth\": 28,\n      \"imageHeight\": 28,\n      \"resizeMode\": \"squash\",\n      \"resizeMethod\": \"nearest\",\n      \"cropAnchor\": \"middle-center\",\n      \"baseBlockId\": 5453791.255916849,\n      \"tunerBaseBlockId\": -5964253.045890987,\n      \"tunerTemplateId\": 62471154.3456974,\n      \"tunerPrimary\": false,\n      \"clonedFromBlockId\": 85865254.8006779,\n      \"mutated\": true,\n      \"enabled\": true,\n      \"db\": false,\n      \"description\": \"Reduced learning rate and more layers\",\n      \"createdBy\": \"createImpulse\",\n      \"createdAt\": \"1951-07-14T00:11:36.701Z\"\n    }\n  ],\n  \"dspBlocks\": [\n    {\n      \"id\": -57069561,\n      \"type\": \"spectral-analysis\",\n      \"name\": \"Spectral features\",\n      \"axes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"title\": \"Spectral Analysis\",\n      \"primaryVersion\": true,\n      \"implementationVersion\": -96096264,\n      \"valuesPerAxis\": 11,\n      \"input\": 1,\n      \"baseBlockId\": 13848182.454089656,\n      \"tunerBaseBlockId\": 31709716.719318464,\n      \"tunerTemplateId\": -15741981.13258624,\n      \"tunerPrimary\": false,\n      \"clonedFromBlockId\": -27220550.41112888,\n      \"mutated\": true,\n      \"enabled\": true,\n      \"db\": true,\n      \"description\": \"Reduced learning rate and more layers\",\n      \"createdBy\": \"createImpulse\",\n      \"createdAt\": \"1959-08-19T08:39:48.586Z\",\n      \"organization\": {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dspId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    {\n      \"id\": 57289285,\n      \"type\": \"spectral-analysis\",\n      \"name\": \"Spectral features\",\n      \"axes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"title\": \"Spectral Analysis\",\n      \"primaryVersion\": false,\n      \"implementationVersion\": -58703470,\n      \"valuesPerAxis\": 11,\n      \"input\": 1,\n      \"baseBlockId\": 86845558.05679297,\n      \"tunerBaseBlockId\": 91112190.06386274,\n      \"tunerTemplateId\": -82213263.4744555,\n      \"tunerPrimary\": true,\n      \"clonedFromBlockId\": -78453675.64671628,\n      \"mutated\": false,\n      \"enabled\": false,\n      \"db\": false,\n      \"description\": \"Reduced learning rate and more layers\",\n      \"createdBy\": \"createImpulse\",\n      \"createdAt\": \"1979-04-26T14:50:10.192Z\",\n      \"organization\": {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dspId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    }\n  ],\n  \"learnBlocks\": [\n    {\n      \"id\": -81075070,\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"NN Classifier\",\n      \"dsp\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"title\": \"Classification (Keras)\",\n      \"primaryVersion\": false,\n      \"baseBlockId\": -99222218.84693672,\n      \"tunerBaseBlockId\": -17014896.721020147,\n      \"tunerTemplateId\": 59703363.746263,\n      \"tunerPrimary\": false,\n      \"clonedFromBlockId\": 62927228.694505036,\n      \"mutated\": false,\n      \"enabled\": false,\n      \"db\": false,\n      \"description\": \"Reduced learning rate and more layers\",\n      \"createdBy\": \"createImpulse\",\n      \"createdAt\": \"1943-07-29T02:34:04.521Z\"\n    },\n    {\n      \"id\": -30907844,\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"NN Classifier\",\n      \"dsp\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"title\": \"Classification (Keras)\",\n      \"primaryVersion\": true,\n      \"baseBlockId\": 29681108.62797126,\n      \"tunerBaseBlockId\": -8092637.655314758,\n      \"tunerTemplateId\": -90248508.96696606,\n      \"tunerPrimary\": true,\n      \"clonedFromBlockId\": 99176335.38816684,\n      \"mutated\": false,\n      \"enabled\": true,\n      \"db\": false,\n      \"description\": \"Reduced learning rate and more layers\",\n      \"createdBy\": \"createImpulse\",\n      \"createdAt\": \"1963-01-31T12:52:23.301Z\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/impulse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"impulse"
											],
											"variable": [
												{
													"id": "9fc3ae63-bb09-4135-a4c1-f21f37df2be3",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Sets the impulse for this project."
									},
									"response": [
										{
											"id": "15d6dff5-7ec5-461e-a0f0-a516217a2a29",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"inputBlocks\": [\n    {\n      \"id\": 62536315,\n      \"type\": \"time-series\",\n      \"name\": \"Time series\",\n      \"title\": \"Time series\",\n      \"primaryVersion\": false,\n      \"windowSizeMs\": 2004,\n      \"windowIncreaseMs\": 45567088,\n      \"frequencyHz\": 60,\n      \"classificationWindowIncreaseMs\": -94451078,\n      \"padZeros\": false,\n      \"imageWidth\": 28,\n      \"imageHeight\": 28,\n      \"resizeMode\": \"squash\",\n      \"resizeMethod\": \"nearest\",\n      \"cropAnchor\": \"middle-center\",\n      \"baseBlockId\": -57698883.94341454,\n      \"tunerBaseBlockId\": -5209916.796837047,\n      \"tunerTemplateId\": 20259800.37297356,\n      \"tunerPrimary\": true,\n      \"clonedFromBlockId\": -35243496.42968425,\n      \"mutated\": false,\n      \"enabled\": true,\n      \"db\": false,\n      \"description\": \"Reduced learning rate and more layers\",\n      \"createdBy\": \"createImpulse\",\n      \"createdAt\": \"1949-09-24T00:33:56.625Z\"\n    },\n    {\n      \"id\": -30003423,\n      \"type\": \"time-series\",\n      \"name\": \"Time series\",\n      \"title\": \"Time series\",\n      \"primaryVersion\": false,\n      \"windowSizeMs\": 2004,\n      \"windowIncreaseMs\": -19667415,\n      \"frequencyHz\": 60,\n      \"classificationWindowIncreaseMs\": 83304009,\n      \"padZeros\": true,\n      \"imageWidth\": 28,\n      \"imageHeight\": 28,\n      \"resizeMode\": \"squash\",\n      \"resizeMethod\": \"lanczos3\",\n      \"cropAnchor\": \"middle-center\",\n      \"baseBlockId\": -38639047.19905537,\n      \"tunerBaseBlockId\": 35392204.56170678,\n      \"tunerTemplateId\": 14468832.510932699,\n      \"tunerPrimary\": false,\n      \"clonedFromBlockId\": 7439492.39312838,\n      \"mutated\": true,\n      \"enabled\": true,\n      \"db\": false,\n      \"description\": \"Reduced learning rate and more layers\",\n      \"createdBy\": \"createImpulse\",\n      \"createdAt\": \"1992-11-22T19:54:49.586Z\"\n    }\n  ],\n  \"dspBlocks\": [\n    {\n      \"id\": -25758964,\n      \"type\": \"spectral-analysis\",\n      \"name\": \"Spectral features\",\n      \"axes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"title\": \"Spectral Analysis\",\n      \"primaryVersion\": false,\n      \"implementationVersion\": 51853242,\n      \"valuesPerAxis\": 11,\n      \"input\": 1,\n      \"baseBlockId\": 67660030.79506761,\n      \"tunerBaseBlockId\": 27343630.242307574,\n      \"tunerTemplateId\": -7836530.081196666,\n      \"tunerPrimary\": false,\n      \"clonedFromBlockId\": 11151357.028010666,\n      \"mutated\": false,\n      \"enabled\": true,\n      \"db\": true,\n      \"description\": \"Reduced learning rate and more layers\",\n      \"createdBy\": \"createImpulse\",\n      \"createdAt\": \"1971-10-12T23:56:40.787Z\",\n      \"organization\": {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dspId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    {\n      \"id\": -66894233,\n      \"type\": \"spectral-analysis\",\n      \"name\": \"Spectral features\",\n      \"axes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"title\": \"Spectral Analysis\",\n      \"primaryVersion\": true,\n      \"implementationVersion\": 3056758,\n      \"valuesPerAxis\": 11,\n      \"input\": 1,\n      \"baseBlockId\": 36606611.69011906,\n      \"tunerBaseBlockId\": -50642493.683741964,\n      \"tunerTemplateId\": -96330402.3778739,\n      \"tunerPrimary\": false,\n      \"clonedFromBlockId\": -62382123.11130149,\n      \"mutated\": true,\n      \"enabled\": true,\n      \"db\": false,\n      \"description\": \"Reduced learning rate and more layers\",\n      \"createdBy\": \"createImpulse\",\n      \"createdAt\": \"1983-09-08T03:58:26.264Z\",\n      \"organization\": {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dspId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    }\n  ],\n  \"learnBlocks\": [\n    {\n      \"id\": 65748631,\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"NN Classifier\",\n      \"dsp\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"title\": \"Classification (Keras)\",\n      \"primaryVersion\": false,\n      \"baseBlockId\": 57294618.89886439,\n      \"tunerBaseBlockId\": 29190250.227873355,\n      \"tunerTemplateId\": 74048196.11218238,\n      \"tunerPrimary\": false,\n      \"clonedFromBlockId\": -51883152.252318606,\n      \"mutated\": false,\n      \"enabled\": false,\n      \"db\": true,\n      \"description\": \"Reduced learning rate and more layers\",\n      \"createdBy\": \"createImpulse\",\n      \"createdAt\": \"1950-10-28T20:01:42.895Z\"\n    },\n    {\n      \"id\": -24551729,\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"NN Classifier\",\n      \"dsp\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"title\": \"Classification (Keras)\",\n      \"primaryVersion\": false,\n      \"baseBlockId\": -75710501.6391201,\n      \"tunerBaseBlockId\": 37871118.32647717,\n      \"tunerTemplateId\": -68434074.66243261,\n      \"tunerPrimary\": false,\n      \"clonedFromBlockId\": 84447356.90575624,\n      \"mutated\": false,\n      \"enabled\": true,\n      \"db\": true,\n      \"description\": \"Reduced learning rate and more layers\",\n      \"createdBy\": \"createImpulse\",\n      \"createdAt\": \"1995-08-04T09:49:05.219Z\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/impulse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"impulse"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Delete impulse",
									"id": "2d3ded70-dbdc-472d-a683-e20045776a18",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/impulse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"impulse"
											],
											"variable": [
												{
													"id": "ff0250ba-ad9e-4351-9c71-eec12a4905d8",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Completely clears the impulse for this project."
									},
									"response": [
										{
											"id": "29b504e3-227a-4afe-ba0b-c651d96772c6",
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/impulse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"impulse"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Get impulse including disabled blocks",
									"id": "4c8c6a29-e65a-47aa-827c-1ef5ac30aabd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/impulse/all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"impulse",
												"all"
											],
											"variable": [
												{
													"id": "7c8a24b1-644e-435e-8d6a-570bf31aef27",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Retrieve the impulse for this project including disabled blocks"
									},
									"response": [
										{
											"id": "58c48889-ebb7-4236-bebf-9b36739e5601",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/impulse/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"impulse",
														"all"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"ea veniam reprehenderit mollit\",\n  \"impulse\": {\n    \"inputBlocks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"dspBlocks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"learnBlocks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}"
										}
									]
								},
								{
									"name": "Get impulse blocks",
									"id": "139ce476-cb2d-4e5f-bc44-ea9ba19fdcd1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/impulse/blocks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"impulse",
												"blocks"
											],
											"variable": [
												{
													"id": "0d1b1446-be45-4387-b32e-7967d5ca0573",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Lists all possible blocks that can be used in the impulse"
									},
									"response": [
										{
											"id": "9c65f2a1-fa03-4332-992a-9783ba85567d",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/impulse/blocks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"impulse",
														"blocks"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"dspBlocks\": [\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"author\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"experimental\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"latestImplementationVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recommended\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"organizationId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"organizationDspId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"author\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"experimental\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"latestImplementationVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recommended\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"organizationId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"organizationDspId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"inputBlocks\": [\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"author\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recommended\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"author\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recommended\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"learnBlocks\": [\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"author\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recommended\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"author\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recommended\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"error\": \"esse in\"\n}"
										}
									]
								}
							],
							"id": "c65a028a-89a1-498b-967c-58ddd138e166"
						},
						{
							"name": "dsp/{dsp Id}",
							"item": [
								{
									"name": "raw-data/{sample Id}",
									"item": [
										{
											"name": "slice",
											"item": [
												{
													"name": "run",
													"item": [
														{
															"name": "Get processed sample (slice)",
															"id": "51ada415-807e-4889-9899-734a19a87c1e",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"params\": {\n    \"scale-axes\": \"10\"\n  },\n  \"store\": true\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId/raw-data/:sampleId/slice/run?sliceStart=49175899&sliceEnd=49175899",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":projectId",
																		"dsp",
																		":dspId",
																		"raw-data",
																		":sampleId",
																		"slice",
																		"run"
																	],
																	"query": [
																		{
																			"key": "sliceStart",
																			"value": "49175899",
																			"description": "(Required) Begin index of the slice"
																		},
																		{
																			"key": "sliceEnd",
																			"value": "49175899",
																			"description": "(Required) End index of the slice"
																		}
																	],
																	"variable": [
																		{
																			"id": "ae9e4a47-f15e-4598-afa0-6b5ad9ad144e",
																			"key": "projectId",
																			"value": "49175899",
																			"description": "(Required) Project ID"
																		},
																		{
																			"id": "9f3e92b2-7c61-4bbc-8c1d-e3e312525776",
																			"key": "dspId",
																			"value": "49175899",
																			"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																		},
																		{
																			"id": "a5dc3997-36b9-4056-944d-e2593b2b48da",
																			"key": "sampleId",
																			"value": "49175899",
																			"description": "(Required) Sample ID"
																		}
																	]
																},
																"description": "Get slice of sample data, and run it through the DSP block. This only the axes selected by the DSP block. E.g. if you have selected only accX and accY as inputs for the DSP block, but the raw sample also contains accZ, accZ is filtered out."
															},
															"response": [
																{
																	"id": "35a2db0f-6cfe-41c9-bbb3-9c63cf2d4c63",
																	"name": "OK",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "x-api-key",
																				"value": "<API Key>"
																			}
																		],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"params\": {\n    \"scale-axes\": \"10\"\n  },\n  \"store\": true\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId/raw-data/:sampleId/slice/run?sliceStart=49175899&sliceEnd=49175899",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":projectId",
																				"dsp",
																				":dspId",
																				"raw-data",
																				":sampleId",
																				"slice",
																				"run"
																			],
																			"query": [
																				{
																					"key": "sliceStart",
																					"value": "49175899"
																				},
																				{
																					"key": "sliceEnd",
																					"value": "49175899"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectId",
																					"value": "49175899",
																					"description": "(Required) Project ID"
																				},
																				{
																					"key": "dspId",
																					"value": "49175899",
																					"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																				},
																				{
																					"key": "sampleId",
																					"value": "49175899",
																					"description": "(Required) Sample ID"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "{\n  \"features\": [\n    16426231.992908135,\n    -62046780.26979602\n  ],\n  \"graphs\": [\n    {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"image\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imageMimeType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"X\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"y\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suggestedXMin\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suggestedXMax\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suggestedYMin\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suggestedYMax\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lineWidth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"image\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imageMimeType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"X\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"y\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suggestedXMin\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suggestedXMax\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suggestedYMin\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suggestedYMax\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lineWidth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"labels\": [\n    \"laborum exercitation\",\n    \"incididunt\"\n  ],\n  \"sample\": {\n    \"sample\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payload\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"totalPayloadLength\": -51694898\n  },\n  \"success\": true,\n  \"error\": \"deserunt labore velit\",\n  \"performance\": {\n    \"latency\": -41108006,\n    \"ram\": -31769587\n  }\n}"
																}
															]
														},
														{
															"name": "Get processed sample (slice)",
															"id": "226de67c-4fc0-4b0e-9dd4-65b56176e696",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId/raw-data/:sampleId/slice/run/readonly?sliceStart=49175899&sliceEnd=49175899",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":projectId",
																		"dsp",
																		":dspId",
																		"raw-data",
																		":sampleId",
																		"slice",
																		"run",
																		"readonly"
																	],
																	"query": [
																		{
																			"key": "sliceStart",
																			"value": "49175899",
																			"description": "(Required) Begin index of the slice"
																		},
																		{
																			"key": "sliceEnd",
																			"value": "49175899",
																			"description": "(Required) End index of the slice"
																		}
																	],
																	"variable": [
																		{
																			"id": "5f2ff229-8365-4e59-9ed4-657d5b81f53b",
																			"key": "projectId",
																			"value": "49175899",
																			"description": "(Required) Project ID"
																		},
																		{
																			"id": "3c76743f-6df7-420d-9722-6316a2a57a33",
																			"key": "dspId",
																			"value": "49175899",
																			"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																		},
																		{
																			"id": "823ce773-941e-4f54-90cc-d0cc0bdf25d2",
																			"key": "sampleId",
																			"value": "49175899",
																			"description": "(Required) Sample ID"
																		}
																	]
																},
																"description": "Get slice of sample data, and run it through the DSP block. This only the axes selected by the DSP block. E.g. if you have selected only accX and accY as inputs for the DSP block, but the raw sample also contains accZ, accZ is filtered out."
															},
															"response": [
																{
																	"id": "5bb84c3a-07c1-4eda-8f0f-d0bfaa85c9e9",
																	"name": "OK",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "x-api-key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId/raw-data/:sampleId/slice/run/readonly?sliceStart=49175899&sliceEnd=49175899",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				":projectId",
																				"dsp",
																				":dspId",
																				"raw-data",
																				":sampleId",
																				"slice",
																				"run",
																				"readonly"
																			],
																			"query": [
																				{
																					"key": "sliceStart",
																					"value": "49175899"
																				},
																				{
																					"key": "sliceEnd",
																					"value": "49175899"
																				}
																			],
																			"variable": [
																				{
																					"key": "projectId",
																					"value": "49175899",
																					"description": "(Required) Project ID"
																				},
																				{
																					"key": "dspId",
																					"value": "49175899",
																					"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																				},
																				{
																					"key": "sampleId",
																					"value": "49175899",
																					"description": "(Required) Sample ID"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "{\n  \"features\": [\n    -77359424.23856588,\n    -97503124.19267581\n  ],\n  \"graphs\": [\n    {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"image\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imageMimeType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"X\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"y\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suggestedXMin\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suggestedXMax\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suggestedYMin\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suggestedYMax\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lineWidth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"image\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imageMimeType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"X\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"y\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suggestedXMin\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suggestedXMax\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suggestedYMin\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suggestedYMax\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lineWidth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"labels\": [\n    \"cillum\",\n    \"voluptate ea esse nostrud\"\n  ],\n  \"sample\": {\n    \"sample\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payload\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"totalPayloadLength\": 83262382\n  },\n  \"success\": false,\n  \"error\": \"pariatur p\",\n  \"performance\": {\n    \"latency\": -40245674,\n    \"ram\": 3971772\n  }\n}"
																}
															]
														}
													],
													"id": "95c6f1a4-3725-46e9-a32e-8773aa6a121d"
												},
												{
													"name": "Get raw sample (slice)",
													"id": "5880ed53-eaa7-444e-9bb2-a2e739fe9d17",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId/raw-data/:sampleId/slice?sliceStart=49175899&sliceEnd=49175899",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"dsp",
																":dspId",
																"raw-data",
																":sampleId",
																"slice"
															],
															"query": [
																{
																	"key": "sliceStart",
																	"value": "49175899",
																	"description": "(Required) Begin index of the slice"
																},
																{
																	"key": "sliceEnd",
																	"value": "49175899",
																	"description": "(Required) End index of the slice"
																}
															],
															"variable": [
																{
																	"id": "511cb107-db03-434e-a123-1378548d1b4c",
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"id": "87c379ea-bb46-45db-a221-fc9b2c480ce7",
																	"key": "dspId",
																	"value": "49175899",
																	"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																},
																{
																	"id": "472033f0-38b1-4e16-bf10-50fc76b0df67",
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														},
														"description": "Get slice of raw sample data, but with only the axes selected by the DSP block. E.g. if you have selected only accX and accY as inputs for the DSP block, but the raw sample also contains accZ, accZ is filtered out."
													},
													"response": [
														{
															"id": "f7a79f68-a331-4eec-8ff9-ca87a7cd9ba0",
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId/raw-data/:sampleId/slice?sliceStart=49175899&sliceEnd=49175899",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":projectId",
																		"dsp",
																		":dspId",
																		"raw-data",
																		":sampleId",
																		"slice"
																	],
																	"query": [
																		{
																			"key": "sliceStart",
																			"value": "49175899"
																		},
																		{
																			"key": "sliceEnd",
																			"value": "49175899"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectId",
																			"value": "49175899",
																			"description": "(Required) Project ID"
																		},
																		{
																			"key": "dspId",
																			"value": "49175899",
																			"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																		},
																		{
																			"key": "sampleId",
																			"value": "49175899",
																			"description": "(Required) Sample ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"payload\": {\n    \"device_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sensors\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"values\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"device_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cropStart\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cropEnd\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"sample\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"filename\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signatureValidate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"created\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"category\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"coldstorageFilename\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"label\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"intervalMs\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"frequency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"originalIntervalMs\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"originalFrequency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sensors\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"valuesCount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"added\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"boundingBoxes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"boundingBoxesType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"chartType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isDisabled\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isProcessing\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"processingError\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signatureMethod\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signatureKey\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"totalLengthMs\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"thumbnailVideo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"thumbnailVideoFull\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"processingJobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"success\": true,\n  \"totalPayloadLength\": -52989835,\n  \"error\": \"amet\"\n}"
														}
													]
												}
											],
											"id": "8d7c8ecc-e41d-4449-9db1-39deeb3f6e6f"
										},
										{
											"name": "Get raw sample",
											"id": "0e478899-8136-428c-9e7a-13e07277f13a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId/raw-data/:sampleId?limitPayloadValues=49175899",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"dsp",
														":dspId",
														"raw-data",
														":sampleId"
													],
													"query": [
														{
															"key": "limitPayloadValues",
															"value": "49175899",
															"description": "Limit the number of payload values in the response"
														}
													],
													"variable": [
														{
															"id": "ad0f530c-b6d9-4be0-9c19-78a29e25a030",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "fee9e3cc-02f8-4415-b034-2116a115f37e",
															"key": "dspId",
															"value": "49175899",
															"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
														},
														{
															"id": "c66c7a69-607d-48da-a31f-5c68d8da3707",
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												},
												"description": "Get raw sample data, but with only the axes selected by the DSP block. E.g. if you have selected only accX and accY as inputs for the DSP block, but the raw sample also contains accZ, accZ is filtered out. If you pass dspId = 0 this will return a raw graph without any processing."
											},
											"response": [
												{
													"id": "e089925b-1191-4bbf-805c-0c4588ad4677",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId/raw-data/:sampleId?limitPayloadValues=49175899",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"dsp",
																":dspId",
																"raw-data",
																":sampleId"
															],
															"query": [
																{
																	"key": "limitPayloadValues",
																	"value": "49175899"
																}
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "dspId",
																	"value": "49175899",
																	"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																},
																{
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"payload\": {\n    \"device_type\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sensors\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"values\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"device_name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cropStart\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cropEnd\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"sample\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"filename\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signatureValidate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"created\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"category\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"coldstorageFilename\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"label\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"intervalMs\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"frequency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"originalIntervalMs\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"originalFrequency\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"sensors\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"valuesCount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"added\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"boundingBoxes\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"boundingBoxesType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"chartType\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isDisabled\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isProcessing\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"processingError\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signatureMethod\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"signatureKey\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"totalLengthMs\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"thumbnailVideo\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"thumbnailVideoFull\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"processingJobId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"metadata\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"success\": true,\n  \"totalPayloadLength\": -52989835,\n  \"error\": \"amet\"\n}"
												}
											]
										}
									],
									"id": "8d58d8c6-7103-40fc-b932-c8e325a39441"
								},
								{
									"name": "features",
									"item": [
										{
											"name": "get-graph",
											"item": [
												{
													"name": "Sample of trained features",
													"id": "4f323ca0-5d03-412b-88bf-b46fefba1db3",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId/features/get-graph/:category?featureAx1=49175899&featureAx2=49175899&featureAx3=49175899",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"dsp",
																":dspId",
																"features",
																"get-graph",
																":category"
															],
															"query": [
																{
																	"key": "featureAx1",
																	"value": "49175899",
																	"description": "(Required) Feature axis 1"
																},
																{
																	"key": "featureAx2",
																	"value": "49175899",
																	"description": "(Required) Feature axis 2"
																},
																{
																	"key": "featureAx3",
																	"value": "49175899",
																	"description": "(Required) Feature axis 3"
																}
															],
															"variable": [
																{
																	"id": "e9538a19-d6e3-4943-a50c-24d5224acc4f",
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"id": "447d3cd8-a544-4cd9-8fff-062853703958",
																	"key": "dspId",
																	"value": "49175899",
																	"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																},
																{
																	"id": "b3f9d3bb-9da0-4799-91be-0cdbe84158d9",
																	"key": "category",
																	"value": "testing",
																	"description": "(Required) Which of the three acquisition categories to download data from"
																}
															]
														},
														"description": "Get a sample of trained features, this extracts a number of samples and their labels. Used to visualize the current training set."
													},
													"response": [
														{
															"id": "b197c77f-446e-4e8d-a5e6-4c567479bb01",
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId/features/get-graph/:category?featureAx1=49175899&featureAx2=49175899&featureAx3=49175899",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":projectId",
																		"dsp",
																		":dspId",
																		"features",
																		"get-graph",
																		":category"
																	],
																	"query": [
																		{
																			"key": "featureAx1",
																			"value": "49175899"
																		},
																		{
																			"key": "featureAx2",
																			"value": "49175899"
																		},
																		{
																			"key": "featureAx3",
																			"value": "49175899"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectId",
																			"value": "49175899",
																			"description": "(Required) Project ID"
																		},
																		{
																			"key": "dspId",
																			"value": "49175899",
																			"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																		},
																		{
																			"key": "category",
																			"value": "testing",
																			"description": "(Required) Which of the three acquisition categories to download data from"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"data\": [\n    {\n      \"X\": {\n        \"sed2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"y\": -95513958,\n      \"yLabel\": \"fugiat veniam et\",\n      \"sample\": {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startMs\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endMs\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    {\n      \"X\": {\n        \"sintf\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"y\": 83144705,\n      \"yLabel\": \"fugiat velit veniam\",\n      \"sample\": {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startMs\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endMs\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    }\n  ],\n  \"skipFirstFeatures\": 9276499,\n  \"success\": true,\n  \"totalSampleCount\": 84996604,\n  \"error\": \"Duis Excepteur\"\n}"
														}
													]
												},
												{
													"name": "Features for sample",
													"id": "add1b16c-22e7-447e-aa35-596c99832b33",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId/features/get-graph/classification/:sampleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"dsp",
																":dspId",
																"features",
																"get-graph",
																"classification",
																":sampleId"
															],
															"variable": [
																{
																	"id": "967f1734-0e9d-4955-baf8-5119f22810ce",
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"id": "601857fd-3a03-4cf2-b06a-bca342dce796",
																	"key": "dspId",
																	"value": "49175899",
																	"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																},
																{
																	"id": "6244ec75-0f45-451e-b595-a4d306475279",
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														},
														"description": "Runs the DSP block against a sample. This will move the sliding window (dependent on the sliding window length and the sliding window increase parameters in the impulse) over the complete file, and run the DSP function for every window that is extracted."
													},
													"response": [
														{
															"id": "2b4ce25d-a716-48c6-a7c1-07c0094c446f",
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId/features/get-graph/classification/:sampleId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":projectId",
																		"dsp",
																		":dspId",
																		"features",
																		"get-graph",
																		"classification",
																		":sampleId"
																	],
																	"variable": [
																		{
																			"key": "projectId",
																			"value": "49175899",
																			"description": "(Required) Project ID"
																		},
																		{
																			"key": "dspId",
																			"value": "49175899",
																			"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																		},
																		{
																			"key": "sampleId",
																			"value": "49175899",
																			"description": "(Required) Sample ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"data\": [\n    {\n      \"X\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"y\": -38885010,\n      \"yLabel\": \"eu voluptate\",\n      \"sample\": {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startMs\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endMs\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    {\n      \"X\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"y\": 55374958,\n      \"yLabel\": \"enim occaecat Lorem cupidatat\",\n      \"sample\": {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startMs\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endMs\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    }\n  ],\n  \"skipFirstFeatures\": -66460218,\n  \"success\": false,\n  \"totalSampleCount\": -79212269,\n  \"error\": \"nostrud nulla\"\n}"
														}
													]
												}
											],
											"id": "5c6c9f87-a80a-45b1-a0fe-781246343523"
										},
										{
											"name": "Feature labels",
											"id": "94d6ad42-e0a8-4de1-8f84-b6abce08eb76",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId/features/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"dsp",
														":dspId",
														"features",
														"labels"
													],
													"variable": [
														{
															"id": "1a722015-d092-48c0-8c97-2c0e20d74c9e",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "e27d143a-013d-4717-aea3-84cb7e9b9402",
															"key": "dspId",
															"value": "49175899",
															"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
														}
													]
												},
												"description": "Retrieve the names of the features the DSP block generates"
											},
											"response": [
												{
													"id": "afa9f962-6278-4a52-9014-ae8291ec5e52",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId/features/labels",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"dsp",
																":dspId",
																"features",
																"labels"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "dspId",
																	"value": "49175899",
																	"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"labels\": [\n    \"pariatur proident\",\n    \"cillum aute sit velit\"\n  ],\n  \"success\": false,\n  \"error\": \"sit ea pariatur Duis Ut\"\n}"
												}
											]
										},
										{
											"name": "Feature importance",
											"id": "adf4a60a-d891-4442-94f5-57662a1f81cf",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId/features/importance",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"dsp",
														":dspId",
														"features",
														"importance"
													],
													"variable": [
														{
															"id": "67c131f3-cec2-49ce-ac78-3d8b326b36e4",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "aafe31fc-ef2a-4282-888f-5fb1888bca20",
															"key": "dspId",
															"value": "49175899",
															"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
														}
													]
												},
												"description": "Retrieve the feature importance for a DSP block (only available for blocks where dimensionalityReduction is not enabled)"
											},
											"response": [
												{
													"id": "1679927b-7ad7-4d83-934e-15a132791225",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId/features/importance",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"dsp",
																":dspId",
																"features",
																"importance"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "dspId",
																	"value": "49175899",
																	"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"hasFeatureImportance\": true,\n  \"labels\": {\n    \"enim_d\": {\n      \"features\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"exercitation24a\": {\n      \"features\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  },\n  \"success\": false,\n  \"error\": \"sit\"\n}"
												}
											]
										}
									],
									"id": "033a6f33-d331-445a-b329-0e6ce743f8c9"
								},
								{
									"name": "Get config",
									"id": "e4b7af8e-f685-4e21-a515-5aab4b9f6e54",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"dsp",
												":dspId"
											],
											"variable": [
												{
													"id": "1ec45465-b4c0-4b53-826d-668aee47b5ea",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												},
												{
													"id": "2c4d6128-4196-4f8e-9063-6cbebd57f80f",
													"key": "dspId",
													"value": "49175899",
													"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
												}
											]
										},
										"description": "Retrieve the configuration parameters for the DSP block. Use the impulse functions to retrieve all DSP blocks."
									},
									"response": [
										{
											"id": "43f859f5-1f47-4763-a99d-145caccf09d1",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"dsp",
														":dspId"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"key": "dspId",
															"value": "49175899",
															"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"cillum nostrud\",\n  \"dsp\": {\n    \"id\": 1,\n    \"name\": \"Spectral features\",\n    \"windowLength\": 3000,\n    \"type\": \"spectral-analysis\",\n    \"classes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"features\": {\n      \"generated\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"count\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"expectedWindowCount\": -2881569,\n    \"inputAxes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"canCalculateFeatureImportance\": true,\n    \"calculateFeatureImportance\": true,\n    \"performance\": {\n      \"latency\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ram\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"config\": [\n    {\n      \"group\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"items\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"group\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"items\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"configError\": \"ex anim est\"\n}"
										}
									]
								},
								{
									"name": "Set config",
									"id": "489fc025-828b-4ec0-a15c-587ff3c2ad08",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"config\": {\n    \"ullamco7\": \"eu ullamco nulla\",\n    \"dolorfb1\": \"ex ut velit\",\n    \"anim24\": \"fugiat pariatur occaecat adipisicing\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"dsp",
												":dspId"
											],
											"variable": [
												{
													"id": "29964f0a-84ea-4442-aa77-545b2a0a659e",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												},
												{
													"id": "8a31915c-dd72-41c1-82c4-d0f89111acc8",
													"key": "dspId",
													"value": "49175899",
													"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
												}
											]
										},
										"description": "Set configuration parameters for the DSP block. Only values set in the body will be overwritten."
									},
									"response": [
										{
											"id": "1074f9d3-73fb-4110-80ab-d2f623c3eb5f",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"config\": {\n    \"ullamco7\": \"eu ullamco nulla\",\n    \"dolorfb1\": \"ex ut velit\",\n    \"anim24\": \"fugiat pariatur occaecat adipisicing\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"dsp",
														":dspId"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"key": "dspId",
															"value": "49175899",
															"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Get metadata",
									"id": "5282235c-5f0f-4ddd-ae17-43902a2a0d2e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId/metadata",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"dsp",
												":dspId",
												"metadata"
											],
											"variable": [
												{
													"id": "575b601b-f0f4-4b08-bb21-e2a5685ceecb",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												},
												{
													"id": "096e7689-aab9-447a-acf8-1e70a844423c",
													"key": "dspId",
													"value": "49175899",
													"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
												}
											]
										},
										"description": "Retrieve the metadata from a generated DSP block."
									},
									"response": [
										{
											"id": "16e064b4-196a-4a3d-8d38-72fe9677f31a",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/dsp/:dspId/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"dsp",
														":dspId",
														"metadata"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"key": "dspId",
															"value": "49175899",
															"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"created\": \"1976-01-26T12:36:55.873Z\",\n  \"dspConfig\": {\n    \"non_7c\": \"id commodo aute ex amet\"\n  },\n  \"featureCount\": -65138759,\n  \"frequency\": -59013883.04039208,\n  \"includedSamples\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"windowCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"windowCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"labels\": [\n    \"dolor fugiat nulla\",\n    \"ad Lorem\"\n  ],\n  \"outputConfig\": {\n    \"type\": \"spectrogram\",\n    \"shape\": {\n      \"width\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"height\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"channels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"frames\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"padZeros\": true,\n  \"success\": true,\n  \"windowCount\": -56417519,\n  \"windowIncreaseMs\": -15572621,\n  \"windowSizeMs\": -19744805,\n  \"error\": \"Duis sit dolore\",\n  \"featureLabels\": [\n    \"sunt mollit\",\n    \"sed irure\"\n  ],\n  \"fftUsed\": [\n    51428679,\n    33139882\n  ]\n}"
										}
									]
								}
							],
							"id": "02db780b-f780-458d-82cd-b2ecb8a0c4e2"
						},
						{
							"name": "dsp-data/{dsp Id}",
							"item": [
								{
									"name": "Download DSP data",
									"id": "5c8beaf9-5d09-47fe-97bc-7e042e8d5863",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/octet-stream"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/dsp-data/:dspId/x/:category?raw=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"dsp-data",
												":dspId",
												"x",
												":category"
											],
											"query": [
												{
													"key": "raw",
													"value": "true",
													"description": "Whether to download raw data or processed data. Processed data is the default."
												}
											],
											"variable": [
												{
													"id": "5d0cce76-c1ef-4ae9-9c26-0e941396c2ad",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												},
												{
													"id": "9d949d7f-b0b4-4df8-8734-e456c1867472",
													"key": "dspId",
													"value": "49175899",
													"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
												},
												{
													"id": "c0a2d007-a571-4231-a950-6059165201f5",
													"key": "category",
													"value": "testing",
													"description": "(Required) Which of the three acquisition categories to download data from"
												}
											]
										},
										"description": "Download output from a DSP block over all data in the training set, already sliced in windows. In Numpy binary format."
									},
									"response": [
										{
											"id": "3f210905-7bda-45a6-a043-5e51a292777e",
											"name": "Numpy binary file",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/dsp-data/:dspId/x/:category?raw=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"dsp-data",
														":dspId",
														"x",
														":category"
													],
													"query": [
														{
															"key": "raw",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"key": "dspId",
															"value": "49175899",
															"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
														},
														{
															"key": "category",
															"value": "testing",
															"description": "(Required) Which of the three acquisition categories to download data from"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/octet-stream"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "ipsum non sunt"
										}
									]
								},
								{
									"name": "Download DSP labels",
									"id": "794310a8-1dd8-4c23-8d85-97ccee70cad8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/octet-stream"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/dsp-data/:dspId/y/:category",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"dsp-data",
												":dspId",
												"y",
												":category"
											],
											"variable": [
												{
													"id": "c45ba272-fb1c-4606-8657-12f4ae0abe12",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												},
												{
													"id": "c2a8ef4d-16be-4503-94f9-3f503e34b7ca",
													"key": "dspId",
													"value": "49175899",
													"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
												},
												{
													"id": "2bcecc2d-3d64-429f-9eab-67853121cbc1",
													"key": "category",
													"value": "testing",
													"description": "(Required) Which of the three acquisition categories to download data from"
												}
											]
										},
										"description": "Download labels for a DSP block over all data in the training set, already sliced in windows."
									},
									"response": [
										{
											"id": "8f9f3419-92ec-4a5a-bf70-e60595cb0387",
											"name": "Numpy binary file",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/dsp-data/:dspId/y/:category",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"dsp-data",
														":dspId",
														"y",
														":category"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"key": "dspId",
															"value": "49175899",
															"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
														},
														{
															"key": "category",
															"value": "testing",
															"description": "(Required) Which of the three acquisition categories to download data from"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/octet-stream"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "ipsum non sunt"
										}
									]
								}
							],
							"id": "8db3578e-c58e-4985-b956-5e378e0103fe"
						},
						{
							"name": "training",
							"item": [
								{
									"name": "{learn Id}",
									"item": [
										{
											"name": "Download data",
											"id": "e8ec3128-fa44-4648-ac4e-d860a8593f96",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/octet-stream"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/training/:learnId/x",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"training",
														":learnId",
														"x"
													],
													"variable": [
														{
															"id": "8138b625-73c7-4d00-9776-6e58e0c5fb02",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "341e9ea1-8b1a-4474-8473-d68605469301",
															"key": "learnId",
															"value": "49175899",
															"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
														}
													]
												},
												"description": "Download the processed data for this learning block. This is data already processed by the signal processing blocks."
											},
											"response": [
												{
													"id": "07c02f97-2a65-4151-9a0c-06e142840e55",
													"name": "Numpy binary file",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/training/:learnId/x",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"training",
																":learnId",
																"x"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "learnId",
																	"value": "49175899",
																	"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/octet-stream"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "ipsum non sunt"
												}
											]
										},
										{
											"name": "Download labels",
											"id": "a01db59f-8fc8-4d3c-beb7-1de3dbddd848",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/octet-stream"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/training/:learnId/y",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"training",
														":learnId",
														"y"
													],
													"variable": [
														{
															"id": "7074d88a-b5f7-44b9-ae6b-d2fc010f720a",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "df406ddb-b1ca-40bf-945f-b23d508b647e",
															"key": "learnId",
															"value": "49175899",
															"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
														}
													]
												},
												"description": "Download the labels for this learning block. This is data already processed by the signal processing blocks. Not all blocks support this function. If so, a GenericApiResponse is returned with an error message."
											},
											"response": [
												{
													"id": "3c95243f-ad44-44c9-ad60-4d26e58bc789",
													"name": "Numpy binary file",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/training/:learnId/y",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"training",
																":learnId",
																"y"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "learnId",
																	"value": "49175899",
																	"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/octet-stream"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "ipsum non sunt"
												}
											]
										}
									],
									"id": "be9e3e7a-881e-4306-8cf2-5ea3a1b5d2d0"
								},
								{
									"name": "anomaly/{learn Id}",
									"item": [
										{
											"name": "features/get-graph",
											"item": [
												{
													"name": "Trained features",
													"id": "14cb2866-f714-4eef-ab4a-f6a28538146e",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/training/anomaly/:learnId/features/get-graph?featureAx1=49175899&featureAx2=49175899",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"training",
																"anomaly",
																":learnId",
																"features",
																"get-graph"
															],
															"query": [
																{
																	"key": "featureAx1",
																	"value": "49175899",
																	"description": "(Required) Feature axis 1"
																},
																{
																	"key": "featureAx2",
																	"value": "49175899",
																	"description": "(Required) Feature axis 2"
																}
															],
															"variable": [
																{
																	"id": "4d6a1cff-384e-4bcd-873f-e8e0bf2b2bcf",
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"id": "41cf5b12-c8ec-467a-b55b-8937107a3d22",
																	"key": "learnId",
																	"value": "49175899",
																	"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
																}
															]
														},
														"description": "Get a sample of trained features, this extracts a number of samples and their features."
													},
													"response": [
														{
															"id": "df1cd303-7f82-4a07-a9b3-cdfa6a3e70be",
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:projectId/training/anomaly/:learnId/features/get-graph?featureAx1=49175899&featureAx2=49175899",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":projectId",
																		"training",
																		"anomaly",
																		":learnId",
																		"features",
																		"get-graph"
																	],
																	"query": [
																		{
																			"key": "featureAx1",
																			"value": "49175899"
																		},
																		{
																			"key": "featureAx2",
																			"value": "49175899"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectId",
																			"value": "49175899",
																			"description": "(Required) Project ID"
																		},
																		{
																			"key": "learnId",
																			"value": "49175899",
																			"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"data\": [\n    {\n      \"X\": {\n        \"0\": -2.17,\n        \"11\": 1.21,\n        \"22\": 0.79\n      }\n    },\n    {\n      \"X\": {\n        \"0\": -2.17,\n        \"11\": 1.21,\n        \"22\": 0.79\n      }\n    }\n  ],\n  \"success\": true,\n  \"totalSampleCount\": -66922497,\n  \"error\": \"adipisicing\"\n}"
														}
													]
												},
												{
													"name": "Trained features for sample",
													"id": "2273742c-55a1-4dc8-85f4-0242ff832cc0",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/training/anomaly/:learnId/features/get-graph/classification/:sampleId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"training",
																"anomaly",
																":learnId",
																"features",
																"get-graph",
																"classification",
																":sampleId"
															],
															"variable": [
																{
																	"id": "051ed597-6b6a-4a72-b8b5-8f5c957da44c",
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"id": "8461b1f7-f5a8-4493-a431-59506529cab0",
																	"key": "learnId",
																	"value": "49175899",
																	"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
																},
																{
																	"id": "b14c8920-1bbb-4ed6-a45c-f799136e9d4f",
																	"key": "sampleId",
																	"value": "49175899",
																	"description": "(Required) Sample ID"
																}
															]
														},
														"description": "Get trained features for a single sample. This runs both the DSP prerequisites and the anomaly classifier."
													},
													"response": [
														{
															"id": "f5b56f33-5892-4713-a7d9-7278dd065e71",
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:projectId/training/anomaly/:learnId/features/get-graph/classification/:sampleId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":projectId",
																		"training",
																		"anomaly",
																		":learnId",
																		"features",
																		"get-graph",
																		"classification",
																		":sampleId"
																	],
																	"variable": [
																		{
																			"key": "projectId",
																			"value": "49175899",
																			"description": "(Required) Project ID"
																		},
																		{
																			"key": "learnId",
																			"value": "49175899",
																			"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
																		},
																		{
																			"key": "sampleId",
																			"value": "49175899",
																			"description": "(Required) Sample ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"data\": [\n    {\n      \"X\": {\n        \"0\": -2.17,\n        \"11\": 1.21,\n        \"22\": 0.79\n      }\n    },\n    {\n      \"X\": {\n        \"0\": -2.17,\n        \"11\": 1.21,\n        \"22\": 0.79\n      }\n    }\n  ],\n  \"success\": true,\n  \"totalSampleCount\": -55510762,\n  \"error\": \"aliqua exercitation\"\n}"
														}
													]
												}
											],
											"id": "334f8321-73a8-415f-96fa-c0eda461e715"
										},
										{
											"name": "Anomaly information",
											"id": "310f29c2-5690-49d8-81fe-3e9b42aa161c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/training/anomaly/:learnId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"training",
														"anomaly",
														":learnId"
													],
													"variable": [
														{
															"id": "f7357bea-8445-45b3-aaa0-bbce101f3780",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "dda8df66-809a-4015-baca-287b47910840",
															"key": "learnId",
															"value": "49175899",
															"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
														}
													]
												},
												"description": "Get information about an anomaly block, such as its dependencies. Use the impulse blocks to find the learnId."
											},
											"response": [
												{
													"id": "d6726fec-e7c5-49c3-8115-e371923fa34d",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/training/anomaly/:learnId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"training",
																"anomaly",
																":learnId"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "learnId",
																	"value": "49175899",
																	"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"axes\": [\n    {\n      \"label\": \"laborum quis\",\n      \"selected\": true,\n      \"favourite\": true\n    },\n    {\n      \"label\": \"nulla nisi est occaecat\",\n      \"selected\": true,\n      \"favourite\": true\n    }\n  ],\n  \"clusterCount\": 88381081,\n  \"dependencies\": {\n    \"classes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"blockNames\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"featureCount\": 49728495,\n    \"sampleCount\": 4816419\n  },\n  \"minimumConfidenceRating\": -20142953.497316226,\n  \"name\": \"ullamco\",\n  \"selectedAxes\": [\n    86784233,\n    -13644519\n  ],\n  \"success\": true,\n  \"trained\": false,\n  \"error\": \"fugiat velit ea\"\n}"
												}
											]
										},
										{
											"name": "Anomaly settings",
											"id": "2f3eeba5-4986-4ce2-9a38-6a32faa30d1b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"minimumConfidenceRating\": 34457838.21654606\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/training/anomaly/:learnId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"training",
														"anomaly",
														":learnId"
													],
													"variable": [
														{
															"id": "5b38e7ce-36ab-4490-82c7-50e002dcfa71",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "c36946cb-dbf5-45f1-aa69-7f39fec507d0",
															"key": "learnId",
															"value": "49175899",
															"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
														}
													]
												},
												"description": "Configure the anomaly block, such as its minimum confidence score. Use the impulse blocks to find the learnId."
											},
											"response": [
												{
													"id": "1276040a-4093-4491-bea3-a343ceeffb6c",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"minimumConfidenceRating\": 34457838.21654606\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/training/anomaly/:learnId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"training",
																"anomaly",
																":learnId"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "learnId",
																	"value": "49175899",
																	"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Anomaly metadata",
											"id": "c843313f-17b8-4719-a9e5-25eca696b5ab",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/training/anomaly/:learnId/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"training",
														"anomaly",
														":learnId",
														"metadata"
													],
													"variable": [
														{
															"id": "8c8e4877-7aa7-4bbc-892a-269f13b0113a",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "a1306e21-2ed5-4bac-98d9-a173910601c2",
															"key": "learnId",
															"value": "49175899",
															"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
														}
													]
												},
												"description": "Get metadata about a trained anomaly block. Use the impulse blocks to find the learnId."
											},
											"response": [
												{
													"id": "42888a0d-8ae1-4e00-b59e-2913f442c174",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/training/anomaly/:learnId/metadata",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"training",
																"anomaly",
																":learnId",
																"metadata"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "learnId",
																	"value": "49175899",
																	"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"axes\": [\n    -19364612,\n    60192233\n  ],\n  \"clusters\": [\n    {\n      \"center\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxError\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"center\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maxError\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"created\": \"1991-01-11T05:06:47.259Z\",\n  \"mean\": [\n    77358812.06203961,\n    -28254328.161584526\n  ],\n  \"scale\": [\n    -11402839.364860594,\n    -57399397.77458472\n  ],\n  \"success\": false,\n  \"error\": \"consequat irure proident\"\n}"
												}
											]
										}
									],
									"id": "84bc6571-073f-4e35-9679-860ce8840106"
								},
								{
									"name": "keras/{learn Id}",
									"item": [
										{
											"name": "Keras information",
											"id": "ffc05e95-7793-4623-846e-e3cc7b8d29f3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/training/keras/:learnId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"training",
														"keras",
														":learnId"
													],
													"variable": [
														{
															"id": "74afefea-0c7b-428f-bf03-2c08a28c9d92",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "e7de7493-2822-4aa3-9843-a9412e646f65",
															"key": "learnId",
															"value": "49175899",
															"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
														}
													]
												},
												"description": "Get information about a Keras block, such as its dependencies. Use the impulse blocks to find the learnId."
											},
											"response": [
												{
													"id": "719379a3-edc4-400f-bafc-aa612c9b7f07",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/training/keras/:learnId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"training",
																"keras",
																":learnId"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "learnId",
																	"value": "49175899",
																	"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"augmentationPolicyImage\": \"all\",\n  \"dependencies\": {\n    \"classes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"blockNames\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"featureCount\": -82878600,\n    \"sampleCount\": 14007758\n  },\n  \"learningRate\": 15188695.987262875,\n  \"minimumConfidenceRating\": 53210855.48704687,\n  \"mode\": \"expert\",\n  \"name\": \"officia do magna s\",\n  \"script\": \"laboris et ad u\",\n  \"selectedModelType\": \"akida\",\n  \"shape\": \"consequat id\",\n  \"success\": true,\n  \"trained\": false,\n  \"trainingCycles\": 14418917,\n  \"transferLearningModels\": [\n    {\n      \"name\": \"ea laborum\",\n      \"shortName\": \"anim in deserunt\",\n      \"description\": \"ipsum commodo elit consequat dolor\",\n      \"hasNeurons\": false,\n      \"hasDropout\": false,\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultNeurons\": 68355002,\n      \"defaultDropout\": -77244443.14255106,\n      \"defaultLearningRate\": -20079681.134338662,\n      \"defaultTrainingCycles\": -36920091.93584886,\n      \"hasImageAugmentation\": false,\n      \"organizationModelId\": 11476029\n    },\n    {\n      \"name\": \"dolore dolor et irure culpa\",\n      \"shortName\": \"dolor laboris labore\",\n      \"description\": \"pariatur irure ipsum\",\n      \"hasNeurons\": true,\n      \"hasDropout\": true,\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"defaultNeurons\": 41365378,\n      \"defaultDropout\": 69659097.92087105,\n      \"defaultLearningRate\": 94545312.01512188,\n      \"defaultTrainingCycles\": -15201686.7183927,\n      \"hasImageAugmentation\": false,\n      \"organizationModelId\": -87463839\n    }\n  ],\n  \"visualLayers\": [\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"neurons\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"kernelSize\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dropoutRate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"columns\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"stack\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"organizationModelId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"neurons\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"kernelSize\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dropoutRate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"columns\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"stack\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"enabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"organizationModelId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"error\": \"fugiat Excepteur dolor in\",\n  \"type\": \"keras-regression\",\n  \"trainTestSplit\": 32903089.93982634,\n  \"autoClassWeights\": true,\n  \"findLearningRate\": true,\n  \"augmentationPolicySpectrogram\": {\n    \"enabled\": true,\n    \"warping\": true,\n    \"freqMasking\": \"low\",\n    \"timeMasking\": \"high\",\n    \"gaussianNoise\": \"low\"\n  }\n}"
												}
											]
										},
										{
											"name": "Keras settings",
											"id": "8bc462c9-8e56-4e4d-90cb-ac160037ad29",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"mode\": \"visual\",\n  \"minimumConfidenceRating\": -91375347.76517971,\n  \"selectedModelType\": \"requiresRetrain\",\n  \"script\": \"tempor proident cupidatat reprehenderit adipi\",\n  \"visualLayers\": [\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"neurons\": 47004541,\n      \"kernelSize\": -48657590,\n      \"dropoutRate\": -29191275.851798743,\n      \"columns\": 3549204,\n      \"stack\": -48117772,\n      \"enabled\": true,\n      \"organizationModelId\": -49687682\n    },\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"neurons\": -75363208,\n      \"kernelSize\": -18939304,\n      \"dropoutRate\": -936304.1519569159,\n      \"columns\": 9608049,\n      \"stack\": 52498480,\n      \"enabled\": false,\n      \"organizationModelId\": -34999248\n    }\n  ],\n  \"trainingCycles\": -85343719,\n  \"learningRate\": 98642961.60879368,\n  \"trainTestSplit\": 94939464.26333481,\n  \"autoClassWeights\": false,\n  \"findLearningRate\": true,\n  \"augmentationPolicyImage\": \"none\",\n  \"augmentationPolicySpectrogram\": {\n    \"enabled\": true,\n    \"warping\": true,\n    \"freqMasking\": \"high\",\n    \"timeMasking\": \"low\",\n    \"gaussianNoise\": \"low\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/training/keras/:learnId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"training",
														"keras",
														":learnId"
													],
													"variable": [
														{
															"id": "9971b835-3c73-4be1-8638-c79aa44bd2e0",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "a46027c9-e7e8-44bb-bfeb-54a66ff9d00a",
															"key": "learnId",
															"value": "49175899",
															"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
														}
													]
												},
												"description": "Configure the Keras block, such as its minimum confidence score. Use the impulse blocks to find the learnId."
											},
											"response": [
												{
													"id": "59b03087-c229-43ed-944c-bf7c3a4ef2ea",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"mode\": \"expert\",\n  \"minimumConfidenceRating\": -15426476.312076569,\n  \"selectedModelType\": \"float32\",\n  \"script\": \"enim veniam\",\n  \"visualLayers\": [\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"neurons\": -189154,\n      \"kernelSize\": 23398090,\n      \"dropoutRate\": 32520744.99175124,\n      \"columns\": 87100608,\n      \"stack\": 22450517,\n      \"enabled\": false,\n      \"organizationModelId\": -80126460\n    },\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"neurons\": 28017641,\n      \"kernelSize\": -78815915,\n      \"dropoutRate\": -64597329.64496601,\n      \"columns\": 41566562,\n      \"stack\": 93311814,\n      \"enabled\": true,\n      \"organizationModelId\": -22814337\n    }\n  ],\n  \"trainingCycles\": 52786380,\n  \"learningRate\": 8102755.087416783,\n  \"trainTestSplit\": 41144081.16662645,\n  \"autoClassWeights\": false,\n  \"findLearningRate\": true,\n  \"augmentationPolicyImage\": \"none\",\n  \"augmentationPolicySpectrogram\": {\n    \"enabled\": true,\n    \"warping\": true,\n    \"freqMasking\": \"high\",\n    \"timeMasking\": \"high\",\n    \"gaussianNoise\": \"none\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/training/keras/:learnId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"training",
																"keras",
																":learnId"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "learnId",
																	"value": "49175899",
																	"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Keras metadata",
											"id": "1ad444c2-12ce-4152-8f96-d8b373b1743d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/training/keras/:learnId/metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"training",
														"keras",
														":learnId",
														"metadata"
													],
													"variable": [
														{
															"id": "3d31614e-18df-4264-b288-22b25dcdae05",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "50416549-4c30-4ecc-a1cb-a8389e19c61c",
															"key": "learnId",
															"value": "49175899",
															"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
														}
													]
												},
												"description": "Get metadata about a trained Keras block. Use the impulse blocks to find the learnId."
											},
											"response": [
												{
													"id": "5d63d653-4af7-44ed-902d-27d22e50d297",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/training/keras/:learnId/metadata",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"training",
																"keras",
																":learnId",
																"metadata"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "learnId",
																	"value": "49175899",
																	"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"availableModelTypes\": [\n    \"int8\",\n    \"int8\"\n  ],\n  \"classNames\": [\n    \"id laboris Lorem minim\",\n    \"occaecat\"\n  ],\n  \"created\": \"1992-02-23T17:44:31.892Z\",\n  \"hasTrainedModel\": false,\n  \"layers\": [\n    {\n      \"input\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"output\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"input\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"output\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"mode\": \"object-detection\",\n  \"modelValidationMetrics\": [\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"loss\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"confusionMatrix\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"report\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"onDevicePerformance\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visualization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"accuracy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"predictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"loss\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"confusionMatrix\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"report\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"onDevicePerformance\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"visualization\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"accuracy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"predictions\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"recommendedModelType\": \"akida\",\n  \"success\": false,\n  \"error\": \"in dolor\",\n  \"objectDetectionLastLayer\": \"yolov5\"\n}"
												}
											]
										},
										{
											"name": "Get data explorer features",
											"id": "d63ac930-bf62-4c29-91d5-05d5ea23c962",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/training/keras/:learnId/data-explorer/features",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"training",
														"keras",
														":learnId",
														"data-explorer",
														"features"
													],
													"variable": [
														{
															"id": "7865358a-4fa6-4838-9dff-b0f13550bc84",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "3e0a00f9-ac64-4409-a545-ca158bd589c8",
															"key": "learnId",
															"value": "49175899",
															"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
														}
													]
												},
												"description": "t-SNE2 output of the raw dataset using embeddings from this Keras block"
											},
											"response": [
												{
													"id": "e2bf5b49-f041-401e-8696-e3dd4832bcdf",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/training/keras/:learnId/data-explorer/features",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"training",
																"keras",
																":learnId",
																"data-explorer",
																"features"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "learnId",
																	"value": "49175899",
																	"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"data\": [\n    {\n      \"X\": {\n        \"dolor_2b\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"y\": -79518260,\n      \"yLabel\": \"consequat in occaecat\",\n      \"sample\": {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startMs\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endMs\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    {\n      \"X\": {\n        \"proident__1\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      \"y\": -80457620,\n      \"yLabel\": \"ut irure\",\n      \"sample\": {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"startMs\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"endMs\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    }\n  ],\n  \"hasFeatures\": true,\n  \"success\": true,\n  \"error\": \"Excepteu\",\n  \"inputBlock\": {\n    \"id\": -9145220,\n    \"type\": \"time-series\",\n    \"name\": \"Time series\",\n    \"title\": \"Time series\",\n    \"primaryVersion\": true,\n    \"windowSizeMs\": 2004,\n    \"windowIncreaseMs\": 42258866,\n    \"frequencyHz\": 60,\n    \"classificationWindowIncreaseMs\": -76172261,\n    \"padZeros\": true,\n    \"imageWidth\": 28,\n    \"imageHeight\": 28,\n    \"resizeMode\": \"squash\",\n    \"resizeMethod\": \"lanczos3\",\n    \"cropAnchor\": \"middle-center\",\n    \"baseBlockId\": 14776307.136480734,\n    \"tunerBaseBlockId\": -5982546.670061544,\n    \"tunerTemplateId\": -40936056.26933954,\n    \"tunerPrimary\": false,\n    \"clonedFromBlockId\": -20861259.736945882,\n    \"mutated\": false,\n    \"enabled\": false,\n    \"db\": false,\n    \"description\": \"Reduced learning rate and more layers\",\n    \"createdBy\": \"createImpulse\",\n    \"createdAt\": \"1972-12-10T10:55:34.372Z\"\n  }\n}"
												}
											]
										},
										{
											"name": "Upload Keras files",
											"id": "9e7de18c-f415-4579-8ba0-018fa68e482e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "zip",
															"type": "file",
															"description": "(Required) ",
															"value": null
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/training/keras/:learnId/files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"training",
														"keras",
														":learnId",
														"files"
													],
													"variable": [
														{
															"id": "a06e253f-7530-48b0-84d4-eb032094f4ec",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "89995bfd-3448-4eea-8bff-110cc98971eb",
															"key": "learnId",
															"value": "49175899",
															"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
														}
													]
												},
												"description": "Replace Keras block files with the contents of a zip. This is an internal API."
											},
											"response": [
												{
													"id": "474383a1-61cd-451c-97a6-6ac8cb242cce",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"description": "(Required) ",
																	"key": "zip",
																	"type": "file"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/training/keras/:learnId/files",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"training",
																"keras",
																":learnId",
																"files"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "learnId",
																	"value": "49175899",
																	"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "iPython Notebook",
											"id": "4a19146f-f9ec-4aa6-9e35-5405ea830be9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/x-ipynb+json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/training/keras/:learnId/ipynb",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"training",
														"keras",
														":learnId",
														"ipynb"
													],
													"variable": [
														{
															"id": "88f8427b-e407-4c73-a15e-5e1c4dfd420e",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "432b27f0-ce8b-41ee-8814-f933f89274c8",
															"key": "learnId",
															"value": "49175899",
															"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
														}
													]
												},
												"description": "Export the neural network architecture as an iPython notebook."
											},
											"response": [
												{
													"id": "c11d448e-55a8-403d-ad8e-4b0681dc4408",
													"name": "File",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/training/keras/:learnId/ipynb",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"training",
																"keras",
																":learnId",
																"ipynb"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "learnId",
																	"value": "49175899",
																	"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/x-ipynb+json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "\"ipsum non sunt\""
												}
											]
										}
									],
									"id": "80e863ce-fe3f-4eb7-b972-b56037fbb550"
								}
							],
							"id": "36f19b5e-6c7c-4a88-9c74-3c094b3b7cc1"
						},
						{
							"name": "classify",
							"item": [
								{
									"name": "Classify sample",
									"id": "f0be25fb-5e20-480f-850b-d0220b54affc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/classify/:sampleId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"classify",
												":sampleId"
											],
											"variable": [
												{
													"id": "ab8c715e-0cb3-49fc-9c9b-afff47f41ce8",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												},
												{
													"id": "c71094ca-0499-4cb2-818a-572914486180",
													"key": "sampleId",
													"value": "49175899",
													"description": "(Required) Sample ID"
												}
											]
										},
										"description": "Classify a complete file against the current impulse. This will move the sliding window (dependent on the sliding window length and the sliding window increase parameters in the impulse) over the complete file, and classify for every window that is extracted."
									},
									"response": [
										{
											"id": "f753630b-470a-45b4-9f73-2c33f25bb3cd",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/classify/:sampleId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"classify",
														":sampleId"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"key": "sampleId",
															"value": "49175899",
															"description": "(Required) Sample ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"alreadyInDatabase\": true,\n  \"classifications\": [\n    {\n      \"learnBlock\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"result\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"minimumConfidenceRating\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maximumRegressionError\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"structuredResult\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"details\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectDetectionLastLayer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"learnBlock\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"result\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"minimumConfidenceRating\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"maximumRegressionError\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"structuredResult\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"details\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectDetectionLastLayer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"sample\": {\n    \"sample\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"payload\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"totalPayloadLength\": 59684085\n  },\n  \"success\": true,\n  \"windowIncreaseMs\": 10,\n  \"windowSizeMs\": 2996,\n  \"error\": \"incididunt sunt do\"\n}"
										}
									]
								},
								{
									"name": "Classify job result",
									"id": "4f01051a-3931-41e6-a985-c1f783a68e87",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/classify/all/result",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"classify",
												"all",
												"result"
											],
											"variable": [
												{
													"id": "106518cf-35e1-46b6-a594-c9275db2b1b7",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Get classify job result, containing the result for the complete testing dataset."
									},
									"response": [
										{
											"id": "71cf0364-d17b-4262-ae89-d7204de41a85",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/classify/all/result",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"classify",
														"all",
														"result"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"predictions\": [\n    {\n      \"sampleId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"startMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"endMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prediction\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"predictionCorrect\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"f1Score\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"sampleId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"startMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"endMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"prediction\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"predictionCorrect\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"f1Score\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"result\": [\n    {\n      \"sampleId\": -32720259,\n      \"sample\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"classifications\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"sampleId\": -78428777,\n      \"sample\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"classifications\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ],\n  \"success\": false,\n  \"error\": \"ut veniam labore sint\"\n}"
										}
									]
								}
							],
							"id": "4d322439-6f1d-4e18-8e45-9aaad031dbf3"
						},
						{
							"name": "performance-calibration",
							"item": [
								{
									"name": "parameters",
									"item": [
										{
											"name": "Get parameters",
											"id": "ae547494-a647-4206-9c5f-6eebdbf5b42e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/performance-calibration/parameters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"performance-calibration",
														"parameters"
													],
													"variable": [
														{
															"id": "eaab0039-fc2c-4352-b165-3ef3079b3ed3",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Get performance calibration stored parameters"
											},
											"response": [
												{
													"id": "c0a92fdd-0884-47dc-b4fd-02a1c7fd07c6",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/performance-calibration/parameters",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"performance-calibration",
																"parameters"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"in voluptate consectetur\",\n  \"params\": {\n    \"type\": \"standard\",\n    \"version\": 1,\n    \"parametersStandard\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  }\n}"
												}
											]
										},
										{
											"name": "Save performance calibration parameters",
											"id": "61084263-71ad-46f5-a5b2-aaab23748428",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"params\": {\n    \"type\": \"standard\",\n    \"version\": 1,\n    \"parametersStandard\": {\n      \"averageWindowDurationMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"detectionThreshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suppressionMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/performance-calibration/parameters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"performance-calibration",
														"parameters"
													],
													"variable": [
														{
															"id": "c7e6ccc4-52a6-4cff-ac6e-17eda2629d6a",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Set the current performance calibration parameters"
											},
											"response": [
												{
													"id": "d8bf51a9-87e4-42ec-9880-3f76b9ed04b3",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"params\": {\n    \"type\": \"standard\",\n    \"version\": 1,\n    \"parametersStandard\": {\n      \"averageWindowDurationMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"detectionThreshold\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"suppressionMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/performance-calibration/parameters",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"performance-calibration",
																"parameters"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Clear performance calibration parameters",
											"id": "743f9b6c-eb73-4e0d-98ec-01077b91ee22",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/performance-calibration/parameters",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"performance-calibration",
														"parameters"
													],
													"variable": [
														{
															"id": "b6266284-5c02-48d2-95c4-b62000003dca",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Clears the current performance calibration parameters"
											},
											"response": [
												{
													"id": "d7478750-99fe-4b69-9531-599292377dee",
													"name": "OK",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/performance-calibration/parameters",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"performance-calibration",
																"parameters"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										}
									],
									"id": "c96b4d0b-6c3e-47fc-a635-f89ee02e4b5c"
								},
								{
									"name": "Get status",
									"id": "2e33e716-f1c4-465b-ada2-b90681347f5f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/performance-calibration/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"performance-calibration",
												"status"
											],
											"variable": [
												{
													"id": "35298ae4-7aad-453f-aac7-c08dc11074fa",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Get performance calibration status"
									},
									"response": [
										{
											"id": "ee3e2ae9-b0bf-4a7a-9572-96ca81ced4fc",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/performance-calibration/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"performance-calibration",
														"status"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"available\": false,\n  \"success\": true,\n  \"error\": \"aliquip dolor ut est\",\n  \"unsupportedProjectError\": \"Lorem reprehenderit quis\",\n  \"options\": {\n    \"backgroundNoiseLabel\": \"id do cillum\",\n    \"otherNoiseLabels\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"uploadKey\": \"mollit dolore cillum aute id\",\n    \"sampleLengthMinutes\": 35185136.12856421\n  }\n}"
										}
									]
								},
								{
									"name": "Get ground truth",
									"id": "2f9b848e-28ff-41ac-8579-ef2834798078",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/performance-calibration/ground-truth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"performance-calibration",
												"ground-truth"
											],
											"variable": [
												{
													"id": "883784a2-8971-4f1a-877f-1c613dd26034",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Get performance calibration ground truth data"
									},
									"response": [
										{
											"id": "b372e5ba-43c9-41b6-8f4e-c74d63ed2a7c",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/performance-calibration/ground-truth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"performance-calibration",
														"ground-truth"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"samples\": [\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labelIdx\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labelString\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"start\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"length\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"samples\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labelIdx\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labelString\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"start\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"length\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"samples\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"error\": \"in magna deserunt\"\n}"
										}
									]
								},
								{
									"name": "Get raw result",
									"id": "115cfbff-4f85-4df8-bc81-1599ae2db174",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/performance-calibration/raw-result",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"performance-calibration",
												"raw-result"
											],
											"variable": [
												{
													"id": "36b7f411-e313-48ae-ad1f-0aab21b5285b",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Get performance calibration raw result"
									},
									"response": [
										{
											"id": "b1179792-962c-4d01-9f35-6a0034a2867f",
											"name": "File",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/performance-calibration/raw-result",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"performance-calibration",
														"raw-result"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"detections\": [\n    {\n      \"start\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"end\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"result\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"start\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"end\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"result\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"error\": \"ad laboris in\"\n}"
										}
									]
								},
								{
									"name": "Get parameter sets",
									"id": "7ab9d24a-f24b-4523-b228-00977741fc43",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/performance-calibration/parameter-sets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"performance-calibration",
												"parameter-sets"
											],
											"variable": [
												{
													"id": "1d739169-c2f5-40bc-b61e-b2ca22e08917",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Get performance calibration parameter sets"
									},
									"response": [
										{
											"id": "61dc07a7-4fdb-40f2-8503-45e1361b5f00",
											"name": "File",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/performance-calibration/parameter-sets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"performance-calibration",
														"parameter-sets"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"parameterSets\": [\n    {\n      \"detections\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isBest\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDefault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"stats\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"aggregateStats\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"params\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"windowSizeMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"detections\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isBest\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDefault\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"stats\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"aggregateStats\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"params\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"windowSizeMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": false,\n  \"error\": \"ut Ut ipsum quis eu\"\n}"
										}
									]
								},
								{
									"name": "Get WAV file",
									"id": "e125931e-6303-4fdd-8b08-06715415f4e2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "audio/wav"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/performance-calibration/wav",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"performance-calibration",
												"wav"
											],
											"variable": [
												{
													"id": "b09987d8-6a4a-4db2-af48-9bee0fa665d1",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Get the synthetic sample as a WAV file"
									},
									"response": [
										{
											"id": "e4c7eaad-f732-4bbe-9bda-25e8ec57bfc1",
											"name": "Wav file",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/performance-calibration/wav",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"performance-calibration",
														"wav"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "audio/wav"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "ipsum non sunt"
										}
									]
								},
								{
									"name": "Upload Performance Calibration Audio files",
									"id": "4b86ff3c-2ac7-46e4-9e5d-9cc138e8aec8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "zip",
													"type": "file",
													"description": "(Required) ",
													"value": null
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/performance-calibration/files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"performance-calibration",
												"files"
											],
											"variable": [
												{
													"id": "03d3b76f-1a73-497c-82e1-cd635901f978",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Upload a zip files with a wav file and its Label metadata to run performance calibration on it."
									},
									"response": [
										{
											"id": "ed1a4ab5-8f10-4904-bbd4-7372ed6f80f8",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"description": "(Required) ",
															"key": "zip",
															"type": "file"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/performance-calibration/files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"performance-calibration",
														"files"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": false,\n  \"uploadKey\": \"adipisicing\",\n  \"error\": \"qui\"\n}"
										}
									]
								}
							],
							"id": "6d65f8c0-8548-4a8a-aef4-4feb0a101829"
						},
						{
							"name": "deployment",
							"item": [
								{
									"name": "targets",
									"item": [
										{
											"name": "Deployment targets",
											"id": "6ec1fb2e-2ee2-499b-a4a7-a470c3229c8c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/deployment/targets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"deployment",
														"targets"
													],
													"variable": [
														{
															"id": "52b5e5bc-d735-4cb2-a17c-9541e5adc29e",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "List deployment targets for a project"
											},
											"response": [
												{
													"id": "2a9d1a66-042f-492e-a80d-11e0f862b067",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/deployment/targets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"deployment",
																"targets"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": false,\n  \"targets\": [\n    {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"image\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imageClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"format\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasEonCompiler\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasTensorRT\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasTensaiFlow\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasDRPAI\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hideOptimizations\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"uiSection\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"latencyDevice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"badge\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"customDeployId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"integrateUrl\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"image\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imageClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"format\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasEonCompiler\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasTensorRT\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasTensaiFlow\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasDRPAI\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hideOptimizations\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"uiSection\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"latencyDevice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"badge\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"customDeployId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"integrateUrl\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"error\": \"reprehenderit nisi Lorem\"\n}"
												}
											]
										},
										{
											"name": "Deployment targets (data sources)",
											"id": "0f00d595-cd09-4983-8af3-758341b74f92",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/deployment/targets/data-sources",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"deployment",
														"targets",
														"data-sources"
													],
													"variable": [
														{
															"id": "6c6c588d-fca7-4345-aaab-2cf4be5f056a",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "List deployment targets for a project from data sources page  (it shows some things like all Linux deploys, and hides 'fake' deploy targets like mobile phone / computer)"
											},
											"response": [
												{
													"id": "ec78b2d0-43bf-4a7c-9751-466386ff90c5",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/deployment/targets/data-sources",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"deployment",
																"targets",
																"data-sources"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": false,\n  \"targets\": [\n    {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"image\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imageClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"format\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasEonCompiler\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasTensorRT\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasTensaiFlow\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasDRPAI\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hideOptimizations\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"uiSection\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"latencyDevice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"badge\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"customDeployId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"integrateUrl\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"image\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imageClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"format\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasEonCompiler\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasTensorRT\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasTensaiFlow\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasDRPAI\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hideOptimizations\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"uiSection\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"latencyDevice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"badge\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"customDeployId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"integrateUrl\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"error\": \"sunt ut minim pariatur\"\n}"
												}
											]
										}
									],
									"id": "b80e4bad-1e4c-4788-a990-0a720615269c"
								},
								{
									"name": "evaluate",
									"item": [
										{
											"name": "Evaluate job result",
											"id": "ae6abbab-8afa-4235-a0f3-f7c9493a0bc9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/deployment/evaluate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"deployment",
														"evaluate"
													],
													"variable": [
														{
															"id": "6cf7f25a-a5e2-4852-a72b-62b2f787a941",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Get evaluate job result, containing detailed performance statistics for every possible variant of the impulse."
											},
											"response": [
												{
													"id": "fa09da37-1ad6-4467-8193-0c97f116e866",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/deployment/evaluate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"deployment",
																"evaluate"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"result\": [\n    {\n      \"modelType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"learnBlockType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"learnBlockId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"confusionMatrix\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"accuracy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"trainingLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"classificationLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalWindowCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalCorrectWindowCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"modelType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"learnBlockType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"learnBlockId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"confusionMatrix\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"accuracy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"trainingLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"classificationLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalWindowCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalCorrectWindowCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"error\": \"elit esse sit deserunt\"\n}"
												}
											]
										},
										{
											"name": "Check evaluate job result (cache)",
											"id": "408e2d80-9926-4262-a5a1-ee2c6fd338ca",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/deployment/evaluate/cache",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"deployment",
														"evaluate",
														"cache"
													],
													"variable": [
														{
															"id": "f1ef6d09-3650-4768-86c9-16458a3d3157",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Get evaluate job result, containing detailed performance statistics for every possible variant of the impulse. This only checks cache, and throws an error if there is no data in cache."
											},
											"response": [
												{
													"id": "fb126d38-3d85-4054-8c93-427425815d52",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/deployment/evaluate/cache",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"deployment",
																"evaluate",
																"cache"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"result\": [\n    {\n      \"modelType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"learnBlockType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"learnBlockId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"confusionMatrix\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"accuracy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"trainingLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"classificationLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalWindowCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalCorrectWindowCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"modelType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"learnBlockType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"learnBlockId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"confusionMatrix\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"accuracy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"trainingLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"classificationLabels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalWindowCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalCorrectWindowCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": false,\n  \"error\": \"est dolor\"\n}"
												}
											]
										}
									],
									"id": "fc1cda76-808a-4d5a-ae05-925e0b9e2532"
								},
								{
									"name": "syntiant/posterior",
									"item": [
										{
											"name": "Get Syntiant posterior parameters",
											"id": "02bdcc74-1104-48c2-a6dd-cd5b7658c41f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/deployment/syntiant/posterior",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"deployment",
														"syntiant",
														"posterior"
													],
													"variable": [
														{
															"id": "e073445f-301e-485f-9f7d-b6208b5d93e1",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Get the current posterior parameters for the Syntiant deployment target"
											},
											"response": [
												{
													"id": "fbf750e8-6f10-4330-a392-01259d7fe09d",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/deployment/syntiant/posterior",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"deployment",
																"syntiant",
																"posterior"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"hasPosteriorParameters\": false,\n  \"success\": true,\n  \"error\": \"incididun\",\n  \"parameters\": {}\n}"
												}
											]
										},
										{
											"name": "Set Syntiant posterior parameters",
											"id": "79e72991-a696-45d6-afb6-4d5dd7aca0cd",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"parameters\": {}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/deployment/syntiant/posterior",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"deployment",
														"syntiant",
														"posterior"
													],
													"variable": [
														{
															"id": "98b9ff7c-124e-495f-8df5-17a8c353fcda",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Set the current posterior parameters for the Syntiant deployment target"
											},
											"response": [
												{
													"id": "79572efc-2c19-4272-8025-7ff2de631ffa",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"parameters\": {}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/deployment/syntiant/posterior",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"deployment",
																"syntiant",
																"posterior"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										}
									],
									"id": "b5d397ac-33c4-49eb-93b7-749b8d24f6e8"
								},
								{
									"name": "Get deployment info",
									"id": "bf82b484-554f-466c-baec-cc151bd3d01a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/deployment?type=ipsum non sunt&modelType=float32",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"deployment"
											],
											"query": [
												{
													"key": "type",
													"value": "ipsum non sunt",
													"description": "(Required) Output format"
												},
												{
													"key": "modelType",
													"value": "float32",
													"description": "Optional model type of the build (if not, it uses the settings in the Keras block)"
												}
											],
											"variable": [
												{
													"id": "1c799d0c-8e52-4b3f-97d5-d7922b382af8",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Gives information on whether a deployment was already built for a type"
									},
									"response": [
										{
											"id": "2c19ee09-5831-4436-9dfd-7382c23effff",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/deployment?type=ipsum non sunt&modelType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"deployment"
													],
													"query": [
														{
															"key": "type",
															"value": "ipsum non sunt"
														},
														{
															"key": "modelType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"hasDeployment\": false,\n  \"success\": true,\n  \"error\": \"dolor anim cillum\",\n  \"version\": -6387014\n}"
										}
									]
								},
								{
									"name": "Download",
									"id": "df3b8ba0-2b6a-4359-a7a6-920dfa6a5b7f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/zip"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/deployment/download?type=ipsum non sunt&modelType=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"deployment",
												"download"
											],
											"query": [
												{
													"key": "type",
													"value": "ipsum non sunt",
													"description": "(Required) Output format"
												},
												{
													"key": "modelType",
													"value": "<string>",
													"description": "Optional model type of the build (if not, it uses the settings in the Keras block)"
												}
											],
											"variable": [
												{
													"id": "fd6e1ab7-fbc9-474d-8525-f8cd33f806a6",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Download the build artefacts for a project"
									},
									"response": [
										{
											"id": "4fc7609e-b742-4bf0-8402-7ba821123c7f",
											"name": "ZIP or BIN file",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/deployment/download?type=ipsum non sunt&modelType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"deployment",
														"download"
													],
													"query": [
														{
															"key": "type",
															"value": "ipsum non sunt"
														},
														{
															"key": "modelType",
															"value": "<string>"
														}
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/zip"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "ipsum non sunt"
										}
									]
								}
							],
							"id": "0ca97697-e91d-498c-8c43-d799c7c04454"
						},
						{
							"name": "jobs",
							"item": [
								{
									"name": "{job Id}",
									"item": [
										{
											"name": "stdout",
											"item": [
												{
													"name": "Get logs",
													"id": "e1154ca1-86a7-4f8f-ac5e-2c420640ef1d",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/jobs/:jobId/stdout?limit=49175899",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"jobs",
																":jobId",
																"stdout"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "49175899",
																	"description": "Maximum number of results"
																}
															],
															"variable": [
																{
																	"id": "177b6490-fb89-4526-879d-4d3f76875b0d",
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"id": "07f97183-76e0-4b90-ba27-dfcb25368828",
																	"key": "jobId",
																	"value": "49175899",
																	"description": "(Required) Job ID"
																}
															]
														},
														"description": "Get the logs for a job."
													},
													"response": [
														{
															"id": "c4a9e632-0cb3-4987-aed8-1255ca1991b4",
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:projectId/jobs/:jobId/stdout?limit=49175899",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":projectId",
																		"jobs",
																		":jobId",
																		"stdout"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "49175899"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectId",
																			"value": "49175899",
																			"description": "(Required) Project ID"
																		},
																		{
																			"key": "jobId",
																			"value": "49175899",
																			"description": "(Required) Job ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"stdout\": [\n    {\n      \"created\": \"1994-06-26T00:57:08.726Z\",\n      \"data\": \"Ut magna aliquip aliqua\"\n    },\n    {\n      \"created\": \"1970-03-29T20:53:28.637Z\",\n      \"data\": \"aliqua laborum veniam\"\n    }\n  ],\n  \"success\": false,\n  \"error\": \"est in\"\n}"
														}
													]
												},
												{
													"name": "Download logs",
													"id": "d47d661d-0a4a-45fe-9b5e-f36683eee68d",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/jobs/:jobId/stdout/download?limit=49175899",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"jobs",
																":jobId",
																"stdout",
																"download"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "49175899",
																	"description": "Maximum number of results"
																}
															],
															"variable": [
																{
																	"id": "2e2bd78b-47a5-437d-81f1-43b48db386a4",
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"id": "27fe139d-9e2e-4799-85c6-fc671b628fac",
																	"key": "jobId",
																	"value": "49175899",
																	"description": "(Required) Job ID"
																}
															]
														},
														"description": "Download the logs for a job (as a text file)."
													},
													"response": [
														{
															"id": "21aab587-60f0-4a5a-a124-0cd49734530d",
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/:projectId/jobs/:jobId/stdout/download?limit=49175899",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		":projectId",
																		"jobs",
																		":jobId",
																		"stdout",
																		"download"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "49175899"
																		}
																	],
																	"variable": [
																		{
																			"key": "projectId",
																			"value": "49175899",
																			"description": "(Required) Project ID"
																		},
																		{
																			"key": "jobId",
																			"value": "49175899",
																			"description": "(Required) Job ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "ipsum non sunt"
														}
													]
												}
											],
											"id": "451144c7-6724-4aed-b1e3-a3783695398a"
										},
										{
											"name": "Update job",
											"id": "547d6b18-cc91-4448-93c6-c54652d48f19",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"jobNotificationUids\": [\n    -69429370,\n    -31500707\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/:jobId/update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														":jobId",
														"update"
													],
													"variable": [
														{
															"id": "713927a8-d4a2-4a58-83f3-c02af228e355",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "fc1ea9fc-2eaa-4b23-8f14-7c2625b90289",
															"key": "jobId",
															"value": "49175899",
															"description": "(Required) Job ID"
														}
													]
												},
												"description": "Update a job."
											},
											"response": [
												{
													"id": "c32dd82a-7a32-4102-bd50-e376e3e03dab",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"jobNotificationUids\": [\n    -62985099,\n    -59654423\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/jobs/:jobId/update",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"jobs",
																":jobId",
																"update"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "jobId",
																	"value": "49175899",
																	"description": "(Required) Job ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Get job status",
											"id": "0e414f1e-ff32-420e-b70a-9d7899b8a7bf",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/:jobId/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														":jobId",
														"status"
													],
													"variable": [
														{
															"id": "1cb75128-fafc-4d4d-8b60-b1cfc2beda9b",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "04f22620-3626-4eb7-b8dd-5d952ffb6938",
															"key": "jobId",
															"value": "49175899",
															"description": "(Required) Job ID"
														}
													]
												},
												"description": "Get the status for a job."
											},
											"response": [
												{
													"id": "a4f283ab-f39c-4057-8228-7881772ec961",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/jobs/:jobId/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"jobs",
																":jobId",
																"status"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "jobId",
																	"value": "49175899",
																	"description": "(Required) Job ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"dolore exercitation in occaecat\",\n  \"job\": {\n    \"id\": 87110038,\n    \"key\": \"aliquip adipisicing cillum\",\n    \"created\": \"1978-08-05T03:35:56.926Z\",\n    \"category\": \"nostrud sint non\",\n    \"jobNotificationUids\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"started\": \"1983-01-28T21:38:34.884Z\",\n    \"finished\": \"1999-05-10T09:54:08.304Z\",\n    \"finishedSuccessful\": true\n  }\n}"
												}
											]
										},
										{
											"name": "Cancel job",
											"id": "6bea7296-29bb-4b77-b9b8-3e8b51d44699",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/:jobId/cancel?forceCancel=ipsum non sunt",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														":jobId",
														"cancel"
													],
													"query": [
														{
															"key": "forceCancel",
															"value": "ipsum non sunt",
															"description": "If set to 'true', we won't wait for the job cluster to cancel the job, and will mark the job as finished."
														}
													],
													"variable": [
														{
															"id": "d98cb90f-0075-4772-8408-6005ddf6abb4",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "6a9f17e4-a507-43bf-8438-83f886beed68",
															"key": "jobId",
															"value": "49175899",
															"description": "(Required) Job ID"
														}
													]
												},
												"description": "Cancel a running job."
											},
											"response": [
												{
													"id": "d475196e-eef0-4f4f-af74-541fb9279ca8",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/jobs/:jobId/cancel?forceCancel=ipsum non sunt",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"jobs",
																":jobId",
																"cancel"
															],
															"query": [
																{
																	"key": "forceCancel",
																	"value": "ipsum non sunt"
																}
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "jobId",
																	"value": "49175899",
																	"description": "(Required) Job ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										}
									],
									"id": "bcb427af-3648-4de6-8fc1-25ea3f65bc13"
								},
								{
									"name": "train",
									"item": [
										{
											"name": "Train model (Keras)",
											"id": "5d5a0639-cb93-41aa-970e-0352e700eb57",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"mode\": \"visual\",\n  \"minimumConfidenceRating\": -98157668.1028197,\n  \"selectedModelType\": \"<string>\",\n  \"script\": \"consectetur\",\n  \"visualLayers\": [\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"neurons\": -33518129,\n      \"kernelSize\": -40357612,\n      \"dropoutRate\": -24464870.451155648,\n      \"columns\": 59899433,\n      \"stack\": 61089310,\n      \"enabled\": true,\n      \"organizationModelId\": 52119942\n    },\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"neurons\": 20006526,\n      \"kernelSize\": 86530633,\n      \"dropoutRate\": 48123557.46826485,\n      \"columns\": -12197029,\n      \"stack\": -74565687,\n      \"enabled\": true,\n      \"organizationModelId\": -21532014\n    }\n  ],\n  \"trainingCycles\": 47522685,\n  \"learningRate\": -19665351.466629,\n  \"trainTestSplit\": 65170446.95319596,\n  \"autoClassWeights\": true,\n  \"findLearningRate\": true,\n  \"augmentationPolicyImage\": \"all\",\n  \"augmentationPolicySpectrogram\": {\n    \"enabled\": true,\n    \"warping\": true,\n    \"freqMasking\": \"low\",\n    \"timeMasking\": \"none\",\n    \"gaussianNoise\": \"none\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/train/keras/:learnId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"train",
														"keras",
														":learnId"
													],
													"variable": [
														{
															"id": "05f836a1-a87c-46ae-9a73-a64f2ac462e9",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "b262bca7-444a-4b49-92de-41c182ee6d0e",
															"key": "learnId",
															"value": "49175899",
															"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
														}
													]
												},
												"description": "Take the output from a DSP block and train a neural network using Keras. Updates are streamed over the websocket API."
											},
											"response": [
												{
													"id": "e4139470-7d60-4fc9-89e8-e8f4d3c8f6c3",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"mode\": \"visual\",\n  \"minimumConfidenceRating\": -98157668.1028197,\n  \"selectedModelType\": \"<string>\",\n  \"script\": \"consectetur\",\n  \"visualLayers\": [\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"neurons\": -33518129,\n      \"kernelSize\": -40357612,\n      \"dropoutRate\": -24464870.451155648,\n      \"columns\": 59899433,\n      \"stack\": 61089310,\n      \"enabled\": true,\n      \"organizationModelId\": 52119942\n    },\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"neurons\": 20006526,\n      \"kernelSize\": 86530633,\n      \"dropoutRate\": 48123557.46826485,\n      \"columns\": -12197029,\n      \"stack\": -74565687,\n      \"enabled\": true,\n      \"organizationModelId\": -21532014\n    }\n  ],\n  \"trainingCycles\": 47522685,\n  \"learningRate\": -19665351.466629,\n  \"trainTestSplit\": 65170446.95319596,\n  \"autoClassWeights\": true,\n  \"findLearningRate\": true,\n  \"augmentationPolicyImage\": \"all\",\n  \"augmentationPolicySpectrogram\": {\n    \"enabled\": true,\n    \"warping\": true,\n    \"freqMasking\": \"low\",\n    \"timeMasking\": \"none\",\n    \"gaussianNoise\": \"none\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/jobs/train/keras/:learnId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"jobs",
																"train",
																"keras",
																":learnId"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "learnId",
																	"value": "49175899",
																	"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
												}
											]
										},
										{
											"name": "Train model (Anomaly)",
											"id": "0719a2bc-1d09-46fd-9468-4bf07efb0389",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"axes\": [\n    0,\n    11,\n    22\n  ],\n  \"clusterCount\": 32,\n  \"minimumConfidenceRating\": 0.3\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/train/anomaly/:learnId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"train",
														"anomaly",
														":learnId"
													],
													"variable": [
														{
															"id": "d09b4fe8-37d6-4c17-8fd9-5616f118906d",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "cf87d340-9097-4b53-9b9a-de59339c5dd8",
															"key": "learnId",
															"value": "49175899",
															"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
														}
													]
												},
												"description": "Take the output from a DSP block and train an anomaly detection model using K-means. Updates are streamed over the websocket API."
											},
											"response": [
												{
													"id": "e6d58593-91ab-4030-9cbc-200a7b8dde49",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"axes\": [\n    0,\n    11,\n    22\n  ],\n  \"clusterCount\": 32,\n  \"minimumConfidenceRating\": 0.3\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/jobs/train/anomaly/:learnId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"jobs",
																"train",
																"anomaly",
																":learnId"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "learnId",
																	"value": "49175899",
																	"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
												}
											]
										}
									],
									"id": "fe73d2bd-4258-4f06-8af8-53e069977190"
								},
								{
									"name": "build-ondevice-model",
									"item": [
										{
											"name": "Build on-device model",
											"id": "9a75ec4b-b5f5-40af-b630-2dd6e00f925d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"engine\": \"tflite\",\n  \"modelType\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/build-ondevice-model?type=ipsum non sunt",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"build-ondevice-model"
													],
													"query": [
														{
															"key": "type",
															"value": "ipsum non sunt",
															"description": "(Required) Output format"
														}
													],
													"variable": [
														{
															"id": "42be953f-1b82-4b94-9e60-2b156e6f7df5",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Generate code to run the impulse on an embedded device. When this step is complete use `downloadBuild` to download the artefacts.  Updates are streamed over the websocket API."
											},
											"response": [
												{
													"id": "39907a45-b15c-4c38-a064-8c0dd63ef8ff",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"engine\": \"tflite\",\n  \"modelType\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/jobs/build-ondevice-model?type=ipsum non sunt",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"jobs",
																"build-ondevice-model"
															],
															"query": [
																{
																	"key": "type",
																	"value": "ipsum non sunt"
																}
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
												}
											]
										},
										{
											"name": "Build organizational on-device model",
											"id": "0d5014d9-fa23-44f5-90f6-456370250bc7",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"engine\": \"tensorrt\",\n  \"deployBlockId\": 47443608,\n  \"modelType\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/build-ondevice-model/organization",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"build-ondevice-model",
														"organization"
													],
													"variable": [
														{
															"id": "40d16bd8-10bd-425f-84b0-0c30e529d030",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Generate code to run the impulse on an embedded device using an organizational deployment block. When this step is complete use `downloadBuild` to download the artefacts.  Updates are streamed over the websocket API."
											},
											"response": [
												{
													"id": "43319297-422e-4011-b84a-23411247c72e",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"engine\": \"tensorrt\",\n  \"deployBlockId\": 47443608,\n  \"modelType\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/jobs/build-ondevice-model/organization",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"jobs",
																"build-ondevice-model",
																"organization"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
												}
											]
										}
									],
									"id": "a1cd5072-f6cb-4cee-a7e6-6ed78536a07e"
								},
								{
									"name": "export",
									"item": [
										{
											"name": "Export original data",
											"id": "1999b566-20ab-46a8-b919-8c778a389c0a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"uploaderFriendlyFilenames\": true,\n  \"retainCrops\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/export/original",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"export",
														"original"
													],
													"variable": [
														{
															"id": "f47998ab-942f-490b-a817-6123b076dea4",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Export all the data in the project as it was uploaded to Edge Impulse.  Updates are streamed over the websocket API."
											},
											"response": [
												{
													"id": "53d42730-ea1d-4658-8ad3-f929b5fc8c58",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"uploaderFriendlyFilenames\": true,\n  \"retainCrops\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/jobs/export/original",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"jobs",
																"export",
																"original"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
												}
											]
										},
										{
											"name": "Export data as WAV",
											"id": "623e5dba-0b38-4be0-a3ea-a14ce187cf61",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"retainCrops\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/export/wav",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"export",
														"wav"
													],
													"variable": [
														{
															"id": "510e84fa-7d0e-41a1-b7eb-f8b6d70d0c28",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Export all the data in the project in WAV format.  Updates are streamed over the websocket API."
											},
											"response": [
												{
													"id": "4bbb2eb4-c26f-47f2-b0c7-cdc91bb0d453",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"retainCrops\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/jobs/export/wav",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"jobs",
																"export",
																"wav"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
												}
											]
										}
									],
									"id": "26d23c66-d038-4557-9564-bacf31112bf9"
								},
								{
									"name": "restore",
									"item": [
										{
											"name": "Restore project to version",
											"id": "30c3038e-df74-4b88-b37d-e400781fe3f5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"projectId\": -3352227,\n  \"projectApiKey\": \"nisi id ut reprehenderit qui\",\n  \"versionId\": -14941715\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/restore",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"restore"
													],
													"variable": [
														{
															"id": "657eb4b4-5321-4326-8001-dad853a0c4c9",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Restore a project to a certain version. This can only applied to a project without data, and will overwrite your impulse and all settings."
											},
											"response": [
												{
													"id": "f2b94943-4b7f-4f59-ab80-17aeb84c6d57",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": -3352227,\n  \"projectApiKey\": \"nisi id ut reprehenderit qui\",\n  \"versionId\": -14941715\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/jobs/restore",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"jobs",
																"restore"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Restore project to public version",
											"id": "b73e879d-3dfc-4133-9c18-6247650bef2c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"projectId\": 37573862\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/restore/from-public",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"restore",
														"from-public"
													],
													"variable": [
														{
															"id": "c3157d80-13af-4f57-87b9-d2e685556196",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Restore a project to a certain public version. This can only applied to a project without data, and will overwrite your impulse and all settings."
											},
											"response": [
												{
													"id": "f57d27fe-f6bc-4ac4-8803-e536b31b9a1e",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"projectId\": 37573862\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/jobs/restore/from-public",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"jobs",
																"restore",
																"from-public"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										}
									],
									"id": "78ac41f4-0926-4b48-8cc0-01b84e727924"
								},
								{
									"name": "profile-tflite",
									"item": [
										{
											"name": "Profile TFLite model",
											"id": "afbf3375-5e92-4c0d-a6e7-e4eb2810a54b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tfliteFileBase64\": \"dolor aliquip consectetur labore\",\n  \"device\": \"mollit veniam occaecat\",\n  \"referenceModel\": \"gestures-large-f32\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/profile-tflite",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"profile-tflite"
													],
													"variable": [
														{
															"id": "1d10a1ce-7430-431b-8de4-7394fd72c3f8",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Takes in a TFLite model and returns the latency, RAM and ROM used for this model. Updates are streamed over the websocket API (or can be retrieved through the /stdout endpoint). Use getProfileTfliteJobResult to get the results when the job is completed."
											},
											"response": [
												{
													"id": "feb7ca3d-1722-4e77-b561-782ceeea03ba",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tfliteFileBase64\": \"dolor aliquip consectetur labore\",\n  \"device\": \"mollit veniam occaecat\",\n  \"referenceModel\": \"gestures-large-f32\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/jobs/profile-tflite",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"jobs",
																"profile-tflite"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
												}
											]
										},
										{
											"name": "Get TFLite profile result",
											"id": "0f85f5ce-90b0-49c2-ac57-f2d93d22e918",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/profile-tflite/:jobId/result",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"profile-tflite",
														":jobId",
														"result"
													],
													"variable": [
														{
															"id": "4b970ed6-9047-4534-ae9a-c2c63bfee563",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "b4554314-5ded-4d18-880c-91bab696fc4d",
															"key": "jobId",
															"value": "49175899",
															"description": "(Required) Job ID"
														}
													]
												},
												"description": "Get the results from a job started from startProfileTfliteJob."
											},
											"response": [
												{
													"id": "f0d5291d-e7ea-452a-882c-f12ebbdaeb83",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/jobs/profile-tflite/:jobId/result",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"jobs",
																"profile-tflite",
																":jobId",
																"result"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "jobId",
																	"value": "49175899",
																	"description": "(Required) Job ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": false,\n  \"error\": \"ea in sint anim\",\n  \"memory\": {\n    \"tflite\": {\n      \"ram\": 80126119,\n      \"rom\": -57445326\n    },\n    \"eon\": {\n      \"ram\": -83299737,\n      \"rom\": -52209989\n    }\n  },\n  \"timePerInferenceMs\": 83157852\n}"
												}
											]
										}
									],
									"id": "9cd68abb-0fca-4f45-9a46-60ea8c144f82"
								},
								{
									"name": "List active jobs",
									"id": "a28fa038-7a99-4526-8fe3-c5e69ab291dd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/jobs?rootOnly=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"jobs"
											],
											"query": [
												{
													"key": "rootOnly",
													"value": "true",
													"description": "Whether to exclude jobs with a parent ID (so jobs started as part of another job)"
												}
											],
											"variable": [
												{
													"id": "b01f2e84-0025-41f0-a06d-ccae65aaa7d7",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Get all active jobs for this project"
									},
									"response": [
										{
											"id": "a7082101-1977-4114-8e21-dd7a87165afd",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs?rootOnly=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs"
													],
													"query": [
														{
															"key": "rootOnly",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"jobs\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jobNotificationUids\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"started\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finished\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finishedSuccessful\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jobNotificationUids\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"started\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finished\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finishedSuccessful\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"totalJobCount\": 33945940,\n  \"error\": \"veniam\"\n}"
										}
									]
								},
								{
									"name": "Find Syntiant posterior parameters",
									"id": "0a74284b-6406-43a5-ad0c-4dd0d38c1c3d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "targetWords",
													"value": "[\"Ut sed non laborum a\",\"in sed ut\"]",
													"type": "text",
													"description": "(Required) "
												},
												{
													"key": "referenceSet",
													"value": "no_calibration",
													"type": "text",
													"description": "(Required)  (This can only be one of 600_seconds,full,custom,no_calibration)"
												},
												{
													"key": "wavFile",
													"type": "file",
													"value": null
												},
												{
													"key": "metaCsvFile",
													"type": "file",
													"value": null
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/jobs/find-syntiant-posterior",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"jobs",
												"find-syntiant-posterior"
											],
											"variable": [
												{
													"id": "2ff27582-bc7a-4774-a6da-7341d8dcbdb8",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Automatically find the current posterior parameters for the Syntiant deployment target"
									},
									"response": [
										{
											"id": "94b76f43-d73a-4fdc-8463-0d9b3b0588ce",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"description": "(Required) ",
															"key": "targetWords",
															"value": "[\"nostrud\",\"velit\"]",
															"type": "text"
														},
														{
															"description": "(Required)  (This can only be one of 600_seconds,full,custom,no_calibration)",
															"key": "referenceSet",
															"value": "no_calibration",
															"type": "text"
														},
														{
															"key": "wavFile",
															"type": "file"
														},
														{
															"key": "metaCsvFile",
															"type": "file"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/find-syntiant-posterior",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"find-syntiant-posterior"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
										}
									]
								},
								{
									"name": "Generate data explorer features",
									"id": "f17eec0e-c253-479b-b314-d5012480d117",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/jobs/data-explorer-features",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"jobs",
												"data-explorer-features"
											],
											"variable": [
												{
													"id": "ddf14392-40ce-4416-8aee-b11b8037db1d",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Generate features for the data explorer"
									},
									"response": [
										{
											"id": "8dcb3213-532a-45bd-87d9-e9ea1212b31e",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/data-explorer-features",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"data-explorer-features"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
										}
									]
								},
								{
									"name": "Optimize model",
									"id": "1159ae6e-6aad-431d-872e-6809936d686c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"mode\": \"visual\",\n  \"minimumConfidenceRating\": -98157668.1028197,\n  \"selectedModelType\": \"<string>\",\n  \"script\": \"consectetur\",\n  \"visualLayers\": [\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"neurons\": -33518129,\n      \"kernelSize\": -40357612,\n      \"dropoutRate\": -24464870.451155648,\n      \"columns\": 59899433,\n      \"stack\": 61089310,\n      \"enabled\": true,\n      \"organizationModelId\": 52119942\n    },\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"neurons\": 20006526,\n      \"kernelSize\": 86530633,\n      \"dropoutRate\": 48123557.46826485,\n      \"columns\": -12197029,\n      \"stack\": -74565687,\n      \"enabled\": true,\n      \"organizationModelId\": -21532014\n    }\n  ],\n  \"trainingCycles\": 47522685,\n  \"learningRate\": -19665351.466629,\n  \"trainTestSplit\": 65170446.95319596,\n  \"autoClassWeights\": true,\n  \"findLearningRate\": true,\n  \"augmentationPolicyImage\": \"all\",\n  \"augmentationPolicySpectrogram\": {\n    \"enabled\": true,\n    \"warping\": true,\n    \"freqMasking\": \"low\",\n    \"timeMasking\": \"none\",\n    \"gaussianNoise\": \"none\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/jobs/optimize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"jobs",
												"optimize"
											],
											"variable": [
												{
													"id": "da78cd47-8783-4ea0-8774-50733978cae5",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Evaluates optimal model architecture"
									},
									"response": [
										{
											"id": "f6be530c-cddb-4b96-9495-0691dac2b3a9",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"mode\": \"visual\",\n  \"minimumConfidenceRating\": -98157668.1028197,\n  \"selectedModelType\": \"<string>\",\n  \"script\": \"consectetur\",\n  \"visualLayers\": [\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"neurons\": -33518129,\n      \"kernelSize\": -40357612,\n      \"dropoutRate\": -24464870.451155648,\n      \"columns\": 59899433,\n      \"stack\": 61089310,\n      \"enabled\": true,\n      \"organizationModelId\": 52119942\n    },\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"neurons\": 20006526,\n      \"kernelSize\": 86530633,\n      \"dropoutRate\": 48123557.46826485,\n      \"columns\": -12197029,\n      \"stack\": -74565687,\n      \"enabled\": true,\n      \"organizationModelId\": -21532014\n    }\n  ],\n  \"trainingCycles\": 47522685,\n  \"learningRate\": -19665351.466629,\n  \"trainTestSplit\": 65170446.95319596,\n  \"autoClassWeights\": true,\n  \"findLearningRate\": true,\n  \"augmentationPolicyImage\": \"all\",\n  \"augmentationPolicySpectrogram\": {\n    \"enabled\": true,\n    \"warping\": true,\n    \"freqMasking\": \"low\",\n    \"timeMasking\": \"none\",\n    \"gaussianNoise\": \"none\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/optimize",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"optimize"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
										}
									]
								},
								{
									"name": "Sets EON tuner primary model",
									"id": "43b14334-a682-4ca3-8a7c-de18b7ed7154",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/jobs/set-tuner-primary-job?trialId=ipsum non sunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"jobs",
												"set-tuner-primary-job"
											],
											"query": [
												{
													"key": "trialId",
													"value": "ipsum non sunt",
													"description": "(Required) trial ID"
												}
											],
											"variable": [
												{
													"id": "5c96c3c4-f9c5-408d-9c92-229182ee14f7",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Sets EON tuner primary model"
									},
									"response": [
										{
											"id": "a1a1277e-adde-4c33-8030-2a81c61b7bcd",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/set-tuner-primary-job?trialId=ipsum non sunt",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"set-tuner-primary-job"
													],
													"query": [
														{
															"key": "trialId",
															"value": "ipsum non sunt"
														}
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
										}
									]
								},
								{
									"name": "List finished jobs",
									"id": "dd561b49-274c-44f8-9190-9e4e6678af91",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/jobs/history?startDate=2018-10-24T21:01:50.686Z&endDate=2018-10-24T21:01:50.686Z&limit=49175899&offset=49175899&rootOnly=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"jobs",
												"history"
											],
											"query": [
												{
													"key": "startDate",
													"value": "2018-10-24T21:01:50.686Z",
													"description": "Start date"
												},
												{
													"key": "endDate",
													"value": "2018-10-24T21:01:50.686Z",
													"description": "End date"
												},
												{
													"key": "limit",
													"value": "49175899",
													"description": "Maximum number of results"
												},
												{
													"key": "offset",
													"value": "49175899",
													"description": "Offset in results, can be used in conjunction with LimitResultsParameter to implement paging."
												},
												{
													"key": "rootOnly",
													"value": "true",
													"description": "Whether to exclude jobs with a parent ID (so jobs started as part of another job)"
												}
											],
											"variable": [
												{
													"id": "b6bfb8aa-b424-4418-9762-316980075c8a",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Get all finished jobs for this project"
									},
									"response": [
										{
											"id": "4a777e30-25d4-4952-af51-4a8a0811b1b3",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/history?startDate=2018-10-24T21:01:50.686Z&endDate=2018-10-24T21:01:50.686Z&limit=49175899&offset=49175899&rootOnly=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"history"
													],
													"query": [
														{
															"key": "startDate",
															"value": "2018-10-24T21:01:50.686Z"
														},
														{
															"key": "endDate",
															"value": "2018-10-24T21:01:50.686Z"
														},
														{
															"key": "limit",
															"value": "49175899"
														},
														{
															"key": "offset",
															"value": "49175899"
														},
														{
															"key": "rootOnly",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"jobs\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jobNotificationUids\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"started\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finished\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finishedSuccessful\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jobNotificationUids\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"started\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finished\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finishedSuccessful\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"totalJobCount\": 32247515,\n  \"error\": \"exercitation cupidatat ullamco\"\n}"
										}
									]
								},
								{
									"name": "List all jobs",
									"id": "93f20453-a69c-4874-8b86-c9b296c188f1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/jobs/all?startDate=2018-10-24T21:01:50.686Z&endDate=2018-10-24T21:01:50.686Z&limit=49175899&offset=49175899&rootOnly=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"jobs",
												"all"
											],
											"query": [
												{
													"key": "startDate",
													"value": "2018-10-24T21:01:50.686Z",
													"description": "Start date"
												},
												{
													"key": "endDate",
													"value": "2018-10-24T21:01:50.686Z",
													"description": "End date"
												},
												{
													"key": "limit",
													"value": "49175899",
													"description": "Maximum number of results"
												},
												{
													"key": "offset",
													"value": "49175899",
													"description": "Offset in results, can be used in conjunction with LimitResultsParameter to implement paging."
												},
												{
													"key": "rootOnly",
													"value": "true",
													"description": "Whether to exclude jobs with a parent ID (so jobs started as part of another job)"
												}
											],
											"variable": [
												{
													"id": "1e45374b-4d0d-464f-b835-7de7786b7b37",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Get all jobs for this project"
									},
									"response": [
										{
											"id": "70d8d250-9337-45c1-9dde-7a06cc32c4a1",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/all?startDate=2018-10-24T21:01:50.686Z&endDate=2018-10-24T21:01:50.686Z&limit=49175899&offset=49175899&rootOnly=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"all"
													],
													"query": [
														{
															"key": "startDate",
															"value": "2018-10-24T21:01:50.686Z"
														},
														{
															"key": "endDate",
															"value": "2018-10-24T21:01:50.686Z"
														},
														{
															"key": "limit",
															"value": "49175899"
														},
														{
															"key": "offset",
															"value": "49175899"
														},
														{
															"key": "rootOnly",
															"value": "true"
														}
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"jobs\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jobNotificationUids\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"started\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finished\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finishedSuccessful\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jobNotificationUids\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"started\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finished\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finishedSuccessful\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"totalJobCount\": 32247515,\n  \"error\": \"exercitation cupidatat ullamco\"\n}"
										}
									]
								},
								{
									"name": "Job summary",
									"id": "8a913823-44f9-4b7f-b0a3-100c474c4f6e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/jobs/summary?startDate=2018-10-24T21:01:50.686Z&endDate=2018-10-24T21:01:50.686Z",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"jobs",
												"summary"
											],
											"query": [
												{
													"key": "startDate",
													"value": "2018-10-24T21:01:50.686Z",
													"description": "(Required) Start date"
												},
												{
													"key": "endDate",
													"value": "2018-10-24T21:01:50.686Z",
													"description": "(Required) End date"
												}
											],
											"variable": [
												{
													"id": "4d2f670a-fd78-4e0b-9459-4c8c8f76f563",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Get a summary of jobs, grouped by key. Used to report to users how much compute they've used."
									},
									"response": [
										{
											"id": "6d1fff31-ade4-45c6-b79d-3311401d61a0",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/summary?startDate=2018-10-24T21:01:50.686Z&endDate=2018-10-24T21:01:50.686Z",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"summary"
													],
													"query": [
														{
															"key": "startDate",
															"value": "2018-10-24T21:01:50.686Z"
														},
														{
															"key": "endDate",
															"value": "2018-10-24T21:01:50.686Z"
														}
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"summary\": [\n    {\n      \"category\": \"commodo pariatur qui in et\",\n      \"lengthMs\": 86478475\n    },\n    {\n      \"category\": \"ut \",\n      \"lengthMs\": -27130483\n    }\n  ],\n  \"error\": \"veniam nostrud mollit tempor\"\n}"
										}
									]
								},
								{
									"name": "Generate features",
									"id": "09fdf1df-4936-4e9d-80f2-549512d979f7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dspId\": -42877644,\n  \"calculateFeatureImportance\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/jobs/generate-features",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"jobs",
												"generate-features"
											],
											"variable": [
												{
													"id": "7ba73a46-3ead-4bb5-b35f-f04542ea344f",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Take the raw training set and generate features from them. Updates are streamed over the websocket API."
									},
									"response": [
										{
											"id": "ba03c213-ccfe-41cd-a9e3-984598b036f6",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dspId\": -42877644,\n  \"calculateFeatureImportance\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/generate-features",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"generate-features"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
										}
									]
								},
								{
									"name": "Retrain",
									"id": "7a7f6c2e-063d-4104-812e-54ae99b6b649",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/jobs/retrain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"jobs",
												"retrain"
											],
											"variable": [
												{
													"id": "97a4dd42-ed96-4800-93fe-ffd17975b07c",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Retrains the current impulse with the last known parameters. Updates are streamed over the websocket API."
									},
									"response": [
										{
											"id": "13c332ab-67b9-4bdc-bc23-178d74ae1536",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/retrain",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"retrain"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
										}
									]
								},
								{
									"name": "Classify",
									"id": "202c1dc8-5672-48ee-955b-58edda83657e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/jobs/classify",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"jobs",
												"classify"
											],
											"variable": [
												{
													"id": "5c6fa667-7936-42ed-b360-dc08e70091e7",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Classifies all items in the testing dataset against the current impulse. Updates are streamed over the websocket API."
									},
									"response": [
										{
											"id": "e1856bc3-08cd-4104-be78-119f86736e01",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/classify",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"classify"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
										}
									]
								},
								{
									"name": "Performance Calibration",
									"id": "b70b642e-7214-495a-9ef4-1460d3a084c2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"backgroundNoiseLabel\": \"cillum deserunt in\",\n  \"otherNoiseLabels\": [\n    \"commodo in non ut\",\n    \"veniam\"\n  ],\n  \"uploadKey\": \"nostrud\",\n  \"sampleLengthMinutes\": -99589471.89332004\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/jobs/performance-calibration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"jobs",
												"performance-calibration"
											],
											"variable": [
												{
													"id": "d1455aae-a136-45ae-b288-02efd0886a92",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Simulates real world usage and returns performance metrics."
									},
									"response": [
										{
											"id": "632a4875-4ef7-46e0-a13f-212d2bb605dc",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"backgroundNoiseLabel\": \"cillum deserunt in\",\n  \"otherNoiseLabels\": [\n    \"commodo in non ut\",\n    \"veniam\"\n  ],\n  \"uploadKey\": \"nostrud\",\n  \"sampleLengthMinutes\": -99589471.89332004\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/performance-calibration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"performance-calibration"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
										}
									]
								},
								{
									"name": "Evaluate",
									"id": "f8219c72-af08-4b1a-8e77-b033a46d49c9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/jobs/evaluate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"jobs",
												"evaluate"
											],
											"variable": [
												{
													"id": "c6268bfb-aa72-4bf1-a089-0a7e61cc23e0",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Evaluates every variant of the current impulse. Updates are streamed over the websocket API."
									},
									"response": [
										{
											"id": "ab39e546-7f4c-46a6-85dd-0e5456a00bda",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/evaluate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"evaluate"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
										}
									]
								},
								{
									"name": "Version project",
									"id": "6ae32b98-4e1a-48b1-830d-4836cd1baa97",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"esse mollit\",\n  \"makePublic\": false,\n  \"bucketId\": -55039030.02287727\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/jobs/version",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"jobs",
												"version"
											],
											"variable": [
												{
													"id": "2a84849f-880c-4293-b3da-b3bf5011bcbc",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Create a new version of the project. This stores all data and configuration offsite. If you have access to the enterprise version of Edge Impulse you can store your data in your own storage buckets (only through JWT token authentication)."
									},
									"response": [
										{
											"id": "e332fff9-4469-4958-a0b5-4f1e1968c0ff",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"esse mollit\",\n  \"makePublic\": false,\n  \"bucketId\": -55039030.02287727\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/version",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"version"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
										}
									]
								},
								{
									"name": "Make a version public",
									"id": "aff67d04-2295-461b-9f3b-3f5c8fafdf0b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/jobs/versions/:versionId/make-public",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"jobs",
												"versions",
												":versionId",
												"make-public"
											],
											"variable": [
												{
													"id": "82f8c022-383d-43cf-bfff-78644ae3625e",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												},
												{
													"id": "7f0459a6-2999-4840-85d2-450c7f093b62",
													"key": "versionId",
													"value": "49175899",
													"description": "(Required) Version ID"
												}
											]
										},
										"description": "Make a version of a project public. This makes all data and state available (read-only) on a public URL, and allows users to clone this project."
									},
									"response": [
										{
											"id": "abfcced6-f070-47a9-bc45-da0d53f00d27",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/versions/:versionId/make-public",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"versions",
														":versionId",
														"make-public"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"key": "versionId",
															"value": "49175899",
															"description": "(Required) Version ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
										}
									]
								},
								{
									"name": "Add keywords and noise",
									"id": "a8b2ed1d-a61d-4afc-ac37-9ca59bc2e5c4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/jobs/keywords-noise",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"jobs",
												"keywords-noise"
											],
											"variable": [
												{
													"id": "0d0da546-c25d-46fb-a5a8-a22625a1b2d5",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Add keywords and noise data to a project (for getting started guide)"
									},
									"response": [
										{
											"id": "154b8f3d-9e12-4206-a9b8-15e84c1bd864",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/jobs/keywords-noise",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"jobs",
														"keywords-noise"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
										}
									]
								}
							],
							"id": "7410976b-d88f-4051-ba26-a37eccbd6c80"
						},
						{
							"name": "optimize",
							"item": [
								{
									"name": "config",
									"item": [
										{
											"name": "Get config",
											"id": "ef30c57e-7526-4f7a-82e4-4ea2293e50a2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/optimize/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"optimize",
														"config"
													],
													"variable": [
														{
															"id": "dc76aaaa-75dc-4204-b317-6077e03bc0b4",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Get config"
											},
											"response": [
												{
													"id": "9646acce-63bf-417c-8352-5e590ba960a8",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/optimize/config",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"optimize",
																"config"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"ex dolore\",\n  \"datasetCategory\": \"motion_event\",\n  \"classificationType\": \"regression\",\n  \"targetLatency\": 0,\n  \"targetDevice\": {\n    \"name\": \"cortex-m4f-80mhz\",\n    \"ram\": 1024,\n    \"rom\": 1024\n  },\n  \"compiler\": [\n    \"consequat Ut commodo\",\n    \"irure dolor \"\n  ],\n  \"precision\": [\n    \"minim ullamco laboris\",\n    \"voluptate esse\"\n  ],\n  \"trainingCycles\": 5,\n  \"tuningMaxTrials\": 2,\n  \"tuningWorkers\": 1,\n  \"minMACCS\": 94278116.28593075,\n  \"maxMACCS\": -36159792.83493562,\n  \"tuningAlgorithm\": \"custom\",\n  \"notificationOnCompletion\": true,\n  \"tunerSpaceOptions\": {},\n  \"device\": {}\n}"
												}
											]
										},
										{
											"name": "Update config",
											"id": "23d9196f-25ee-46e0-b0de-9579e50cc2f3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"datasetCategory\": \"transfer_learning\",\n  \"classificationType\": \"classification\",\n  \"targetLatency\": 0,\n  \"targetDevice\": {\n    \"name\": \"cortex-m4f-80mhz\",\n    \"ram\": 1024,\n    \"rom\": 1024\n  },\n  \"compiler\": [\n    \"commodo\",\n    \"Duis et\"\n  ],\n  \"precision\": [\n    \"pariatur proident commodo\",\n    \"sint dolore\"\n  ],\n  \"trainingCycles\": 5,\n  \"tuningMaxTrials\": 2,\n  \"tuningWorkers\": 1,\n  \"minMACCS\": 30822694.852677748,\n  \"maxMACCS\": -21339586.117000267,\n  \"tuningAlgorithm\": \"custom\",\n  \"notificationOnCompletion\": true,\n  \"tunerSpaceOptions\": {}\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/optimize/config",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"optimize",
														"config"
													],
													"variable": [
														{
															"id": "0e3028c2-096a-4918-82b8-355ea938da1e",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Update config"
											},
											"response": [
												{
													"id": "36eb0c72-9628-4352-902c-1b9095db8fc8",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"datasetCategory\": \"transfer_learning\",\n  \"classificationType\": \"classification\",\n  \"targetLatency\": 0,\n  \"targetDevice\": {\n    \"name\": \"cortex-m4f-80mhz\",\n    \"ram\": 1024,\n    \"rom\": 1024\n  },\n  \"compiler\": [\n    \"commodo\",\n    \"Duis et\"\n  ],\n  \"precision\": [\n    \"pariatur proident commodo\",\n    \"sint dolore\"\n  ],\n  \"trainingCycles\": 5,\n  \"tuningMaxTrials\": 2,\n  \"tuningWorkers\": 1,\n  \"minMACCS\": 30822694.852677748,\n  \"maxMACCS\": -21339586.117000267,\n  \"tuningAlgorithm\": \"custom\",\n  \"notificationOnCompletion\": true,\n  \"tunerSpaceOptions\": {}\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/optimize/config",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"optimize",
																"config"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										}
									],
									"id": "060e65fe-65a1-4a89-8175-c4e568284f8e"
								},
								{
									"name": "space",
									"item": [
										{
											"name": "Search space",
											"id": "2ef73d67-e9e4-4aef-9142-0cdd9230bd17",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/optimize/space",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"optimize",
														"space"
													],
													"variable": [
														{
															"id": "73da2df0-a20d-4489-9dea-5e9596b804da",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Search space"
											},
											"response": [
												{
													"id": "b8cd1568-1537-4ecf-a535-ffa07ec9d7f2",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/optimize/space",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"optimize",
																"space"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"impulse\": [\n    {\n      \"inputBlocks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dspBlocks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"learnBlocks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"inputBlocks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dspBlocks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"learnBlocks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": false,\n  \"error\": \"cupidatat in enim nulla\"\n}"
												}
											]
										},
										{
											"name": "Update search space",
											"id": "3d82399f-4eae-4a46-a645-83595f008e60",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"space\": {\n    \"impulse\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/optimize/space",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"optimize",
														"space"
													],
													"variable": [
														{
															"id": "c6f9dde4-d56a-49bc-8098-32e87bd76a43",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												},
												"description": "Update search space"
											},
											"response": [
												{
													"id": "9da88165-e978-4b4a-a746-556257ea642c",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"space\": {\n    \"impulse\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/optimize/space",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"optimize",
																"space"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										}
									],
									"id": "187799c4-ef06-4248-b5b5-77fe35e229ef"
								},
								{
									"name": "Score trial",
									"id": "4d1112b7-fb98-4477-a85a-86efdfb8abb9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"inputBlock\": {\n    \"id\": -10446436.889956385,\n    \"type\": \"image\",\n    \"title\": \"tempor aliquip nisi qui\",\n    \"dimension\": [\n      -17660875.84836167,\n      41454093.06878656\n    ],\n    \"windowSizeMs\": -3233933.5521909297,\n    \"windowIncreasePct\": -98559451.6907121,\n    \"window\": {\n      \"windowSizeMs\": 16970215.863882527,\n      \"windowIncreaseMs\": -54292227.17947329\n    },\n    \"frequencyHz\": 66838189.99729541\n  },\n  \"dspBlock\": {\n    \"id\": 7607431.871701971,\n    \"type\": \"spectral-analysis\",\n    \"title\": \"ex Duis\",\n    \"implementationVersion\": 24029918.802260086,\n    \"channels\": \"RGB\",\n    \"axes\": [\n      \"eu velit magna\",\n      \"exercitation\"\n    ],\n    \"frameLength\": -56748312.512099504,\n    \"numFilters\": 71935083.47160539,\n    \"noiseFloorDb\": -97525233.35244617,\n    \"fftLength\": -12844069.937876642,\n    \"frameStridePct\": 35330628.60472497\n  },\n  \"learnBlock\": {\n    \"id\": 92004670.63844794,\n    \"type\": \"spectral-analysis\",\n    \"title\": \"ad aliquip\",\n    \"augmentationPolicyImage\": \"none\",\n    \"augmentationPolicySpectrogram\": {},\n    \"learningRate\": -58996265.728118315,\n    \"trainingCycles\": 79468448.72280106,\n    \"model\": \"object_ssd_mobilenet_v2_fpnlite_320x320\",\n    \"dimension\": \"sit nostrud\",\n    \"convBaseFilters\": 86572861.13505864,\n    \"convLayers\": -28485698.950508848,\n    \"dropout\": -18963284.726806596,\n    \"denseNeurons\": 2562477.7121486366,\n    \"denseBaseNeurons\": 23584091.547952607,\n    \"denseLayers\": 9948118.471097797,\n    \"script\": \"dolor fugiat est\",\n    \"scriptVariables\": {},\n    \"mode\": \"aliquip aute laborum\",\n    \"trainTestSplit\": 27591017.586908206,\n    \"findLearningRate\": true\n  },\n  \"id\": \"esse et ut anim\",\n  \"experiment\": \"sint tempor qui consequat\",\n  \"original_trial_id\": \"aliquip Excepteur consectetur et\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/optimize/score-trial",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"optimize",
												"score-trial"
											],
											"variable": [
												{
													"id": "b4294ce9-f3fd-49e2-8083-82c8c32778a7",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Score trial"
									},
									"response": [
										{
											"id": "aaf0854d-5b89-463d-bee6-6fca22cefa2e",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"inputBlock\": {\n    \"id\": -25557920.22454804,\n    \"type\": \"time-series\",\n    \"title\": \"sunt nulla qui incidid\",\n    \"dimension\": [\n      24015080.269881353,\n      81042030.97335759\n    ],\n    \"windowSizeMs\": 72343776.29168066,\n    \"windowIncreasePct\": 7275433.725098252,\n    \"window\": {\n      \"windowSizeMs\": -10758689.856177822,\n      \"windowIncreaseMs\": -70137079.98979695\n    },\n    \"frequencyHz\": 52785807.453817636\n  },\n  \"dspBlock\": {\n    \"id\": -88998034.66941875,\n    \"type\": \"spectral-analysis\",\n    \"title\": \"quis\",\n    \"implementationVersion\": 20685912.4870888,\n    \"channels\": \"RGB\",\n    \"axes\": [\n      \"mollit esse exercitation ea\",\n      \"culpa ipsum cupidatat quis\"\n    ],\n    \"frameLength\": -10772474.700256929,\n    \"numFilters\": -82401214.3027693,\n    \"noiseFloorDb\": -70400686.65257402,\n    \"fftLength\": -26303380.716772646,\n    \"frameStridePct\": -60404146.250925004\n  },\n  \"learnBlock\": {\n    \"id\": 587006.9566380978,\n    \"type\": \"spectral-analysis\",\n    \"title\": \"nulla adipisicing\",\n    \"augmentationPolicyImage\": \"none\",\n    \"augmentationPolicySpectrogram\": {},\n    \"learningRate\": 99236713.83882585,\n    \"trainingCycles\": 39067779.901206255,\n    \"model\": \"fomo_mobilenet_v2_a35\",\n    \"dimension\": \"aliqua pariatur laborum\",\n    \"convBaseFilters\": 78288147.08230084,\n    \"convLayers\": -1416027.1647931188,\n    \"dropout\": -59067079.75303127,\n    \"denseNeurons\": -72757764.95151046,\n    \"denseBaseNeurons\": -66126901.557763994,\n    \"denseLayers\": -48953946.76596956,\n    \"script\": \"aute tempor cillum\",\n    \"scriptVariables\": {},\n    \"mode\": \"exercitation elit\",\n    \"trainTestSplit\": -3734514.94040817,\n    \"findLearningRate\": true\n  },\n  \"id\": \"commodo\",\n  \"experiment\": \"cillum consectetur ad aliquip\",\n  \"original_trial_id\": \"pariatur\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/optimize/score-trial",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"optimize",
														"score-trial"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"latency\": {\n    \"dspMips\": -41670189.867922194,\n    \"dspMs\": -7603710.569078937,\n    \"learnMaccs\": 80653004.4519215,\n    \"learnMs\": 99548810.56077248\n  },\n  \"ram\": {\n    \"dsp\": 3712234.284002498,\n    \"learn\": 1627559.1453410536\n  },\n  \"rom\": {\n    \"dsp\": 44586542.85856798,\n    \"learn\": 3316518.0763648897\n  },\n  \"score\": -34562528.32089235,\n  \"success\": false,\n  \"error\": \"pariatur\"\n}"
										}
									]
								},
								{
									"name": "Create trial",
									"id": "84bb7977-c3d4-4f49-aec7-fe503bc85f51",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"inputBlock\": {\n    \"id\": -25557920.22454804,\n    \"type\": \"time-series\",\n    \"title\": \"sunt nulla qui incidid\",\n    \"dimension\": [\n      24015080.269881353,\n      81042030.97335759\n    ],\n    \"windowSizeMs\": 72343776.29168066,\n    \"windowIncreasePct\": 7275433.725098252,\n    \"window\": {\n      \"windowSizeMs\": -10758689.856177822,\n      \"windowIncreaseMs\": -70137079.98979695\n    },\n    \"frequencyHz\": 52785807.453817636\n  },\n  \"dspBlock\": {\n    \"id\": -88998034.66941875,\n    \"type\": \"spectral-analysis\",\n    \"title\": \"quis\",\n    \"implementationVersion\": 20685912.4870888,\n    \"channels\": \"RGB\",\n    \"axes\": [\n      \"mollit esse exercitation ea\",\n      \"culpa ipsum cupidatat quis\"\n    ],\n    \"frameLength\": -10772474.700256929,\n    \"numFilters\": -82401214.3027693,\n    \"noiseFloorDb\": -70400686.65257402,\n    \"fftLength\": -26303380.716772646,\n    \"frameStridePct\": -60404146.250925004\n  },\n  \"learnBlock\": {\n    \"id\": 587006.9566380978,\n    \"type\": \"spectral-analysis\",\n    \"title\": \"nulla adipisicing\",\n    \"augmentationPolicyImage\": \"none\",\n    \"augmentationPolicySpectrogram\": {},\n    \"learningRate\": 99236713.83882585,\n    \"trainingCycles\": 39067779.901206255,\n    \"model\": \"fomo_mobilenet_v2_a35\",\n    \"dimension\": \"aliqua pariatur laborum\",\n    \"convBaseFilters\": 78288147.08230084,\n    \"convLayers\": -1416027.1647931188,\n    \"dropout\": -59067079.75303127,\n    \"denseNeurons\": -72757764.95151046,\n    \"denseBaseNeurons\": -66126901.557763994,\n    \"denseLayers\": -48953946.76596956,\n    \"script\": \"aute tempor cillum\",\n    \"scriptVariables\": {},\n    \"mode\": \"exercitation elit\",\n    \"trainTestSplit\": -3734514.94040817,\n    \"findLearningRate\": true\n  },\n  \"id\": \"commodo\",\n  \"experiment\": \"cillum consectetur ad aliquip\",\n  \"original_trial_id\": \"pariatur\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/optimize/:jobId/create-trial",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"optimize",
												":jobId",
												"create-trial"
											],
											"variable": [
												{
													"id": "4106f92e-995e-4ab7-97f8-978a5d71139c",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												},
												{
													"id": "7529afc7-5b60-4045-bbb7-763ff98c8936",
													"key": "jobId",
													"value": "49175899",
													"description": "(Required) Job ID"
												}
											]
										},
										"description": "Create trial"
									},
									"response": [
										{
											"id": "b5d83bca-c020-4c3b-834c-11c64ae0cfd1",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"inputBlock\": {\n    \"id\": -25557920.22454804,\n    \"type\": \"time-series\",\n    \"title\": \"sunt nulla qui incidid\",\n    \"dimension\": [\n      24015080.269881353,\n      81042030.97335759\n    ],\n    \"windowSizeMs\": 72343776.29168066,\n    \"windowIncreasePct\": 7275433.725098252,\n    \"window\": {\n      \"windowSizeMs\": -10758689.856177822,\n      \"windowIncreaseMs\": -70137079.98979695\n    },\n    \"frequencyHz\": 52785807.453817636\n  },\n  \"dspBlock\": {\n    \"id\": -88998034.66941875,\n    \"type\": \"spectral-analysis\",\n    \"title\": \"quis\",\n    \"implementationVersion\": 20685912.4870888,\n    \"channels\": \"RGB\",\n    \"axes\": [\n      \"mollit esse exercitation ea\",\n      \"culpa ipsum cupidatat quis\"\n    ],\n    \"frameLength\": -10772474.700256929,\n    \"numFilters\": -82401214.3027693,\n    \"noiseFloorDb\": -70400686.65257402,\n    \"fftLength\": -26303380.716772646,\n    \"frameStridePct\": -60404146.250925004\n  },\n  \"learnBlock\": {\n    \"id\": 587006.9566380978,\n    \"type\": \"spectral-analysis\",\n    \"title\": \"nulla adipisicing\",\n    \"augmentationPolicyImage\": \"none\",\n    \"augmentationPolicySpectrogram\": {},\n    \"learningRate\": 99236713.83882585,\n    \"trainingCycles\": 39067779.901206255,\n    \"model\": \"fomo_mobilenet_v2_a35\",\n    \"dimension\": \"aliqua pariatur laborum\",\n    \"convBaseFilters\": 78288147.08230084,\n    \"convLayers\": -1416027.1647931188,\n    \"dropout\": -59067079.75303127,\n    \"denseNeurons\": -72757764.95151046,\n    \"denseBaseNeurons\": -66126901.557763994,\n    \"denseLayers\": -48953946.76596956,\n    \"script\": \"aute tempor cillum\",\n    \"scriptVariables\": {},\n    \"mode\": \"exercitation elit\",\n    \"trainTestSplit\": -3734514.94040817,\n    \"findLearningRate\": true\n  },\n  \"id\": \"commodo\",\n  \"experiment\": \"cillum consectetur ad aliquip\",\n  \"original_trial_id\": \"pariatur\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/optimize/:jobId/create-trial",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"optimize",
														":jobId",
														"create-trial"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"key": "jobId",
															"value": "49175899",
															"description": "(Required) Job ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Retrieves the EON tuner state",
									"id": "2a866bde-ba59-456a-a8bc-e7682a9acef8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/optimize/state",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"optimize",
												"state"
											],
											"variable": [
												{
													"id": "edfffbab-6eb2-4bdd-bf8b-45301a2ad1c4",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Retrieves the EON tuner state"
									},
									"response": [
										{
											"id": "fca5f72b-198d-45d6-8162-204221269d2c",
											"name": "Current EON tuner state",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/optimize/state",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"optimize",
														"state"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"config\": {\n    \"datasetCategory\": \"motion_event\",\n    \"classificationType\": \"regression\",\n    \"targetLatency\": 0,\n    \"targetDevice\": {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ram\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"rom\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"compiler\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"precision\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"trainingCycles\": 5,\n    \"tuningMaxTrials\": 2,\n    \"tuningWorkers\": 1,\n    \"minMACCS\": -93033871.16000001,\n    \"maxMACCS\": -82047631.28373633,\n    \"tuningAlgorithm\": \"bayesian\",\n    \"notificationOnCompletion\": false,\n    \"tunerSpaceOptions\": {}\n  },\n  \"status\": {\n    \"numPendingTrials\": 41352711.53636363,\n    \"numRunningTrials\": 27819608.28971073,\n    \"numCompletedTrials\": 81533386.88197479,\n    \"numFailedTrials\": 78714251.20021492,\n    \"numReadyWorkers\": 39025336.05601221,\n    \"numBusyWorkers\": 72538218.89945585,\n    \"numPendingWorkers\": 1584230.075271532,\n    \"status\": \"ready\"\n  },\n  \"success\": false,\n  \"trials\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastCompletedEpoch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastCompletedTraining\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"retries\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currentEpoch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"workerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"blocks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"impulse\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"experiment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"original_trial_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"status\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastCompletedEpoch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastCompletedTraining\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"retries\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currentEpoch\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"workerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"blocks\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"impulse\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"experiment\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"original_trial_id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"workers\": [\n    {\n      \"workerId\": \"et sed\",\n      \"status\": \"busy\"\n    },\n    {\n      \"workerId\": \"aliqua elit dolore\",\n      \"status\": \"busy\"\n    }\n  ],\n  \"error\": \"in ad\",\n  \"activeTunerJobId\": 42000340.490822285,\n  \"projectDataType\": \"other\",\n  \"jobError\": \"id dolore exercitation\"\n}"
										}
									]
								},
								{
									"name": "Get trial logs",
									"id": "7c0616e6-93eb-4867-a5bd-f0a05b8670aa",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/optimize/trial/:trialId/stdout?limit=49175899",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"optimize",
												"trial",
												":trialId",
												"stdout"
											],
											"query": [
												{
													"key": "limit",
													"value": "49175899",
													"description": "Maximum number of results"
												}
											],
											"variable": [
												{
													"id": "c32e0097-80e7-442c-9d10-943525ab1368",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												},
												{
													"id": "bccd46b3-c63a-4ec7-bf45-1db755b085b5",
													"key": "trialId",
													"value": "ipsum non sunt",
													"description": "(Required) trial ID"
												}
											]
										},
										"description": "Get the logs for a trial."
									},
									"response": [
										{
											"id": "e67a020f-e099-440a-a679-a5598c8ffb9b",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/optimize/trial/:trialId/stdout?limit=49175899",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"optimize",
														"trial",
														":trialId",
														"stdout"
													],
													"query": [
														{
															"key": "limit",
															"value": "49175899"
														}
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"key": "trialId",
															"value": "ipsum non sunt",
															"description": "(Required) trial ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"stdout\": [\n    {\n      \"created\": \"2012-06-13T12:46:14.202Z\",\n      \"data\": \"anim dolore deserunt\"\n    },\n    {\n      \"created\": \"1951-08-22T12:03:25.503Z\",\n      \"data\": \"aliqua\"\n    }\n  ],\n  \"success\": false,\n  \"error\": \"consequat deserunt sint\"\n}"
										}
									]
								}
							],
							"id": "554ab094-04e7-4b61-b260-bfda63b91822"
						},
						{
							"name": "notes",
							"item": [
								{
									"name": "{note Id}",
									"item": [
										{
											"name": "Update note",
											"id": "e00b28f7-fc08-4392-b3a9-f4ed549d83e8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"ut adipisicing\",\n  \"parentId\": -65106737\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/notes/:noteId/update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"notes",
														":noteId",
														"update"
													],
													"variable": [
														{
															"id": "a4896882-9933-4523-a377-11505601902d",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "77acd8b1-2299-4eef-81bb-86fba329bb23",
															"key": "noteId",
															"value": "49175899",
															"description": "(Required) Note ID"
														}
													]
												},
												"description": "Update a note from a project."
											},
											"response": [
												{
													"id": "175527df-6373-44b1-be61-8e002f3c9c37",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"ut adipisicing\",\n  \"parentId\": -65106737\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/notes/:noteId/update",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"notes",
																":noteId",
																"update"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "noteId",
																	"value": "49175899",
																	"description": "(Required) Note ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Remove note",
											"id": "c15d47a6-3800-4a0f-a29f-a1c9ad2a85da",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/notes/:noteId/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"notes",
														":noteId",
														"remove"
													],
													"variable": [
														{
															"id": "31143213-587e-4fc7-9790-d635fdd2f184",
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														},
														{
															"id": "af0c4d07-5155-4e8e-b0c6-de876f7399e1",
															"key": "noteId",
															"value": "49175899",
															"description": "(Required) Note ID"
														}
													]
												},
												"description": "Remove a note from a project."
											},
											"response": [
												{
													"id": "31944d1d-3dbc-4972-bd27-1e83c7fd2704",
													"name": "OK",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/:projectId/notes/:noteId/remove",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																":projectId",
																"notes",
																":noteId",
																"remove"
															],
															"variable": [
																{
																	"key": "projectId",
																	"value": "49175899",
																	"description": "(Required) Project ID"
																},
																{
																	"key": "noteId",
																	"value": "49175899",
																	"description": "(Required) Note ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										}
									],
									"id": "20cea6c3-a87a-4fef-89b9-0e6f503b6ace"
								},
								{
									"name": "Get notes",
									"id": "59fb71a3-9b77-4370-99fd-3f9fc3a34f5a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"notes"
											],
											"variable": [
												{
													"id": "a1c1bc6c-7598-497e-90d8-49167afca01c",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Get all notes in project."
									},
									"response": [
										{
											"id": "7d979978-be2e-44cf-b3a6-b40c2e96d697",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/notes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"notes"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"notes\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"note\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"parentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userPhoto\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"note\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"parentId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userPhoto\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"error\": \"enim in eu\"\n}"
										}
									]
								},
								{
									"name": "Add note",
									"id": "6313949e-0ce6-4c84-949c-224062454f1e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"note\": \"ut adipisicing\",\n  \"parentId\": -65106737\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/notes/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"notes",
												"add"
											],
											"variable": [
												{
													"id": "e7129cc7-25af-4bbc-be82-93cf78c2a779",
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Add a note to a project."
									},
									"response": [
										{
											"id": "a2172501-9063-48cc-96c4-7a99c1d3a073",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"ut adipisicing\",\n  \"parentId\": -65106737\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/:projectId/notes/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														":projectId",
														"notes",
														"add"
													],
													"variable": [
														{
															"key": "projectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": -85370984,\n  \"success\": true,\n  \"error\": \"cillum occaecat ipsum\"\n}"
										}
									]
								}
							],
							"id": "2b5786cc-3f93-482c-9e37-7cc9a57be4cf"
						},
						{
							"name": "Project information",
							"id": "85a24e11-4b6e-49d6-98a8-41b2d3a77b6c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/:projectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId"
									],
									"variable": [
										{
											"id": "49cef464-dee7-4a5b-9068-712dfdc36097",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										}
									]
								},
								"description": "List all information about this project."
							},
							"response": [
								{
									"id": "418dc891-44bb-4a66-aaf1-f5212ced68cb",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"acquisitionSettings\": {\n    \"intervalMs\": -13572105.457500473,\n    \"lengthMs\": 86521506,\n    \"segmentShift\": true,\n    \"sensor\": \"veniam dolor ut enim\",\n    \"label\": \"ex ad reprehenderit dolore\",\n    \"segmentLength\": -83665338.49929327\n  },\n  \"collaborators\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"username\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"staffInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"pending\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"photo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastTosAcceptanceDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"username\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"staffInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"pending\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"photo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastTosAcceptanceDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"computeTime\": {\n    \"periodStartDate\": \"1974-10-10T19:57:13.747Z\",\n    \"periodEndDate\": \"1946-08-04T12:55:42.825Z\",\n    \"timeUsedMs\": -37390233,\n    \"timeLeftMs\": 33954278\n  },\n  \"dataSummary\": {\n    \"totalLengthMs\": -60472350,\n    \"labels\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"dataCount\": 14262928\n  },\n  \"dataSummaryPerCategory\": {\n    \"training\": {\n      \"totalLengthMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"testing\": {\n      \"totalLengthMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"anomaly\": {\n      \"totalLengthMs\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labels\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"deploySettings\": {\n    \"eonCompiler\": true,\n    \"sensor\": \"environmental\",\n    \"arduinoLibraryName\": \"magna aute laborum labore dol\",\n    \"tinkergenLibraryName\": \"mollit et anim id\"\n  },\n  \"developmentKeys\": {\n    \"apiKey\": \"in dolor\",\n    \"hmacKey\": \"magna dolor\"\n  },\n  \"devices\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSeen\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sensors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"remote_mgmt_connected\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"supportsSnapshotStreaming\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"remote_mgmt_host\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastSeen\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"sensors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"remote_mgmt_connected\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"supportsSnapshotStreaming\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"remote_mgmt_host\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"dspJobNotificationUids\": [\n    90280416,\n    67798153\n  ],\n  \"experiments\": [\n    {\n      \"type\": \"dolore nostrud sit dolore\",\n      \"title\": \"nostrud in\",\n      \"enabled\": false,\n      \"showToUser\": false,\n      \"help\": \"eiusmod amet laborum velit\"\n    },\n    {\n      \"type\": \"pariatur\",\n      \"title\": \"esse ex non velit\",\n      \"enabled\": false,\n      \"showToUser\": true,\n      \"help\": \"velit sint nostrud nulla\"\n    }\n  ],\n  \"exportJobNotificationUids\": [\n    -14148427,\n    51446970\n  ],\n  \"hasNewTrainingData\": false,\n  \"impulse\": {\n    \"created\": true,\n    \"configured\": true,\n    \"complete\": true\n  },\n  \"latencyDevices\": [\n    {\n      \"mcu\": \"ad\",\n      \"name\": \"Excepteur est\",\n      \"selected\": false,\n      \"int8Latency\": -77228229.31866822,\n      \"int8ConvLatency\": 2695273.9378606826,\n      \"float32Latency\": -93734274.66005881,\n      \"float32ConvLatency\": 22211820.638107315,\n      \"helpText\": \"quis eu mollit consequat\"\n    },\n    {\n      \"mcu\": \"qui dolor occaecat\",\n      \"name\": \"magna\",\n      \"selected\": false,\n      \"int8Latency\": -22460073.12176977,\n      \"int8ConvLatency\": -72975706.52744839,\n      \"float32Latency\": 36275849.75004777,\n      \"float32ConvLatency\": -96359375.98107179,\n      \"helpText\": \"in\"\n    }\n  ],\n  \"modelTestingJobNotificationUids\": [\n    -78974549,\n    -78518041\n  ],\n  \"performance\": {\n    \"gpu\": true,\n    \"jobLimitM\": 20518004,\n    \"dspFileSizeMb\": -26107194,\n    \"enterprisePerformance\": true,\n    \"trainJobRamMb\": 10539394\n  },\n  \"project\": {\n    \"id\": 1,\n    \"name\": \"Water hammer detection\",\n    \"description\": \"irure anim ad\",\n    \"created\": \"2019-07-21T17:32:28Z\",\n    \"owner\": \"labore non sed\",\n    \"collaborators\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"labelingMethod\": \"object_detection\",\n    \"metadata\": {},\n    \"isEnterpriseProject\": true,\n    \"whitelabelId\": -68763528.36787304,\n    \"lastAccessed\": \"2019-07-21T17:32:28Z\",\n    \"logo\": \"officia velit\",\n    \"ownerUserId\": -11331095,\n    \"ownerOrganizationId\": 57206062,\n    \"dataExplorerScreenshot\": \"tempor sunt Ut\",\n    \"tags\": [\n      \"FOMO\",\n      \"beers\"\n    ],\n    \"category\": \"Image classification\"\n  },\n  \"showCreateFirstImpulse\": false,\n  \"showGettingStartedWizard\": {\n    \"showWizard\": false,\n    \"step\": 60179725\n  },\n  \"showProjectTypeWizard\": false,\n  \"success\": true,\n  \"trainJobNotificationUids\": [\n    40195044,\n    80025231\n  ],\n  \"urls\": {\n    \"mobileClient\": \"occaecat enim elit eiusmod\",\n    \"mobileClientComputer\": \"sint minim\",\n    \"mobileClientInference\": \"fugiat minim in ullamco\"\n  },\n  \"error\": \"laboris sunt\",\n  \"readme\": {\n    \"markdown\": \"cupidatat paria\",\n    \"html\": \"quis minim\"\n  }\n}"
								}
							]
						},
						{
							"name": "Update project",
							"id": "b03070b6-47f3-4979-8ffd-e5198ab58bb2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"logo\": \"amet est commodo\",\n  \"name\": \"dolore voluptate\",\n  \"description\": \"reprehenderit ea fugiat eiusmod\",\n  \"lastDeployEonCompiler\": true,\n  \"latencyDevice\": \"do in consequat minim dolore\",\n  \"experiments\": [\n    \"culpa sed nostrud proident\",\n    \"fugiat\"\n  ],\n  \"showCreateFirstImpulse\": true,\n  \"labelingMethod\": \"single_label\",\n  \"showProjectTypeWizard\": false,\n  \"selectedProjectTypeInWizard\": \"accelerometer\",\n  \"gettingStartedStep\": -73425640,\n  \"useGpu\": true,\n  \"computeTimeLimitM\": -2180259,\n  \"dspFileSizeMb\": -18192861,\n  \"enterprisePerformance\": false,\n  \"trainJobRamMb\": -24523820,\n  \"metadata\": {},\n  \"readme\": \"deserunt Ut sunt minim\",\n  \"lastAcquisitionLabel\": \"eius\",\n  \"trainJobNotificationUids\": [\n    -29959312,\n    -20894512\n  ],\n  \"dspJobNotificationUids\": [\n    71005542,\n    -71763422\n  ],\n  \"modelTestingJobNotificationUids\": [\n    98193930,\n    -7714223\n  ],\n  \"exportJobNotificationUids\": [\n    11799297,\n    -60605152\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/:projectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId"
									],
									"variable": [
										{
											"id": "05685252-d365-4cda-85f2-9f05b63fdeb2",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										}
									]
								},
								"description": "Update project properties such as name and logo."
							},
							"response": [
								{
									"id": "bf5922f6-457d-4641-9c41-9a4894731202",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"logo\": \"cillum do mollit\",\n  \"name\": \"eu nulla\",\n  \"description\": \"ipsum ullamco amet sunt\",\n  \"lastDeployEonCompiler\": true,\n  \"latencyDevice\": \"eu aliqua\",\n  \"experiments\": [\n    \"mollit dolore nostrud \",\n    \"ut aliqua reprehenderit voluptate sint\"\n  ],\n  \"showCreateFirstImpulse\": true,\n  \"labelingMethod\": \"single_label\",\n  \"showProjectTypeWizard\": true,\n  \"selectedProjectTypeInWizard\": \"audio\",\n  \"gettingStartedStep\": -23606875,\n  \"useGpu\": true,\n  \"computeTimeLimitM\": 34561583,\n  \"dspFileSizeMb\": -95169964,\n  \"enterprisePerformance\": true,\n  \"trainJobRamMb\": 98648811,\n  \"metadata\": {},\n  \"readme\": \"proident Lorem\",\n  \"lastAcquisitionLabel\": \"in\",\n  \"trainJobNotificationUids\": [\n    6948749,\n    25406023\n  ],\n  \"dspJobNotificationUids\": [\n    -51067422,\n    33920399\n  ],\n  \"modelTestingJobNotificationUids\": [\n    63142614,\n    37044866\n  ],\n  \"exportJobNotificationUids\": [\n    45835451,\n    -89998070\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
								}
							]
						},
						{
							"name": "Remove project",
							"id": "07f4cb2f-0535-4a4e-9015-44d988f47576",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/:projectId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId"
									],
									"variable": [
										{
											"id": "2a14e75a-7fa8-4a01-aa08-d55852db0fe1",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										}
									]
								},
								"description": "Remove the current project, and all data associated with it. This is irrevocable!"
							},
							"response": [
								{
									"id": "833a0c52-08a3-4b4c-9af1-73ebb7d8f757",
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
								}
							]
						},
						{
							"name": "Give access to project",
							"id": "d2126e37-74c4-4e23-ba33-2b9ce1ed877b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "nextUrl",
											"value": "esse commodo",
											"type": "text",
											"description": "(Required) The URL to redirect to after authorization is completed."
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/:projectId/third-party-auth/:authId/authorize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId",
										"third-party-auth",
										":authId",
										"authorize"
									],
									"variable": [
										{
											"id": "40e0203d-b7aa-490e-95c2-503ea27dc228",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										},
										{
											"id": "47f83244-a622-4ea6-b290-3273a98020c1",
											"key": "authId",
											"value": "49175899",
											"description": "(Required) Auth ID"
										}
									]
								},
								"description": "Authorize a third party to access a project"
							},
							"response": [
								{
									"id": "8a74f6e9-f402-4e3c-8230-17097fac60f1",
									"name": "A redirect to the nextUrl from the request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"description": "(Required) The URL to redirect to after authorization is completed.",
													"key": "nextUrl",
													"value": "esse commodo",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/third-party-auth/:authId/authorize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"third-party-auth",
												":authId",
												"authorize"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												},
												{
													"key": "authId",
													"value": "49175899",
													"description": "(Required) Auth ID"
												}
											]
										}
									},
									"status": "Found",
									"code": 302,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Get development keys",
							"id": "83ee305f-531e-4e7f-870a-8b507f71c780",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/:projectId/devkeys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId",
										"devkeys"
									],
									"variable": [
										{
											"id": "32b47ada-8f75-4df4-9a81-a446e27ab39a",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										}
									]
								},
								"description": "Retrieve the development API and HMAC keys for a project. These keys are specifically marked to be used during development. These keys can be `undefined` if no development keys are set."
							},
							"response": [
								{
									"id": "6dc7d67d-31d4-41f6-b1b6-2a2722d39e46",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/devkeys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"devkeys"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": false,\n  \"error\": \"exercitation non occaecat Ut pariatur\",\n  \"apiKey\": \"aliqua dolor sit exercitati\",\n  \"hmacKey\": \"mollit ipsum eiusmod\"\n}"
								}
							]
						},
						{
							"name": "Get downloads",
							"id": "5c0b9773-f1d7-4ebf-8d48-40a9c21564f2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/:projectId/downloads",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId",
										"downloads"
									],
									"variable": [
										{
											"id": "d964be8b-ad6d-4829-91da-fbdf2ae5528d",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										}
									]
								},
								"description": "Retrieve the downloads for a project."
							},
							"response": [
								{
									"id": "59639443-e072-4257-be2b-2cd8cff5f7e5",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/downloads",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"downloads"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"downloads\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"size\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"link\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"size\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"link\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"error\": \"magna eu exercitation minim\"\n}"
								}
							]
						},
						{
							"name": "List emails",
							"id": "d9a613cb-1654-494b-a23a-35ea7ad0ebd1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/:projectId/emails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId",
										"emails"
									],
									"variable": [
										{
											"id": "98738b38-4ef1-4786-be44-7032b7ebb6e7",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										}
									]
								},
								"description": "Get a list of all emails sent by Edge Impulse regarding this project."
							},
							"response": [
								{
									"id": "92958d92-e8ee-40a5-b40d-348b562427e6",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/emails",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"emails"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"emails\": [\n    {\n      \"from\": \"Ut fugiat labore\",\n      \"to\": \"sit\",\n      \"created\": \"1980-08-26T21:27:08.813Z\",\n      \"subject\": \"laboris magna\",\n      \"bodyText\": \"incididunt labore in occaecat\",\n      \"bodyHTML\": \"non\",\n      \"sent\": true,\n      \"providerResponse\": \"ea esse\",\n      \"userId\": -41705757,\n      \"projectId\": 23741146\n    },\n    {\n      \"from\": \"nulla qui incididun\",\n      \"to\": \"Lorem fugiat adipisicing commodo\",\n      \"created\": \"1950-01-29T18:29:35.750Z\",\n      \"subject\": \"Ut do dolore ani\",\n      \"bodyText\": \"Excepteur qui labore\",\n      \"bodyHTML\": \"in ad\",\n      \"sent\": true,\n      \"providerResponse\": \"Excepteur\",\n      \"userId\": 48030655,\n      \"projectId\": 44777197\n    }\n  ],\n  \"success\": true,\n  \"error\": \"ullamco fugiat ut ad\"\n}"
								}
							]
						},
						{
							"name": "Get socket token",
							"id": "6286400c-8a66-49b4-9760-3b610de0cfc2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/:projectId/socket-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId",
										"socket-token"
									],
									"variable": [
										{
											"id": "6dd23d26-2e75-41b0-a6f7-0904362c875f",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										}
									]
								},
								"description": "Get a token to authenticate with the web socket interface."
							},
							"response": [
								{
									"id": "bf4896ff-645c-4234-b0a3-68c69f00db89",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/socket-token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"socket-token"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": false,\n  \"error\": \"amet sit sunt nostrud\",\n  \"token\": {\n    \"socketToken\": \"dolore irure sit ut\",\n    \"expires\": \"2001-02-07T12:32:37.216Z\"\n  }\n}"
								}
							]
						},
						{
							"name": "Get data axes summary",
							"id": "3404978a-2d3a-4432-bc9a-8be5ee0e533c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/:projectId/data-axes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId",
										"data-axes"
									],
									"variable": [
										{
											"id": "daed9570-37a5-45b9-9748-ceff54d5b845",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										}
									]
								},
								"description": "Get a list of axes that are present in the training data."
							},
							"response": [
								{
									"id": "af1cd37c-efb6-41c9-8e59-d2256f11d61b",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/data-axes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"data-axes"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"dataAxisSummary\": {\n    \"minim_295\": 65729687,\n    \"laborum_7\": -59407231\n  },\n  \"success\": false,\n  \"error\": \"adipisicing pariatur\"\n}"
								}
							]
						},
						{
							"name": "Get the interval (in ms) of the training data",
							"id": "92561b90-d547-4b27-bae9-52af1683ec4a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/:projectId/data-interval",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId",
										"data-interval"
									],
									"variable": [
										{
											"id": "fbb8f1b3-1108-48fd-8da7-e0bbb03c3192",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										}
									]
								},
								"description": "Get the interval of the training data; if multiple intervals are present, the interval of the longest data item is returned."
							},
							"response": [
								{
									"id": "b37de18c-c0b8-456b-b135-e640f3aa2007",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/data-interval",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"data-interval"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"intervalMs\": 86198645,\n  \"success\": true,\n  \"error\": \"sunt consectetur laborum proi\"\n}"
								}
							]
						},
						{
							"name": "Set compute time limit",
							"id": "602cc02e-6fd2-4860-b329-e7f932f088c2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobLimitM\": -6932482\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/:projectId/compute-time-limit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId",
										"compute-time-limit"
									],
									"variable": [
										{
											"id": "79c56016-d00b-44f9-b853-2ceccf9dfd34",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										}
									]
								},
								"description": "Change the job compute time limit for the project. This function is only available through a JWT token, and is not available to all users."
							},
							"response": [
								{
									"id": "e2ccbc33-732d-427b-a7b8-ede1a46380d1",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jobLimitM\": -6932482\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/compute-time-limit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"compute-time-limit"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
								}
							]
						},
						{
							"name": "Set DSP file size limit",
							"id": "370af0f2-d718-4067-bbdd-b23cafecf78a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"dspFileSizeMb\": 74717150\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/:projectId/dsp-file-size-limit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId",
										"dsp-file-size-limit"
									],
									"variable": [
										{
											"id": "bfa59f06-b225-482f-b660-3a769edf38bd",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										}
									]
								},
								"description": "Change the DSP file size limit for the project. This function is only available through a JWT token, and is not available to all users."
							},
							"response": [
								{
									"id": "de7e9108-28ed-4b94-a5c1-efa338274e92",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"dspFileSizeMb\": 74717150\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/dsp-file-size-limit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"dsp-file-size-limit"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
								}
							]
						},
						{
							"name": "Upload image for readme",
							"id": "3e9b903b-48f9-4f78-96f5-d3b670d0b27d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"type": "file",
											"description": "(Required) ",
											"value": null
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/:projectId/readme/upload-image",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId",
										"readme",
										"upload-image"
									],
									"variable": [
										{
											"id": "a59cac74-d784-4528-af8e-6f8320e19a51",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										}
									]
								},
								"description": "Uploads an image to the user CDN and returns the path."
							},
							"response": [
								{
									"id": "88e76daf-6415-46db-91ea-b7969367bcb5",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"description": "(Required) ",
													"key": "image",
													"type": "file"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/readme/upload-image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"readme",
												"upload-image"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"url\": \"in\",\n  \"error\": \"ut\"\n}"
								}
							]
						},
						{
							"name": "Launch getting started wizard",
							"id": "621e45f4-374d-448d-ac7a-259377502241",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/:projectId/launch-getting-started",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId",
										"launch-getting-started"
									],
									"variable": [
										{
											"id": "e27b0686-cea5-410b-bf2e-ad19b2a6545d",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										}
									]
								},
								"description": "This clears out *all data in your project*, and is irrevocable. This function is only available through a JWT token, and is not available to all users."
							},
							"response": [
								{
									"id": "4428203d-2ac9-41b6-a575-942427e62123",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/launch-getting-started",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"launch-getting-started"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
								}
							]
						},
						{
							"name": "Last modification",
							"id": "9a7a46ea-8b16-47a1-b391-6689f15b8455",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/:projectId/last-modification",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId",
										"last-modification"
									],
									"variable": [
										{
											"id": "3bff4d84-f667-47a8-b5a1-1993fd107a12",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										}
									]
								},
								"description": "Get the last modification date for a project (will be upped when data is modified, or when an impulse is trained)"
							},
							"response": [
								{
									"id": "73ece979-1b04-4e2b-bb52-1019ac3a881e",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/last-modification",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"last-modification"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"tempor magna\",\n  \"lastModificationDate\": \"2017-03-26T11:12:18.370Z\",\n  \"lastVersionDate\": \"1989-10-17T18:53:50.784Z\"\n}"
								}
							]
						},
						{
							"name": "Update tags",
							"id": "a3bf788c-6474-438b-9f06-f92f0411ba0b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tags\": [\n    \"ut magna nisi labore\",\n    \"est ipsum fugiat minim\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/:projectId/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId",
										"tags"
									],
									"variable": [
										{
											"id": "de9dcc72-f3f7-434d-81f8-442faacfaa77",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										}
									]
								},
								"description": "Update the list of project tags."
							},
							"response": [
								{
									"id": "49445e71-bfd5-4752-b64b-ab264cb907c9",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tags\": [\n    \"magna culpa\",\n    \"\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/tags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"tags"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
								}
							]
						},
						{
							"name": "Rebalance dataset",
							"id": "044b86a7-8772-4967-b1c9-cced2e30ece0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/:projectId/rebalance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId",
										"rebalance"
									],
									"variable": [
										{
											"id": "1f3db75e-1604-49d3-b363-c5f9caa6dd37",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										}
									]
								},
								"description": "Rebalances the dataset over training / testing categories. This resets the category for all data and splits it 80%/20% between training and testing. This is a deterministic process based on the hash of the name of the data."
							},
							"response": [
								{
									"id": "024ecf37-aab8-47b2-b7b6-60e17d8c0446",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/rebalance",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"rebalance"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"nisi culpa magna enim\",\n  \"ratio\": {\n    \"training\": -72992433,\n    \"testing\": 65158383\n  }\n}"
								}
							]
						},
						{
							"name": "Verify custom DSP block",
							"id": "b1c51fe8-1d6c-482f-af18-74525e1a1e2f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"url\": \"voluptate id nisi pariatur\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/:projectId/verify-dsp-block/url",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId",
										"verify-dsp-block",
										"url"
									],
									"variable": [
										{
											"id": "80e94aa2-722e-41f9-a975-0905979018c6",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										}
									]
								},
								"description": "Verify the validity of a custom DSP block"
							},
							"response": [
								{
									"id": "4d46f4cc-b116-4e36-b4cb-b666f79f51eb",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"url\": \"voluptate id nisi pariatur\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/verify-dsp-block/url",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"verify-dsp-block",
												"url"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": false,\n  \"error\": \"cillum proident Lorem\",\n  \"block\": {\n    \"title\": \"enim irure minim in\",\n    \"author\": \"tempor mollit anim ut\",\n    \"description\": \"reprehenderit pr\",\n    \"name\": \"Duis laborum mollit\",\n    \"latestImplementationVersion\": -60103451\n  }\n}"
								}
							]
						},
						{
							"name": "Download trained model",
							"id": "32baa033-a48a-4aba-9f42-f57e7aa6f86c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/octet-stream"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/:projectId/learn-data/:learnId/model/:modelDownloadId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId",
										"learn-data",
										":learnId",
										"model",
										":modelDownloadId"
									],
									"variable": [
										{
											"id": "7f841b3e-d9c4-4209-bb36-8aeb16d831aa",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										},
										{
											"id": "ea4161dd-5d3e-4f59-b776-1143eeae2616",
											"key": "learnId",
											"value": "49175899",
											"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
										},
										{
											"id": "5046f032-bc77-474c-aac9-88eae24f4089",
											"key": "modelDownloadId",
											"value": "ipsum non sunt",
											"description": "(Required) Model download ID, which can be obtained from the project information"
										}
									]
								},
								"description": "Download a trained model for a learning block. Depending on the block this can be a TensorFlow model, or the cluster centroids."
							},
							"response": [
								{
									"id": "7971bc31-606c-41fb-a02b-363b6bcd50b9",
									"name": "File",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/learn-data/:learnId/model/:modelDownloadId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"learn-data",
												":learnId",
												"model",
												":modelDownloadId"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												},
												{
													"key": "learnId",
													"value": "49175899",
													"description": "(Required) Learn Block ID, use the impulse functions to retrieve the ID"
												},
												{
													"key": "modelDownloadId",
													"value": "ipsum non sunt",
													"description": "(Required) Model download ID, which can be obtained from the project information"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/octet-stream"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "ipsum non sunt"
								}
							]
						},
						{
							"name": "Get URL of export",
							"id": "f50a4f40-40be-4346-bd00-77fc1d4df91d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/:projectId/export/get-url",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										":projectId",
										"export",
										"get-url"
									],
									"variable": [
										{
											"id": "4c12386d-36e0-4a38-8483-0f6c43fa4c85",
											"key": "projectId",
											"value": "49175899",
											"description": "(Required) Project ID"
										}
									]
								},
								"description": "Get the URL to the exported artefacts for an export job of a project."
							},
							"response": [
								{
									"id": "5865f990-b71f-4bf2-bb97-4e02a70812ef",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/:projectId/export/get-url",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												":projectId",
												"export",
												"get-url"
											],
											"variable": [
												{
													"key": "projectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"hasExport\": true,\n  \"success\": false,\n  \"error\": \"dolor Lorem fugiat\",\n  \"created\": \"2004-10-18T08:45:00.348Z\",\n  \"url\": \"irure \"\n}"
								}
							]
						}
					],
					"id": "50b5e72b-4e0c-4dd4-913b-50cda3e46a65"
				},
				{
					"name": "themes",
					"item": [
						{
							"name": "{theme Id}",
							"item": [
								{
									"name": "Get theme by ID",
									"id": "40cffbbf-0b8f-4051-ae88-19d1b85b0be2",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/themes/:themeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"themes",
												":themeId"
											],
											"variable": [
												{
													"id": "00ec61d1-f161-4149-9148-d595e0555622",
													"key": "themeId",
													"value": "49175899",
													"description": "(Required) Theme ID"
												}
											]
										},
										"description": "Get a theme given its unique identifier."
									},
									"response": [
										{
											"id": "bf6f2d58-5006-4379-9c87-ebc1c9d37dde",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/themes/:themeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"themes",
														":themeId"
													],
													"variable": [
														{
															"key": "themeId",
															"value": "49175899",
															"description": "(Required) Theme ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"consectetur qui ut\",\n  \"theme\": {\n    \"id\": -89410599.41173796,\n    \"name\": \"nostrud sunt qui\",\n    \"favicon\": {\n      \"favicon32\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"favicon57\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"favicon76\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"favicon96\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"favicon120\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"favicon128\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"favicon144\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"favicon152\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"favicon180\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"favicon228\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"logos\": {\n      \"primary\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"primaryPng\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"primaryWhite\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"loginLogo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"loginLogoWhite\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mark\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"markWhite\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"colors\": {\n      \"primaryColor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"primaryColorRgb\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"ownerUserId\": 94399561.21933103,\n    \"ownerOrganizationId\": 58199788.34360114\n  }\n}"
										}
									]
								},
								{
									"name": "Delete theme by ID",
									"id": "8c4b4555-ff45-42ce-9f08-8e01ff391cb7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/themes/:themeId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"themes",
												":themeId"
											],
											"variable": [
												{
													"id": "fb4a0556-2215-4aff-9500-cd17913218e5",
													"key": "themeId",
													"value": "49175899",
													"description": "(Required) Theme ID"
												}
											]
										},
										"description": "Delete a theme given its unique identifier."
									},
									"response": [
										{
											"id": "cb11f887-0cb9-4aee-af3e-e01114e47798",
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/themes/:themeId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"themes",
														":themeId"
													],
													"variable": [
														{
															"key": "themeId",
															"value": "49175899",
															"description": "(Required) Theme ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Update theme logos",
									"id": "8292b04f-eab3-4e3d-b337-dce47a3fe4c5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"primary\": \"laboris occaecat sunt nisi\",\n  \"primaryWhite\": \"non\",\n  \"login\": \"ipsum culpa dolore\",\n  \"loginWhite\": \"aute reprehenderi\",\n  \"mark\": \"laboris in\",\n  \"markWhite\": \"e\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/themes/:themeId/logos",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"themes",
												":themeId",
												"logos"
											],
											"variable": [
												{
													"id": "9cab634b-401f-407c-b001-6a6609f2d0d9",
													"key": "themeId",
													"value": "49175899",
													"description": "(Required) Theme ID"
												}
											]
										},
										"description": "Update some or all theme logos."
									},
									"response": [
										{
											"id": "cea40bf3-3baa-4642-8536-73cba23f1c45",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"primary\": \"laboris occaecat sunt nisi\",\n  \"primaryWhite\": \"non\",\n  \"login\": \"ipsum culpa dolore\",\n  \"loginWhite\": \"aute reprehenderi\",\n  \"mark\": \"laboris in\",\n  \"markWhite\": \"e\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/themes/:themeId/logos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"themes",
														":themeId",
														"logos"
													],
													"variable": [
														{
															"key": "themeId",
															"value": "49175899",
															"description": "(Required) Theme ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Update theme colors",
									"id": "786f91f6-13b7-4b63-bbaf-a388447a1dfb",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"primaryColor\": \"ut nostrud cillum\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/themes/:themeId/colors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"themes",
												":themeId",
												"colors"
											],
											"variable": [
												{
													"id": "6aaa27d0-4d18-4c83-a3d3-8d5751a88e12",
													"key": "themeId",
													"value": "49175899",
													"description": "(Required) Theme ID"
												}
											]
										},
										"description": "Update some or all theme colors."
									},
									"response": [
										{
											"id": "51be18cd-7ef4-41e3-9464-8aa02fd51c78",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"primaryColor\": \"ut nostrud cillum\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/themes/:themeId/colors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"themes",
														":themeId",
														"colors"
													],
													"variable": [
														{
															"key": "themeId",
															"value": "49175899",
															"description": "(Required) Theme ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Update theme favicon",
									"id": "fe4155be-cfe0-4e0b-a799-0bb27bb1d4d3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "image",
													"type": "file",
													"description": "(Required) ",
													"value": null
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/themes/:themeId/favicon",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"themes",
												":themeId",
												"favicon"
											],
											"variable": [
												{
													"id": "c39a6829-8d03-408b-bc74-4171dd363071",
													"key": "themeId",
													"value": "49175899",
													"description": "(Required) Theme ID"
												}
											]
										},
										"description": "Update the theme favicon"
									},
									"response": [
										{
											"id": "e9664978-7f5b-4179-b2b4-10879045a1c6",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"description": "(Required) ",
															"key": "image",
															"type": "file"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/themes/:themeId/favicon",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"themes",
														":themeId",
														"favicon"
													],
													"variable": [
														{
															"key": "themeId",
															"value": "49175899",
															"description": "(Required) Theme ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								}
							],
							"id": "ce581e9c-744c-479d-9b8d-ffb273fef148"
						},
						{
							"name": "Get themes",
							"id": "613d9dd5-7f77-441e-b5e7-3ea620ddf0ae",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/themes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"themes"
									]
								},
								"description": "Get all available Studio themes."
							},
							"response": [
								{
									"id": "4b4d977a-81d1-4fec-b6c3-a5d4324dca15",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/themes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"themes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"themes\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"favicon\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logos\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"colors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerUserId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerOrganizationId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"favicon\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logos\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"colors\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerUserId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerOrganizationId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"error\": \"do dolor\"\n}"
								}
							]
						}
					],
					"id": "f66f8d67-b683-4db9-9e73-ad3d5a9a942b"
				},
				{
					"name": "whitelabels",
					"item": [
						{
							"name": "List the registered white labels",
							"id": "a0994b0f-33b1-4c51-b614-81a4d14b61b2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/whitelabels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"whitelabels"
									]
								},
								"description": "Retrieve the list of registered white labels."
							},
							"response": [
								{
									"id": "6e1e4e4c-b983-40c8-bc65-5bc5079bf22b",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/whitelabels",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"whitelabels"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"whitelabels\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"domain\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"themeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identityProviders\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowPasswordAuth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deploymentTargets\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowSignup\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowFreeProjects\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerOrganizationId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"domain\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"themeId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"identityProviders\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowPasswordAuth\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deploymentTargets\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowSignup\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowFreeProjects\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerOrganizationId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"error\": \"tempor id est ut\"\n}"
								}
							]
						},
						{
							"name": "Create a new white label",
							"id": "3351f4de-773d-434a-b813-1fe2f5f1fc68",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Octopus's Garden\",\n  \"domain\": \"underthesea.com\",\n  \"ownerOrganizationId\": 33999171.13710722,\n  \"identityProviders\": [\n    \"non Excepteur exercitation Ut\",\n    \"elit incididunt\"\n  ],\n  \"allowPasswordAuth\": true,\n  \"deploymentTargets\": [\n    \"est cupidatat\",\n    \"occaecat commodo in aute irure\"\n  ],\n  \"allowSignup\": false,\n  \"allowFreeProjects\": false,\n  \"documentationUrl\": \"https://docs.edgeimpulse.com/renesas/\",\n  \"sandboxed\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/whitelabels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"whitelabels"
									]
								},
								"description": "Create a new white label"
							},
							"response": [
								{
									"id": "af08e8bc-500e-4cc0-86e0-6fca8ad93b92",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Octopus's Garden\",\n  \"domain\": \"underthesea.com\",\n  \"ownerOrganizationId\": -84196421.19483513,\n  \"identityProviders\": [\n    \"minim ex\",\n    \"labore\"\n  ],\n  \"allowPasswordAuth\": true,\n  \"deploymentTargets\": [\n    \"Lorem incididunt\",\n    \"veniam dolore officia\"\n  ],\n  \"allowSignup\": true,\n  \"allowFreeProjects\": true,\n  \"documentationUrl\": \"https://docs.edgeimpulse.com/renesas/\",\n  \"sandboxed\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/whitelabels",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"whitelabels"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 37360244,\n  \"success\": true,\n  \"themeId\": -57689888,\n  \"error\": \"cupidatat Excepteur\"\n}"
								}
							]
						}
					],
					"id": "68f9a886-5bcd-4386-a612-dc3dc46ab9db"
				},
				{
					"name": "whitelabel/{whitelabel Id}",
					"item": [
						{
							"name": "White label information",
							"id": "fbb060b5-268c-4712-bbb0-e0f8a6e90dd2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/whitelabel/:whitelabelId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"whitelabel",
										":whitelabelId"
									],
									"variable": [
										{
											"id": "c6b3747f-ed9b-43f4-b3b9-1b971b570d7e",
											"key": "whitelabelId",
											"value": "49175899",
											"description": "(Required) Whitelabel ID"
										}
									]
								},
								"description": "Retrieve all the information about this white label."
							},
							"response": [
								{
									"id": "91973c1b-2653-4110-bb6f-477b08840929",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/whitelabel/:whitelabelId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"whitelabel",
												":whitelabelId"
											],
											"variable": [
												{
													"key": "whitelabelId",
													"value": "49175899",
													"description": "(Required) Whitelabel ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"nulla et Excepteur\",\n  \"whitelabel\": {\n    \"id\": 52465093.21269199,\n    \"name\": \"ad eiusmod do id aliquip\",\n    \"domain\": \"non\",\n    \"themeId\": 85865506.61784983,\n    \"identityProviders\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"allowPasswordAuth\": false,\n    \"deploymentTargets\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"allowSignup\": false,\n    \"allowFreeProjects\": true,\n    \"ownerOrganizationId\": -11466817.171685621\n  }\n}"
								}
							]
						},
						{
							"name": "Deletes a white label",
							"id": "6a56cddf-45de-4bbe-9538-ad5425baab4c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/whitelabel/:whitelabelId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"whitelabel",
										":whitelabelId"
									],
									"variable": [
										{
											"id": "6b22b795-21d0-4846-91c9-52f396ecabee",
											"key": "whitelabelId",
											"value": "49175899",
											"description": "(Required) Whitelabel ID"
										}
									]
								},
								"description": "Deletes the white label with the given id."
							},
							"response": [
								{
									"id": "966ba275-a350-4244-9927-e4267f371e0f",
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/whitelabel/:whitelabelId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"whitelabel",
												":whitelabelId"
											],
											"variable": [
												{
													"key": "whitelabelId",
													"value": "49175899",
													"description": "(Required) Whitelabel ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
								}
							]
						},
						{
							"name": "Update deployment targets",
							"id": "4bebf0b8-041a-4c4e-be7a-78b9906b107c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"targets\": [\n    \"aliquip dolor cillum magna\",\n    \"pariatur\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/whitelabel/:whitelabelId/deploymentTargets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"whitelabel",
										":whitelabelId",
										"deploymentTargets"
									],
									"variable": [
										{
											"id": "e0a5f1ca-b77b-4085-9517-6a6c48fd8c4d",
											"key": "whitelabelId",
											"value": "49175899",
											"description": "(Required) Whitelabel ID"
										}
									]
								},
								"description": "Update some or all of the deployment targets enabled for this white label."
							},
							"response": [
								{
									"id": "cffec5c7-c64c-473f-bd36-f98e77352844",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"targets\": [\n    \"minim mollit commodo\",\n    \"sint dolore in veniam\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/whitelabel/:whitelabelId/deploymentTargets",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"whitelabel",
												":whitelabelId",
												"deploymentTargets"
											],
											"variable": [
												{
													"key": "whitelabelId",
													"value": "49175899",
													"description": "(Required) Whitelabel ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
								}
							]
						},
						{
							"name": "Get impulse blocks",
							"id": "2b085d0e-f9e8-4af1-9903-f7484be40d0d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/whitelabel/:whitelabelId/impulse/blocks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"whitelabel",
										":whitelabelId",
										"impulse",
										"blocks"
									],
									"variable": [
										{
											"id": "002a7817-4e53-464b-bdb7-afd119bbbd5b",
											"key": "whitelabelId",
											"value": "49175899",
											"description": "(Required) Whitelabel ID"
										}
									]
								},
								"description": "Lists all possible DSP and ML blocks available for this white label."
							},
							"response": [
								{
									"id": "1c80129d-74b5-4e57-a833-50011119faf4",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/whitelabel/:whitelabelId/impulse/blocks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"whitelabel",
												":whitelabelId",
												"impulse",
												"blocks"
											],
											"variable": [
												{
													"key": "whitelabelId",
													"value": "49175899",
													"description": "(Required) Whitelabel ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"dspBlocks\": [\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"author\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"experimental\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"latestImplementationVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recommended\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"organizationId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"organizationDspId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"author\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"experimental\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"latestImplementationVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recommended\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"organizationId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"organizationDspId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"inputBlocks\": [\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"author\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recommended\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"author\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recommended\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"learnBlocks\": [\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"author\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recommended\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"title\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"author\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"recommended\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": false,\n  \"error\": \"enim\"\n}"
								}
							]
						}
					],
					"id": "bf3fdb4e-6a98-43f8-aad9-635ebed5f9e3"
				},
				{
					"name": "projects",
					"item": [
						{
							"name": "List active projects",
							"id": "19b01a64-8a03-434a-aded-51165d822df5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"projects"
									]
								},
								"description": "Retrieve list of active projects. If authenticating using JWT token this lists all the projects the user has access to, if authenticating using an API key, this only lists that project."
							},
							"response": [
								{
									"id": "6df87299-44f3-4ea6-8f7d-19eaad6f4098",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"projects"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"projects\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"success\": false,\n  \"error\": \"amet nisi eiusmod\"\n}"
								}
							]
						},
						{
							"name": "Create new project",
							"id": "bda0d98c-28a5-4995-9e72-54e44dc1f8eb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"projectName\": \"EEG trials\",\n  \"originalProjectVersionId\": -74040118\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/projects/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"projects",
										"create"
									]
								},
								"description": "Create a new project. This API can only be called using a JWT token."
							},
							"response": [
								{
									"id": "d9a0fb6c-0f46-4d3b-bbfc-b8c8cb365439",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"projectName\": \"EEG trials\",\n  \"originalProjectVersionId\": -74040118\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/projects/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"projects",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"id\": 23540272,\n  \"success\": false,\n  \"error\": \"Duis nostrud in\"\n}"
								}
							]
						},
						{
							"name": "List public projects",
							"id": "80daeeff-831b-4e94-b8c2-98591c2544d0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/projects/public?limit=49175899&offset=49175899&project=ipsum non sunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"projects",
										"public"
									],
									"query": [
										{
											"key": "limit",
											"value": "49175899",
											"description": "Maximum number of results"
										},
										{
											"key": "offset",
											"value": "49175899",
											"description": "Offset in results, can be used in conjunction with LimitResultsParameter to implement paging."
										},
										{
											"key": "project",
											"value": "ipsum non sunt",
											"description": "Only include projects that contain this string"
										}
									]
								},
								"description": "Retrieve the list of all public projects. You don't need any authentication for this method."
							},
							"response": [
								{
									"id": "9acfc461-a1ea-441a-b79b-01b4f3c985cd",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/projects/public?limit=49175899&offset=49175899&project=ipsum non sunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"projects",
												"public"
											],
											"query": [
												{
													"key": "limit",
													"value": "49175899"
												},
												{
													"key": "offset",
													"value": "49175899"
												},
												{
													"key": "project",
													"value": "ipsum non sunt"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"projects\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"success\": true,\n  \"totalProjectCount\": -70334066,\n  \"error\": \"mollit cupidatat sint\"\n}"
								}
							]
						}
					],
					"id": "e1b544af-12f3-4b49-af07-530f40d78c95"
				},
				{
					"name": "auth",
					"item": [
						{
							"name": "Discourse",
							"id": "6a19b001-64e1-443c-bce1-5e07a0885edf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/discourse?sso=ipsum non sunt&sig=ipsum non sunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"discourse"
									],
									"query": [
										{
											"key": "sso",
											"value": "ipsum non sunt",
											"description": "(Required) Single sign-on token"
										},
										{
											"key": "sig",
											"value": "ipsum non sunt",
											"description": "(Required) Verification signature"
										}
									]
								},
								"description": "Log in a user to the forum. This function is only available through a JWT token."
							},
							"response": [
								{
									"id": "4f47e7c6-7ca5-4b79-a6e6-2adef0805605",
									"name": "Discourse SSO link",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/auth/discourse?sso=ipsum non sunt&sig=ipsum non sunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"discourse"
											],
											"query": [
												{
													"key": "sso",
													"value": "ipsum non sunt"
												},
												{
													"key": "sig",
													"value": "ipsum non sunt"
												}
											]
										}
									},
									"status": "Found",
									"code": 302,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						},
						{
							"name": "Readme.io",
							"id": "4f61a566-d7c3-4058-94ae-9dc8c1059a88",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/auth/readme",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"readme"
									]
								},
								"description": "Log in a user to the docs. This function is only available through a JWT token."
							},
							"response": [
								{
									"id": "0c9bab28-8cd7-44ab-b38c-0d633099f542",
									"name": "Readme.io SSO link",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/auth/readme",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"auth",
												"readme"
											]
										}
									},
									"status": "Found",
									"code": 302,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": ""
								}
							]
						}
					],
					"id": "3c531b7a-22c2-4837-b09d-731ab88394fb"
				},
				{
					"name": "organizations",
					"item": [
						{
							"name": "{organization Id}",
							"item": [
								{
									"name": "apikeys",
									"item": [
										{
											"name": "Get API keys",
											"id": "7476aee0-150b-4161-a2cf-220b4f71b3aa",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/apikeys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"apikeys"
													],
													"variable": [
														{
															"id": "1840c5d1-8f41-4e19-bdfc-fb25ab2ccfc6",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Retrieve all API keys. This does **not** return the full API key, but only a portion (for security purposes)."
											},
											"response": [
												{
													"id": "4f1e8735-1c93-45ff-91f6-224aa5f130a0",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/apikeys",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"apikeys"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"apiKeys\": [\n    {\n      \"id\": 44880101,\n      \"name\": \"ut consequat incididunt Duis nostrud\",\n      \"apiKey\": \"Ut elit iru\",\n      \"created\": \"1968-03-27T10:04:37.525Z\",\n      \"role\": \"member\",\n      \"isTransformationJobKey\": true\n    },\n    {\n      \"id\": -16823193,\n      \"name\": \"sint magna dolore qui\",\n      \"apiKey\": \"ex Lorem dolore sint\",\n      \"created\": \"2002-01-04T12:10:35.008Z\",\n      \"role\": \"admin\",\n      \"isTransformationJobKey\": true\n    }\n  ],\n  \"success\": false,\n  \"error\": \"irure\"\n}"
												}
											]
										},
										{
											"name": "Add API key",
											"id": "253449d5-ba22-40f4-b09e-3b29e059ea3f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"mollit Ut ex deserunt\",\n  \"apiKey\": \"id tempor et\",\n  \"role\": \"member\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/apikeys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"apikeys"
													],
													"variable": [
														{
															"id": "5e03b7d6-dc65-47f3-b214-ca7550d15c79",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Add an API key."
											},
											"response": [
												{
													"id": "2fde5a23-1021-4cdf-9859-290b37925fca",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"mollit Ut ex deserunt\",\n  \"apiKey\": \"id tempor et\",\n  \"role\": \"member\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/apikeys",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"apikeys"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Revoke API key",
											"id": "156efc63-2e60-43ad-9111-696e81d21397",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/apikeys/:apiKeyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"apikeys",
														":apiKeyId"
													],
													"variable": [
														{
															"id": "139dc4b1-4bc1-4246-b1d9-fef1796711a0",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														},
														{
															"id": "96354310-8b7b-4bde-b902-ead3e1d9b3cc",
															"key": "apiKeyId",
															"value": "49175899",
															"description": "(Required) API key ID"
														}
													]
												},
												"description": "Revoke an API key."
											},
											"response": [
												{
													"id": "2d9f1393-4c95-4f75-befc-1769a0691cae",
													"name": "OK",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/apikeys/:apiKeyId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"apikeys",
																":apiKeyId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "apiKeyId",
																	"value": "49175899",
																	"description": "(Required) API key ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										}
									],
									"id": "4dfe3039-95b9-4f82-9774-f768a712946f"
								},
								{
									"name": "members",
									"item": [
										{
											"name": "{member Id}",
											"item": [
												{
													"name": "Set member role",
													"id": "19bbc3a1-b141-486b-93e4-9be92e94b548",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"role\": \"member\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/members/:memberId/role",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"members",
																":memberId",
																"role"
															],
															"variable": [
																{
																	"id": "59fd33d1-684a-44b4-957d-b9760940e28a",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "944ddc35-e0e7-4999-af38-633561c426eb",
																	"key": "memberId",
																	"value": "49175899",
																	"description": "(Required) Member ID"
																}
															]
														},
														"description": "Change the role of a member in an organization."
													},
													"response": [
														{
															"id": "b956cd44-2a48-4471-95ac-0028c0afe218",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"role\": \"member\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/members/:memberId/role",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"members",
																		":memberId",
																		"role"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "memberId",
																			"value": "49175899",
																			"description": "(Required) Member ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												},
												{
													"name": "Set member datasets",
													"id": "4950a710-ef5b-45b1-a41a-becd299e8fd8",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"datasets\": [\n    \"ea reprehenderi\",\n    \"nostrud\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/members/:memberId/datasets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"members",
																":memberId",
																"datasets"
															],
															"variable": [
																{
																	"id": "82958cda-776d-4c8b-8be6-4813844a5439",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "ab60573a-3a50-4c50-97bc-dfd41bfa51f9",
																	"key": "memberId",
																	"value": "49175899",
																	"description": "(Required) Member ID"
																}
															]
														},
														"description": "Set the datasets a guest member has access to in an organization."
													},
													"response": [
														{
															"id": "8871ab2f-d8e8-4d6f-99a8-bd4d8caaeb16",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"datasets\": [\n    \"veniam est aute\",\n    \"et enim\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/members/:memberId/datasets",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"members",
																		":memberId",
																		"datasets"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "memberId",
																			"value": "49175899",
																			"description": "(Required) Member ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												},
												{
													"name": "Resend invitation",
													"id": "82c51e6f-b0a5-426b-936b-edf3d0512ab1",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/members/:memberId/resend-invite",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"members",
																":memberId",
																"resend-invite"
															],
															"variable": [
																{
																	"id": "932e84e2-4cf0-43e1-90b5-69dbbe80076a",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "7675e1e9-fc59-4b78-a950-4048002fd495",
																	"key": "memberId",
																	"value": "49175899",
																	"description": "(Required) Member ID"
																}
															]
														},
														"description": "Resend an invitation to a member in an organization."
													},
													"response": [
														{
															"id": "2c0a37eb-4758-4117-a490-80571c02a9f2",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/members/:memberId/resend-invite",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"members",
																		":memberId",
																		"resend-invite"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "memberId",
																			"value": "49175899",
																			"description": "(Required) Member ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												}
											],
											"id": "3e1c760c-82bd-49f8-99b9-489b62be2b09"
										},
										{
											"name": "Add member",
											"id": "40b33c57-b41f-485e-b434-3ecadbf72dac",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"usernameOrEmail\": \"dolore ex consectetur\",\n  \"role\": \"member\",\n  \"datasets\": [\n    \"et sit adipisi\",\n    \"laboris officia eiusmod\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/members/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"members",
														"add"
													],
													"variable": [
														{
															"id": "2c09ff9e-2998-4a30-b7c0-0cd37d32f583",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Add a member to an organization."
											},
											"response": [
												{
													"id": "570ab436-e1a5-4156-b2e9-3306c11df50b",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"usernameOrEmail\": \"eiusmod irure et voluptate\",\n  \"role\": \"member\",\n  \"datasets\": [\n    \"cillum dolore\",\n    \"et anim sed do\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/members/add",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"members",
																"add"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Invite member",
											"id": "37efab36-d5c1-4fe0-8bf3-1b077c3beba2",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"dolor ex ut\",\n  \"role\": \"guest\",\n  \"datasets\": [\n    \"non ut\",\n    \"Ut dolor sed\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/members/invite",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"members",
														"invite"
													],
													"variable": [
														{
															"id": "98229c6f-6ce4-42e1-ab92-28045483aa23",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Invite a member to an organization."
											},
											"response": [
												{
													"id": "ce0a182e-49a7-40a3-895c-2a5f38ae9aad",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"email\": \"esse Ut reprehenderit\",\n  \"role\": \"guest\",\n  \"datasets\": [\n    \"consequat laboris proident sed ad\",\n    \"eu cupidatat ea non\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/members/invite",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"members",
																"invite"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Remove member",
											"id": "3aeea641-80c0-44f3-b6eb-45c76bfd3a58",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": -46619270\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/members/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"members",
														"remove"
													],
													"variable": [
														{
															"id": "9db53ab8-be48-4a3a-8861-5dff396189c6",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Remove a member from an organization. Note that you cannot invoke this function if only a single member is present to the organization."
											},
											"response": [
												{
													"id": "cb081044-76bd-411b-aac4-7d9a99acd5ba",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"id\": -46619270\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/members/remove",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"members",
																"remove"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										}
									],
									"id": "411f384e-93ee-4544-9615-823011a0c8be"
								},
								{
									"name": "buckets",
									"item": [
										{
											"name": "{bucket Id}",
											"item": [
												{
													"name": "Update storage bucket",
													"id": "875790db-8bca-4900-be08-fe13be73fa4f",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"ut et ipsum in\",\n  \"accessKey\": \"tempor Lorem commodo sit proident\",\n  \"secretKey\": \"eu sed culpa pariatu\",\n  \"endpoint\": \"est\",\n  \"bucket\": \"in voluptate\",\n  \"prefix\": \"enim irure dolor u\",\n  \"region\": \"adipisicing consectetur quis nulla\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/buckets/:bucketId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"buckets",
																":bucketId"
															],
															"variable": [
																{
																	"id": "33e2294e-2962-4e83-97a1-ee1eddcb841b",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "e16ffdd8-44ca-4563-958a-397ce1ebd2c2",
																	"key": "bucketId",
																	"value": "49175899",
																	"description": "(Required) Bucket ID"
																}
															]
														},
														"description": "Updates storage bucket details. This only updates fields that were set in the request body."
													},
													"response": [
														{
															"id": "d8df79cf-8056-4b33-9b6d-ddb11d84c13d",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"ut et ipsum in\",\n  \"accessKey\": \"tempor Lorem commodo sit proident\",\n  \"secretKey\": \"eu sed culpa pariatu\",\n  \"endpoint\": \"est\",\n  \"bucket\": \"in voluptate\",\n  \"prefix\": \"enim irure dolor u\",\n  \"region\": \"adipisicing consectetur quis nulla\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/buckets/:bucketId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"buckets",
																		":bucketId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "bucketId",
																			"value": "49175899",
																			"description": "(Required) Bucket ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												},
												{
													"name": "Remove storage bucket",
													"id": "5cf0582e-cb28-4678-864d-cfc284011fd9",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/buckets/:bucketId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"buckets",
																":bucketId"
															],
															"variable": [
																{
																	"id": "76107f32-4f4a-40a8-b81e-c01f903fd119",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "654f3da0-89b2-4ad7-890b-9721048026ae",
																	"key": "bucketId",
																	"value": "49175899",
																	"description": "(Required) Bucket ID"
																}
															]
														},
														"description": "Remove a storage bucket. This will render any data in this storage bucket unreachable."
													},
													"response": [
														{
															"id": "b967ab1d-4728-4c5d-81a8-60ba3aa7c6a5",
															"name": "OK",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/buckets/:bucketId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"buckets",
																		":bucketId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "bucketId",
																			"value": "49175899",
																			"description": "(Required) Bucket ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												}
											],
											"id": "6bb72d40-175f-4020-83c8-8cba6907a292"
										},
										{
											"name": "List storage buckets",
											"id": "e147cf0f-914e-4468-99bd-2f6610f7cb14",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/buckets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"buckets"
													],
													"variable": [
														{
															"id": "75ca21b2-ee53-4315-8841-e3ca1c122563",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Retrieve all configured storage buckets. This does not list the secret key."
											},
											"response": [
												{
													"id": "fa79ea7e-ab49-4dac-83f6-e3c260360e44",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/buckets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"buckets"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"buckets\": [\n    {\n      \"id\": 68375678,\n      \"name\": \"tempor magna pariatur\",\n      \"accessKey\": \"aute irure do\",\n      \"endpoint\": \"pariatur velit aliquip consequat\",\n      \"bucket\": \"aliqua\",\n      \"region\": \"do\",\n      \"connected\": false,\n      \"prefix\": \"nostrud reprehenderit amet labore\"\n    },\n    {\n      \"id\": 91999142,\n      \"name\": \"do deserunt\",\n      \"accessKey\": \"qui amet quis Lorem\",\n      \"endpoint\": \"Ut ullamco dolor exercitation laboris\",\n      \"bucket\": \"deserunt eu eiusmod laborum culpa\",\n      \"region\": \"id ullamco\",\n      \"connected\": false,\n      \"prefix\": \"dolore culpa\"\n    }\n  ],\n  \"success\": true,\n  \"error\": \"reprehenderit\"\n}"
												}
											]
										},
										{
											"name": "Add a storage bucket",
											"id": "8dc334c9-4ea7-4496-b100-b59fc2534278",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"id deserunt Lorem\",\n  \"accessKey\": \"id in\",\n  \"secretKey\": \"in Ut magna\",\n  \"endpoint\": \"nulla non elit\",\n  \"bucket\": \"magna veniam nulla\",\n  \"region\": \"magna aute elit est laborum\",\n  \"prefix\": \"esse adipisicing Duis elit\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/buckets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"buckets"
													],
													"variable": [
														{
															"id": "521b9c52-7f95-4f5f-ba2c-33e300b31414",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Add a storage bucket."
											},
											"response": [
												{
													"id": "75141482-6a17-4845-b6d4-37d38c820e8f",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"id deserunt Lorem\",\n  \"accessKey\": \"id in\",\n  \"secretKey\": \"in Ut magna\",\n  \"endpoint\": \"nulla non elit\",\n  \"bucket\": \"magna veniam nulla\",\n  \"region\": \"magna aute elit est laborum\",\n  \"prefix\": \"esse adipisicing Duis elit\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/buckets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"buckets"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Verify bucket connectivity",
											"id": "5e292a6f-e7af-4e1c-924e-240adc5190e3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"accessKey\": \"quis tempor\",\n  \"secretKey\": \"mollit culpa cillum\",\n  \"endpoint\": \"dolor enim proident minim\",\n  \"bucket\": \"et incididunt veniam\",\n  \"region\": \"adipisicing\",\n  \"prefix\": \"cillum esse nulla do culpa\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/buckets/verify",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"buckets",
														"verify"
													],
													"variable": [
														{
															"id": "b45fdd4f-e3d7-4136-9232-e62d50f10dfa",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Verify whether we can reach a bucket before adding it."
											},
											"response": [
												{
													"id": "3903b9a0-049e-40cb-a7c3-fc1afc5fc014",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"accessKey\": \"quis tempor\",\n  \"secretKey\": \"mollit culpa cillum\",\n  \"endpoint\": \"dolor enim proident minim\",\n  \"bucket\": \"et incididunt veniam\",\n  \"region\": \"adipisicing\",\n  \"prefix\": \"cillum esse nulla do culpa\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/buckets/verify",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"buckets",
																"verify"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"files\": [\n    {\n      \"name\": \"enim tempor\",\n      \"size\": -98874015,\n      \"folderName\": \"est\"\n    },\n    {\n      \"name\": \"qui Lorem\",\n      \"size\": -91807329,\n      \"folderName\": \"elit mollit eiusmod\"\n    }\n  ],\n  \"success\": false,\n  \"error\": \"eu dolore proident\"\n}"
												}
											]
										}
									],
									"id": "829f27c5-e8e6-4426-b9a6-1bfc1d61a831"
								},
								{
									"name": "data",
									"item": [
										{
											"name": "{data Id}",
											"item": [
												{
													"name": "download",
													"item": [
														{
															"name": "Download data",
															"id": "f1a95367-1f98-415f-8a24-9605bd2d4241",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/zip"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/data/:dataId/download?filter=dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"data",
																		":dataId",
																		"download"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
																			"description": "Data filter in SQL WHERE format, where you can reference 'dataset', 'bucket', 'name', 'total_file_count', 'total_file_size', 'created' and any metadata label through 'metadata->' (dots are replaced by underscore)."
																		}
																	],
																	"variable": [
																		{
																			"id": "c3a86161-45c2-44e0-b05a-581e499efad2",
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"id": "524e6797-b538-4564-9dd1-7e0460285060",
																			"key": "dataId",
																			"value": "49175899",
																			"description": "(Required) Data ID"
																		}
																	]
																},
																"description": "Download all data for this data item."
															},
															"response": [
																{
																	"id": "35a895c6-4ea8-4218-b2db-005e0367a69c",
																	"name": "ZIP file",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "x-api-key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/organizations/:organizationId/data/:dataId/download?filter=dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"organizations",
																				":organizationId",
																				"data",
																				":dataId",
																				"download"
																			],
																			"query": [
																				{
																					"key": "filter",
																					"value": "dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "49175899",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "dataId",
																					"value": "49175899",
																					"description": "(Required) Data ID"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/zip"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "ipsum non sunt"
																}
															]
														},
														{
															"name": "Delete file",
															"id": "9786ef73-3987-4a5d-bb56-5de951ccbd34",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/data/:dataId/download?fileName=ipsum non sunt",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"data",
																		":dataId",
																		"download"
																	],
																	"query": [
																		{
																			"key": "fileName",
																			"value": "ipsum non sunt",
																			"description": "(Required) File name"
																		}
																	],
																	"variable": [
																		{
																			"id": "f6dd9bf1-bebc-45e2-b7b9-471e5309e06e",
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"id": "359ba977-df44-4a43-a1e1-69c91a2eeebd",
																			"key": "dataId",
																			"value": "49175899",
																			"description": "(Required) Data ID"
																		}
																	]
																},
																"description": "Delete a single file from a data item."
															},
															"response": [
																{
																	"id": "1ebbaa9d-ac5b-4b8a-a408-4988029057c3",
																	"name": "OK",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "x-api-key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/organizations/:organizationId/data/:dataId/download?fileName=ipsum non sunt",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"organizations",
																				":organizationId",
																				"data",
																				":dataId",
																				"download"
																			],
																			"query": [
																				{
																					"key": "fileName",
																					"value": "ipsum non sunt"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "49175899",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "dataId",
																					"value": "49175899",
																					"description": "(Required) Data ID"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
																}
															]
														}
													],
													"id": "9e5d1845-d12e-4d88-8654-37d4716406d1"
												},
												{
													"name": "files",
													"item": [
														{
															"name": "Download file",
															"id": "c182e418-6de0-430c-bc97-0b6b55fd7834",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/octet-stream"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/data/:dataId/files/download?fileName=ipsum non sunt",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"data",
																		":dataId",
																		"files",
																		"download"
																	],
																	"query": [
																		{
																			"key": "fileName",
																			"value": "ipsum non sunt",
																			"description": "(Required) File name"
																		}
																	],
																	"variable": [
																		{
																			"id": "be592042-5987-45b8-91a1-12d287f8617f",
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"id": "06ee5e6d-fa37-49ce-9ce7-9a97480e33c6",
																			"key": "dataId",
																			"value": "49175899",
																			"description": "(Required) Data ID"
																		}
																	]
																},
																"description": "Download a single file from a data item."
															},
															"response": [
																{
																	"id": "73d5c6ad-0111-43c1-9d12-d0de417bbdce",
																	"name": "File",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "x-api-key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/organizations/:organizationId/data/:dataId/files/download?fileName=ipsum non sunt",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"organizations",
																				":organizationId",
																				"data",
																				":dataId",
																				"files",
																				"download"
																			],
																			"query": [
																				{
																					"key": "fileName",
																					"value": "ipsum non sunt"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "49175899",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "dataId",
																					"value": "49175899",
																					"description": "(Required) Data ID"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/octet-stream"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "ipsum non sunt"
																}
															]
														},
														{
															"name": "Preview file",
															"id": "fe0b40da-fe67-4bff-beb7-25740c4dd6d5",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/octet-stream"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/data/:dataId/files/preview?fileName=ipsum non sunt",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"data",
																		":dataId",
																		"files",
																		"preview"
																	],
																	"query": [
																		{
																			"key": "fileName",
																			"value": "ipsum non sunt",
																			"description": "(Required) File name"
																		}
																	],
																	"variable": [
																		{
																			"id": "37e813b1-c848-4322-83b3-e227ab18c8e7",
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"id": "e174eeab-cc2c-4bae-92c4-e77f296892c4",
																			"key": "dataId",
																			"value": "49175899",
																			"description": "(Required) Data ID"
																		}
																	]
																},
																"description": "Preview a single file from a data item (same as downloadOrganizationDataFile but w/ content-disposition inline)."
															},
															"response": [
																{
																	"id": "6691436a-6505-4ad0-ac2a-9506ae80e3e3",
																	"name": "File",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "x-api-key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/organizations/:organizationId/data/:dataId/files/preview?fileName=ipsum non sunt",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"organizations",
																				":organizationId",
																				"data",
																				":dataId",
																				"files",
																				"preview"
																			],
																			"query": [
																				{
																					"key": "fileName",
																					"value": "ipsum non sunt"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "49175899",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "dataId",
																					"value": "49175899",
																					"description": "(Required) Data ID"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/octet-stream"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "ipsum non sunt"
																}
															]
														}
													],
													"id": "2594ccbc-4edc-48b9-b98b-8491bb9d4d9a"
												},
												{
													"name": "Get data metadata",
													"id": "58811275-5a8f-4524-b303-da7e52900b15",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/data/:dataId?filter=dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"data",
																":dataId"
															],
															"query": [
																{
																	"key": "filter",
																	"value": "dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
																	"description": "Data filter in SQL WHERE format, where you can reference 'dataset', 'bucket', 'name', 'total_file_count', 'total_file_size', 'created' and any metadata label through 'metadata->' (dots are replaced by underscore)."
																}
															],
															"variable": [
																{
																	"id": "171c534e-e60f-4c2a-925e-9f29475a290e",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "15cd69cf-a5c1-4dd6-8456-8a75c6740a89",
																	"key": "dataId",
																	"value": "49175899",
																	"description": "(Required) Data ID"
																}
															]
														},
														"description": "Get a data item. This will HEAD the underlying bucket to retrieve the last file information."
													},
													"response": [
														{
															"id": "aee7ef0b-e57c-40e3-9f94-b91547890004",
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/data/:dataId?filter=dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"data",
																		":dataId"
																	],
																	"query": [
																		{
																			"key": "filter",
																			"value": "dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "dataId",
																			"value": "49175899",
																			"description": "(Required) Data ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"data\": {\n    \"id\": -15996566,\n    \"name\": \"voluptate magna\",\n    \"bucketId\": 24753440,\n    \"bucketName\": \"nisi minim ex exercitation do\",\n    \"bucketPath\": \"aliquip ullamco\",\n    \"dataset\": \"laborum sunt reprehenderit exercitation aliquip\",\n    \"totalFileCount\": 16648085,\n    \"totalFileSize\": 27471843,\n    \"created\": \"1968-07-03T14:23:27.622Z\",\n    \"metadata\": {\n      \"elit_28\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"pariatur4\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"files\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"success\": false,\n  \"error\": \"do\"\n}"
														}
													]
												},
												{
													"name": "Update data metadata",
													"id": "3d28f3b7-abca-42f1-b307-3e5e81bcf847",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"elit aute veniam\",\n  \"dataset\": \"id pariatur\",\n  \"metadata\": {\n    \"veniam_a0\": \"eiusmod aute\",\n    \"cupidatat_901\": \"esse ad\",\n    \"consectetur4\": \"laboris officia\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/data/:dataId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"data",
																":dataId"
															],
															"variable": [
																{
																	"id": "2b5126a0-0be8-40cd-bbc0-c4622cf1c83e",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "6bf0bee8-5f83-4887-9200-fd3f51800b38",
																	"key": "dataId",
																	"value": "49175899",
																	"description": "(Required) Data ID"
																}
															]
														},
														"description": "Update the data item metadata."
													},
													"response": [
														{
															"id": "ced4c9e4-a708-411d-8c5c-792ccd7541fd",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"elit aute veniam\",\n  \"dataset\": \"id pariatur\",\n  \"metadata\": {\n    \"veniam_a0\": \"eiusmod aute\",\n    \"cupidatat_901\": \"esse ad\",\n    \"consectetur4\": \"laboris officia\"\n  }\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/data/:dataId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"data",
																		":dataId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "dataId",
																			"value": "49175899",
																			"description": "(Required) Data ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												},
												{
													"name": "Delete data",
													"id": "fb90abc6-25d4-458c-9de3-0d5db1a65631",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/data/:dataId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"data",
																":dataId"
															],
															"variable": [
																{
																	"id": "062bd208-4801-4c46-932d-a2ec9968fe6d",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "ec4a3468-980a-4b71-b007-b3240830f224",
																	"key": "dataId",
																	"value": "49175899",
																	"description": "(Required) Data ID"
																}
															]
														},
														"description": "Delete a data item. This does not remove the items from the underlying storage."
													},
													"response": [
														{
															"id": "faa0126a-006d-426a-81ec-a2e1dd38a53f",
															"name": "OK",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/data/:dataId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"data",
																		":dataId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "dataId",
																			"value": "49175899",
																			"description": "(Required) Data ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												},
												{
													"name": "Add files",
													"id": "7850f990-2bd3-4d9f-af90-d6b55a5a9829",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "files[]",
																	"value": "[\"ex\",\"eu in\"]",
																	"type": "text",
																	"description": "(Required) "
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/data/:dataId/add",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"data",
																":dataId",
																"add"
															],
															"variable": [
																{
																	"id": "961b36cf-c2fe-4712-b9b0-dd9de35f5042",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "66d78aeb-3e7f-47b2-89d9-c613b7bb39df",
																	"key": "dataId",
																	"value": "49175899",
																	"description": "(Required) Data ID"
																}
															]
														},
														"description": "Add a new file to an existing data item.  Don't trust the code generated by the widget, there are examples of using this API in Python, cURL and Node.js under the parameters."
													},
													"response": [
														{
															"id": "306515ef-a5eb-474a-8215-71c5bbb766fb",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"description": "(Required) ",
																			"key": "files[]",
																			"value": "[\"exercitation nisi elit \",\"irure ex anim id\"]",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/data/:dataId/add",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"data",
																		":dataId",
																		"add"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "dataId",
																			"value": "49175899",
																			"description": "(Required) Data ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												}
											],
											"id": "592c0e52-0c76-4669-984c-0a245e399a51"
										},
										{
											"name": "List data",
											"id": "7573e4c3-e093-4834-84a6-c1556097ad20",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/data?dataset=activity data&filter=dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')&limit=49175899&offset=49175899",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"data"
													],
													"query": [
														{
															"key": "dataset",
															"value": "activity data",
															"description": "Selected dataset"
														},
														{
															"key": "filter",
															"value": "dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
															"description": "Data filter in SQL WHERE format, where you can reference 'dataset', 'bucket', 'name', 'total_file_count', 'total_file_size', 'created' and any metadata label through 'metadata->' (dots are replaced by underscore)."
														},
														{
															"key": "limit",
															"value": "49175899",
															"description": "Maximum number of results"
														},
														{
															"key": "offset",
															"value": "49175899",
															"description": "Offset in results, can be used in conjunction with LimitResultsParameter to implement paging."
														}
													],
													"variable": [
														{
															"id": "db66139d-a1df-4c88-9b3b-3b6a8d8377bb",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Lists all data items. This can be filtered by the ?filter parameter."
											},
											"response": [
												{
													"id": "f1a41bf4-504e-4f64-b11d-6868c56f9a6c",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/data?dataset=activity data&filter=dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')&limit=49175899&offset=49175899",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"data"
															],
															"query": [
																{
																	"key": "dataset",
																	"value": "activity data"
																},
																{
																	"key": "filter",
																	"value": "dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')"
																},
																{
																	"key": "limit",
																	"value": "49175899"
																},
																{
																	"key": "offset",
																	"value": "49175899"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"nulla id eu ea sit\",\n  \"filterParseError\": \"aliqua aute do\",\n  \"data\": [\n    {\n      \"id\": 94098137,\n      \"name\": \"nostrud occaecat cillum proident reprehenderit\",\n      \"bucketId\": 20801930,\n      \"bucketName\": \"dolore velit Ut aute anim\",\n      \"bucketPath\": \"occaecat cillum\",\n      \"fullBucketPath\": \"minim ipsum fugiat sed incididunt\",\n      \"dataset\": \"ut ex Ut anim\",\n      \"totalFileCount\": -82369495,\n      \"totalFileSize\": -75305372,\n      \"created\": \"2021-05-19T15:43:50.313Z\",\n      \"metadata\": {\n        \"dolore_4\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"sit_0c\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"in_f15\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    },\n    {\n      \"id\": -14996317,\n      \"name\": \"adipisicing nisi dolor\",\n      \"bucketId\": -52264851,\n      \"bucketName\": \"aliqua eu\",\n      \"bucketPath\": \"non aliqua mollit voluptate\",\n      \"fullBucketPath\": \"deserun\",\n      \"dataset\": \"magna consectetur Ut\",\n      \"totalFileCount\": -77493032,\n      \"totalFileSize\": 45888949,\n      \"created\": \"1977-01-06T12:46:56.766Z\",\n      \"metadata\": {\n        \"consectetur_00\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"dolore__\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    }\n  ],\n  \"totalFileCount\": 715300.2097449899,\n  \"totalDataItemCount\": 25950759.806850865\n}"
												}
											]
										},
										{
											"name": "Add new data",
											"id": "fc75fe2a-4fc4-4135-b38d-c8f913bda3f8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "name",
															"value": "nostrud pariatur",
															"type": "text",
															"description": "(Required) "
														},
														{
															"key": "dataset",
															"value": "id cupidatat sunt aute",
															"type": "text",
															"description": "(Required) "
														},
														{
															"key": "metadata",
															"value": "Ut esse veniam",
															"type": "text",
															"description": "(Required) Key-value pair of metadata (in JSON format)"
														},
														{
															"key": "files[]",
															"value": "[\"tempor eiusmod \",\"est in ullamco eiusmod esse\"]",
															"type": "text",
															"description": "(Required) "
														},
														{
															"key": "bucketId",
															"value": "97076417",
															"type": "text"
														},
														{
															"key": "bucketName",
															"value": "ut dolore culpa",
															"type": "text",
															"description": "Name of the bucket name (as an Edge Impulse name)"
														},
														{
															"key": "bucketPath",
															"value": "cillum consequat est amet",
															"type": "text",
															"description": "Optional path in the bucket to create this data item (files are created under this path)."
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/data/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"data",
														"add"
													],
													"variable": [
														{
															"id": "86566435-7791-49ad-a5cd-706e6e042cf5",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Add a new data item. You can add a maximum of 10000 files directly through this API. Use `addOrganizationDataFile` to add additional files. Don't trust the code generated by the widget, there are examples of using this API in Python, cURL and Node.js under the parameters."
											},
											"response": [
												{
													"id": "7a21ad22-79c0-4590-af11-37c7d732bc8b",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"description": "(Required) ",
																	"key": "name",
																	"value": "tempor mollit aute",
																	"type": "text"
																},
																{
																	"description": "(Required) ",
																	"key": "dataset",
																	"value": "Ut",
																	"type": "text"
																},
																{
																	"description": "(Required) Key-value pair of metadata (in JSON format)",
																	"key": "metadata",
																	"value": "nulla Lorem",
																	"type": "text"
																},
																{
																	"description": "(Required) ",
																	"key": "files[]",
																	"value": "[\"velit dolore irure\",\"eu esse\"]",
																	"type": "text"
																},
																{
																	"key": "bucketId",
																	"value": "-93161501",
																	"type": "text"
																},
																{
																	"description": "Name of the bucket name (as an Edge Impulse name)",
																	"key": "bucketName",
																	"value": "exercitation Excepteur incididunt",
																	"type": "text"
																},
																{
																	"description": "Optional path in the bucket to create this data item (files are created under this path).",
																	"key": "bucketPath",
																	"value": "sed",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/data/add",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"data",
																"add"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Add data items from bucket",
											"id": "efc4ce03-e1c3-4518-a078-3f849e7bd621",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dataset\": \"aliquip dolore\",\n  \"bucketId\": 47255459,\n  \"bucketPath\": \"sit ut anim aliqua\",\n  \"metadataDataset\": \"cupidatat mollit\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/data/add-folder",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"data",
														"add-folder"
													],
													"variable": [
														{
															"id": "8f599bd4-c0f0-4cda-b5f7-4b1c2547fb35",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Bulk adds data items that already exist in a storage bucket. The bucket path specified should contain folders. Each folder is added as a data item in Edge Impulse."
											},
											"response": [
												{
													"id": "065d7ae1-cb41-4d1b-959d-83f10001ca2c",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"dataset\": \"aliquip dolore\",\n  \"bucketId\": 47255459,\n  \"bucketPath\": \"sit ut anim aliqua\",\n  \"metadataDataset\": \"cupidatat mollit\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/data/add-folder",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"data",
																"add-folder"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
												}
											]
										},
										{
											"name": "Download data",
											"id": "bde38821-ba0d-45fa-81b5-84c11cc10a65",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/x-tar"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/data/download?dataset=activity data&dataIds=et sit&filter=dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"data",
														"download"
													],
													"query": [
														{
															"key": "dataset",
															"value": "activity data",
															"description": "Selected dataset"
														},
														{
															"key": "dataIds",
															"value": "et sit",
															"description": "(Required) Data IDs as an Array"
														},
														{
															"key": "filter",
															"value": "dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
															"description": "Data filter in SQL WHERE format, where you can reference 'dataset', 'bucket', 'name', 'total_file_count', 'total_file_size', 'created' and any metadata label through 'metadata->' (dots are replaced by underscore)."
														}
													],
													"variable": [
														{
															"id": "80a627d7-b84b-4e51-9651-961381faa7a5",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Download all data for selected data items. This function does not query the underlying bucket."
											},
											"response": [
												{
													"id": "7dd0d4d7-ecfc-49b0-a8ba-89152cac3fc7",
													"name": "TAR file",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/data/download?dataset=activity data&dataIds=et sit&filter=dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"data",
																"download"
															],
															"query": [
																{
																	"key": "dataset",
																	"value": "activity data"
																},
																{
																	"key": "dataIds",
																	"value": "et sit"
																},
																{
																	"key": "filter",
																	"value": "dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/x-tar"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "ipsum non sunt"
												}
											]
										},
										{
											"name": "Delete data",
											"id": "37504b0d-875c-48fe-a0bb-d75210fc8b78",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/data/delete?dataset=activity data&dataIds=et sit&filter=dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"data",
														"delete"
													],
													"query": [
														{
															"key": "dataset",
															"value": "activity data",
															"description": "Selected dataset"
														},
														{
															"key": "dataIds",
															"value": "et sit",
															"description": "(Required) Data IDs as an Array"
														},
														{
															"key": "filter",
															"value": "dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
															"description": "Data filter in SQL WHERE format, where you can reference 'dataset', 'bucket', 'name', 'total_file_count', 'total_file_size', 'created' and any metadata label through 'metadata->' (dots are replaced by underscore)."
														}
													],
													"variable": [
														{
															"id": "ed9c1ecb-dde1-49b3-be91-55880dcbf9d9",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Delete all data for selected data items. This removes all data in the underlying data bucket."
											},
											"response": [
												{
													"id": "4fd1455c-8741-41fc-84a9-e2d074454e3b",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/data/delete?dataset=activity data&dataIds=et sit&filter=dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"data",
																"delete"
															],
															"query": [
																{
																	"key": "dataset",
																	"value": "activity data"
																},
																{
																	"key": "dataIds",
																	"value": "et sit"
																},
																{
																	"key": "filter",
																	"value": "dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
												}
											]
										},
										{
											"name": "Clear checklist for data",
											"id": "a13dc7fd-4645-4cfe-a910-f2cde3022633",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/data/clear-checklist?dataset=activity data&dataIds=et sit&filter=dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"data",
														"clear-checklist"
													],
													"query": [
														{
															"key": "dataset",
															"value": "activity data",
															"description": "Selected dataset"
														},
														{
															"key": "dataIds",
															"value": "et sit",
															"description": "(Required) Data IDs as an Array"
														},
														{
															"key": "filter",
															"value": "dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
															"description": "Data filter in SQL WHERE format, where you can reference 'dataset', 'bucket', 'name', 'total_file_count', 'total_file_size', 'created' and any metadata label through 'metadata->' (dots are replaced by underscore)."
														}
													],
													"variable": [
														{
															"id": "a2be5fb8-c2e5-4589-bcba-fc6364ff90d3",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Clear all checklist flags for selected data items."
											},
											"response": [
												{
													"id": "be7d2499-3001-4673-844d-8ba164f8b17a",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/data/clear-checklist?dataset=activity data&dataIds=et sit&filter=dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"data",
																"clear-checklist"
															],
															"query": [
																{
																	"key": "dataset",
																	"value": "activity data"
																},
																{
																	"key": "dataIds",
																	"value": "et sit"
																},
																{
																	"key": "filter",
																	"value": "dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
												}
											]
										},
										{
											"name": "Change dataset",
											"id": "ddf4bf47-4e00-4eef-887d-9fe5726bbcbf",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"dataset\": \"sit non\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/data/change-dataset?dataset=activity data&dataIds=et sit&filter=dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"data",
														"change-dataset"
													],
													"query": [
														{
															"key": "dataset",
															"value": "activity data",
															"description": "Selected dataset"
														},
														{
															"key": "dataIds",
															"value": "et sit",
															"description": "(Required) Data IDs as an Array"
														},
														{
															"key": "filter",
															"value": "dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
															"description": "Data filter in SQL WHERE format, where you can reference 'dataset', 'bucket', 'name', 'total_file_count', 'total_file_size', 'created' and any metadata label through 'metadata->' (dots are replaced by underscore)."
														}
													],
													"variable": [
														{
															"id": "41d41e54-bd8a-4a9f-bcd2-dc650a663337",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Change the dataset for selected data items."
											},
											"response": [
												{
													"id": "0790514f-5873-4356-82cd-4b96930081de",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"dataset\": \"sit non\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/data/change-dataset?dataset=activity data&dataIds=et sit&filter=dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"data",
																"change-dataset"
															],
															"query": [
																{
																	"key": "dataset",
																	"value": "activity data"
																},
																{
																	"key": "dataIds",
																	"value": "et sit"
																},
																{
																	"key": "filter",
																	"value": "dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
												}
											]
										},
										{
											"name": "List files",
											"id": "1848acb3-eb2c-46c0-a2d1-7accf31747fa",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/data/files?dataset=activity data&filter=dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')&limit=49175899&offset=49175899",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"data",
														"files"
													],
													"query": [
														{
															"key": "dataset",
															"value": "activity data",
															"description": "Selected dataset"
														},
														{
															"key": "filter",
															"value": "dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')",
															"description": "Data filter in SQL WHERE format, where you can reference 'dataset', 'bucket', 'name', 'total_file_count', 'total_file_size', 'created' and any metadata label through 'metadata->' (dots are replaced by underscore)."
														},
														{
															"key": "limit",
															"value": "49175899",
															"description": "Maximum number of results"
														},
														{
															"key": "offset",
															"value": "49175899",
															"description": "Offset in results, can be used in conjunction with LimitResultsParameter to implement paging."
														}
													],
													"variable": [
														{
															"id": "51c387aa-20e1-45e0-b92a-2339178262a0",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Lists all files included by the filter."
											},
											"response": [
												{
													"id": "5d7de89e-2638-4fda-b4e3-bcada420ab32",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/data/files?dataset=activity data&filter=dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')&limit=49175899&offset=49175899",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"data",
																"files"
															],
															"query": [
																{
																	"key": "dataset",
																	"value": "activity data"
																},
																{
																	"key": "filter",
																	"value": "dataset = 'activity data' AND (label = 'running' OR metadata->user = 'Jan Jongboom')"
																},
																{
																	"key": "limit",
																	"value": "49175899"
																},
																{
																	"key": "offset",
																	"value": "49175899"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"data\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"bucketId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"bucketName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"bucketPath\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataset\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalFileCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalFileSize\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"files\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"bucketId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"bucketName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"bucketPath\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataset\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalFileCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalFileSize\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"files\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": false,\n  \"totalDataItemCount\": -84133004.37265976,\n  \"totalFileCount\": -24064386,\n  \"totalFileSize\": -29973040,\n  \"error\": \"nisi Duis \",\n  \"filterParseError\": \"ullamco esse voluptate tempor\"\n}"
												}
											]
										},
										{
											"name": "Refresh data",
											"id": "2eeed2a0-1a7d-4447-9a0c-06afa34ca454",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/data/refresh?dataset=activity data",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"data",
														"refresh"
													],
													"query": [
														{
															"key": "dataset",
															"value": "activity data",
															"description": "Selected dataset"
														}
													],
													"variable": [
														{
															"id": "d204f745-5ace-4c0f-bc24-e73facb320d1",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Update all data items. HEADs all underlying buckets to retrieve the last file information. Use this API after uploading data directly to S3."
											},
											"response": [
												{
													"id": "6f97dafa-7afc-43d2-8355-ef2ee91eb380",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/data/refresh?dataset=activity data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"data",
																"refresh"
															],
															"query": [
																{
																	"key": "dataset",
																	"value": "activity data"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
												}
											]
										},
										{
											"name": "Bulk update metadata",
											"id": "2c5191ba-ffd6-44fd-a5f1-70c48b776867",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "dataset",
															"value": "pariatur do ullamco exercitat",
															"type": "text",
															"description": "(Required) "
														},
														{
															"key": "csvFile",
															"type": "file",
															"description": "(Required) ",
															"value": null
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/data/bulk-metadata",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"data",
														"bulk-metadata"
													],
													"variable": [
														{
															"id": "f91c70e7-1be5-466e-ae83-58664b8702de",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Bulk update the metadata of many data items in one go. This requires you to submit a CSV file with headers, one of which the columns should be named 'name'. The other columns are used as metadata keys."
											},
											"response": [
												{
													"id": "ab110167-6abe-4d3a-ad5d-36b6b5d0b77f",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"description": "(Required) ",
																	"key": "dataset",
																	"value": "pariatur do ullamco exercitat",
																	"type": "text"
																},
																{
																	"description": "(Required) ",
																	"key": "csvFile",
																	"type": "file"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/data/bulk-metadata",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"data",
																"bulk-metadata"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
												}
											]
										}
									],
									"id": "8a936463-606c-49be-8110-e7e34ebf66d4"
								},
								{
									"name": "dataset/{dataset}",
									"item": [
										{
											"name": "Get dataset",
											"id": "5c8e15c0-6a83-480a-8033-899bbe84ea02",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/dataset/:dataset",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"dataset",
														":dataset"
													],
													"variable": [
														{
															"id": "6f52952a-6e77-41cb-a489-74387ddd6aef",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														},
														{
															"id": "480257da-a615-4fb6-8944-4dac0706ef36",
															"key": "dataset",
															"value": "ipsum non sunt",
															"description": "(Required) Dataset name"
														}
													]
												},
												"description": "Get information about a dataset"
											},
											"response": [
												{
													"id": "5e961cf9-b483-4999-9a99-388a5b1495fe",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/dataset/:dataset",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"dataset",
																":dataset"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "dataset",
																	"value": "ipsum non sunt",
																	"description": "(Required) Dataset name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"dataset\": {\n    \"dataset\": \"ut laboris nulla aute\",\n    \"lastFileCreated\": \"2017-10-24T01:50:16.621Z\",\n    \"totalFileSize\": 71071827,\n    \"totalFileCount\": -96692048,\n    \"tags\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"category\": \"ipsum Lorem dolor\"\n  },\n  \"success\": false,\n  \"error\": \"exercitation amet nulla culpa\"\n}"
												}
											]
										},
										{
											"name": "Update dataset",
											"id": "0484e5cf-16e3-44b1-97aa-132031d19bdf",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tags\": [\n    \"nulla non\",\n    \"cupidatat dolor laborum\"\n  ],\n  \"category\": \"Excepteur\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/dataset/:dataset",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"dataset",
														":dataset"
													],
													"variable": [
														{
															"id": "9301c011-8a94-4075-952e-5733808196e5",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														},
														{
															"id": "eeac4a58-9070-4d50-b78b-43796c3536e1",
															"key": "dataset",
															"value": "ipsum non sunt",
															"description": "(Required) Dataset name"
														}
													]
												},
												"description": "Set information about a dataset"
											},
											"response": [
												{
													"id": "8a6daca3-af96-4717-b085-e2a66932195e",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"tags\": [\n    \"Lorem elit laboris\",\n    \"occaecat nisi aute dolor\"\n  ],\n  \"category\": \"consectetur elit eiusmod\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/dataset/:dataset",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"dataset",
																":dataset"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "dataset",
																	"value": "ipsum non sunt",
																	"description": "(Required) Dataset name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										},
										{
											"name": "Hide dataset",
											"id": "59cb4ffa-ede2-4009-a1bb-ea6bc103d374",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/dataset/:dataset/hide",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"dataset",
														":dataset",
														"hide"
													],
													"variable": [
														{
															"id": "fa70571b-c0df-4606-9851-b19bcd512182",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														},
														{
															"id": "18e94ae1-a872-4158-b8a6-05c7546c6d20",
															"key": "dataset",
															"value": "ipsum non sunt",
															"description": "(Required) Dataset name"
														}
													]
												},
												"description": "Hide a dataset (does not remove underlying data)"
											},
											"response": [
												{
													"id": "4edd91dd-f4ff-4c36-9f8c-aa4d534ef8d3",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/dataset/:dataset/hide",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"dataset",
																":dataset",
																"hide"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "dataset",
																	"value": "ipsum non sunt",
																	"description": "(Required) Dataset name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										}
									],
									"id": "62744924-8d02-45d5-a8f4-cc08213cb86f"
								},
								{
									"name": "create-project",
									"item": [
										{
											"name": "{create Project Id}",
											"item": [
												{
													"name": "transform",
													"item": [
														{
															"name": "Retry failed transform jobs",
															"id": "9b20ba46-9220-4e0e-b239-304a8f1e4e22",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project/:createProjectId/transform/retry",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"create-project",
																		":createProjectId",
																		"transform",
																		"retry"
																	],
																	"variable": [
																		{
																			"id": "900a8b48-32a7-4a48-ba04-18a2664b5ad5",
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"id": "680cd932-0323-441b-8de5-4e0bdb032863",
																			"key": "createProjectId",
																			"value": "49175899",
																			"description": "(Required) Create project job ID."
																		}
																	]
																},
																"description": "Retry all failed transform job from a transformation job. Only jobs that have failed will be retried."
															},
															"response": [
																{
																	"id": "2c3d0b13-58e1-4d11-940f-1151feece685",
																	"name": "OK",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "x-api-key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project/:createProjectId/transform/retry",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"organizations",
																				":organizationId",
																				"create-project",
																				":createProjectId",
																				"transform",
																				"retry"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "49175899",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "createProjectId",
																					"value": "49175899",
																					"description": "(Required) Create project job ID."
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
																}
															]
														},
														{
															"name": "Clear failed transform jobs",
															"id": "4413d12b-c4b0-41f3-a450-ec941b655166",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project/:createProjectId/transform/clear",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"create-project",
																		":createProjectId",
																		"transform",
																		"clear"
																	],
																	"variable": [
																		{
																			"id": "489b9686-d51a-4512-9ca2-d68462b07d2e",
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"id": "1e8f57db-b452-46e5-a012-530371d527e1",
																			"key": "createProjectId",
																			"value": "49175899",
																			"description": "(Required) Create project job ID."
																		}
																	]
																},
																"description": "Clear all failed transform job from a create project job. Only jobs that have failed will be cleared."
															},
															"response": [
																{
																	"id": "80acc853-e577-439a-aaa5-8118b44c5f47",
																	"name": "OK",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "x-api-key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project/:createProjectId/transform/clear",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"organizations",
																				":organizationId",
																				"create-project",
																				":createProjectId",
																				"transform",
																				"clear"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "49175899",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "createProjectId",
																					"value": "49175899",
																					"description": "(Required) Create project job ID."
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
																}
															]
														}
													],
													"id": "f6ae3ceb-b312-46fe-ad4b-70459d6dbc18"
												},
												{
													"name": "files/{create Project File Id}",
													"item": [
														{
															"name": "Delete create project file",
															"id": "6920c50e-b7eb-41a6-a766-c29dd1f33b6c",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project/:createProjectId/files/:createProjectFileId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"create-project",
																		":createProjectId",
																		"files",
																		":createProjectFileId"
																	],
																	"variable": [
																		{
																			"id": "47c882ee-889e-40a3-b7c7-1deee33b9db6",
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"id": "d5807776-8a39-4504-8dec-4ed33ff40938",
																			"key": "createProjectId",
																			"value": "49175899",
																			"description": "(Required) Create project job ID."
																		},
																		{
																			"id": "b55bfcbf-1be7-460c-9b66-132038df8ba3",
																			"key": "createProjectFileId",
																			"value": "49175899",
																			"description": "(Required) Create project job file ID."
																		}
																	]
																},
																"description": "Remove a file from a create project job. Only files for which no jobs are running can be deleted."
															},
															"response": [
																{
																	"id": "9eb554f0-5552-4509-a68b-5ecefa5a7463",
																	"name": "OK",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "x-api-key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project/:createProjectId/files/:createProjectFileId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"organizations",
																				":organizationId",
																				"create-project",
																				":createProjectId",
																				"files",
																				":createProjectFileId"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "49175899",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "createProjectId",
																					"value": "49175899",
																					"description": "(Required) Create project job ID."
																				},
																				{
																					"key": "createProjectFileId",
																					"value": "49175899",
																					"description": "(Required) Create project job file ID."
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
																}
															]
														},
														{
															"name": "Retry transformation file",
															"id": "970712ae-0983-4dbc-91d4-2977b00d4f45",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project/:createProjectId/files/:createProjectFileId/retry",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"create-project",
																		":createProjectId",
																		"files",
																		":createProjectFileId",
																		"retry"
																	],
																	"variable": [
																		{
																			"id": "529382af-470f-4a57-93b4-1ecf06f8a14a",
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"id": "76159b3d-0624-4c28-b511-3e2079316e68",
																			"key": "createProjectId",
																			"value": "49175899",
																			"description": "(Required) Create project job ID."
																		},
																		{
																			"id": "76eb77ac-0b6c-4053-b587-0f502554a963",
																			"key": "createProjectFileId",
																			"value": "49175899",
																			"description": "(Required) Create project job file ID."
																		}
																	]
																},
																"description": "Retry a transformation action on a file from a transformation job. Only files that have failed can be retried."
															},
															"response": [
																{
																	"id": "d62bdee0-63e5-470a-bf2b-28f46a162554",
																	"name": "OK",
																	"originalRequest": {
																		"method": "POST",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "x-api-key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project/:createProjectId/files/:createProjectFileId/retry",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"organizations",
																				":organizationId",
																				"create-project",
																				":createProjectId",
																				"files",
																				":createProjectFileId",
																				"retry"
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "49175899",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "createProjectId",
																					"value": "49175899",
																					"description": "(Required) Create project job ID."
																				},
																				{
																					"key": "createProjectFileId",
																					"value": "49175899",
																					"description": "(Required) Create project job file ID."
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
																}
															]
														}
													],
													"id": "73ffdff8-314c-4fc9-8d24-ba693f3e5170"
												},
												{
													"name": "Get transformation job status",
													"id": "0f694767-a93d-4450-bf06-5444bb94605a",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project/:createProjectId?transformLimit=49175899&transformOffset=49175899&selection=ipsum non sunt",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"create-project",
																":createProjectId"
															],
															"query": [
																{
																	"key": "transformLimit",
																	"value": "49175899",
																	"description": "(Required) Maximum number of results of transformation jobs"
																},
																{
																	"key": "transformOffset",
																	"value": "49175899",
																	"description": "(Required) Offset in results of transformation jobs, can be used in conjunction with TransformLimitResultsParameter to implement paging."
																},
																{
																	"key": "selection",
																	"value": "ipsum non sunt",
																	"description": "Type of selected rows, either 'all', 'created', 'in-progress' or 'failed' (defaults to 'all')"
																}
															],
															"variable": [
																{
																	"id": "bdf245a4-9801-47c9-b88f-e037fefd4849",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "a1bdad2c-3b0e-4e86-b781-1b25bdfac39b",
																	"key": "createProjectId",
																	"value": "49175899",
																	"description": "(Required) Create project job ID."
																}
															]
														},
														"description": "Get the current status of a transformation job job."
													},
													"response": [
														{
															"id": "67f7c46d-ac53-4c51-8a0a-0ebe827c8ab0",
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project/:createProjectId?transformLimit=49175899&transformOffset=49175899&selection=ipsum non sunt",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"create-project",
																		":createProjectId"
																	],
																	"query": [
																		{
																			"key": "transformLimit",
																			"value": "49175899"
																		},
																		{
																			"key": "transformOffset",
																			"value": "49175899"
																		},
																		{
																			"key": "selection",
																			"value": "ipsum non sunt"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "createProjectId",
																			"value": "49175899",
																			"description": "(Required) Create project job ID."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": false,\n  \"error\": \"adipisicing amet cupidatat\",\n  \"status\": {\n    \"id\": -23879469,\n    \"organizationId\": 56242279,\n    \"name\": \"dolor pariatur consectetur exercitation\",\n    \"status\": \"waiting\",\n    \"transformJobStatus\": \"created\",\n    \"uploadJobStatus\": \"failed\",\n    \"uploadType\": \"project\",\n    \"category\": \"split\",\n    \"created\": \"2006-07-11T11:55:20.268Z\",\n    \"totalDownloadFileCount\": 94192886,\n    \"totalDownloadFileSize\": -17214295,\n    \"totalDownloadFileSizeString\": \"aute\",\n    \"totalUploadFileCount\": 79301613,\n    \"transformationParallel\": 57622251,\n    \"transformationSummary\": {\n      \"startedCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"succeededCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finishedCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalFileCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"files\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"inProgress\": false,\n    \"operatesOn\": \"file\",\n    \"uploadJobId\": -87208241,\n    \"uploadJobFilesUploaded\": -89534747,\n    \"projectOwner\": \"in eiusmod\",\n    \"projectId\": -50935652,\n    \"projectName\": \"qui commodo cupidatat reprehenderit et\",\n    \"transformationBlockId\": 95794206,\n    \"builtinTransformationBlock\": {},\n    \"transformationBlockName\": \"exercitation in\",\n    \"outputDatasetName\": \"sint qui eiusmod ut veniam\",\n    \"label\": \"eu ullamco tempor magna\",\n    \"filterQuery\": \"dolore id voluptate aliquip velit\",\n    \"emailRecipientUids\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"pipelineId\": 3158661,\n    \"pipelineName\": \"id mollit ea ad nostrud\",\n    \"pipelineRunId\": 96705648,\n    \"pipelineStep\": -40367911\n  }\n}"
														}
													]
												},
												{
													"name": "Update transformation job",
													"id": "f3368b6c-907c-419d-a2d4-de6917e43e7c",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"transformationParallel\": 27952742,\n  \"emailRecipientUids\": [\n    72573567.73309535,\n    71812434.48305961\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project/:createProjectId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"create-project",
																":createProjectId"
															],
															"variable": [
																{
																	"id": "c94f4e96-d745-4328-a359-6cd2a593a9c3",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "80bddbd0-3a2a-4d4b-9de1-98b29e9a1c32",
																	"key": "createProjectId",
																	"value": "49175899",
																	"description": "(Required) Create project job ID."
																}
															]
														},
														"description": "Update the properties of a transformation job."
													},
													"response": [
														{
															"id": "a41aa5f1-08ad-4906-b448-e32b7d2dc5bd",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"transformationParallel\": 16398379,\n  \"emailRecipientUids\": [\n    -87288129.40814094,\n    -6127783.098891422\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project/:createProjectId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"create-project",
																		":createProjectId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "createProjectId",
																			"value": "49175899",
																			"description": "(Required) Create project job ID."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												},
												{
													"name": "Delete transformation job",
													"id": "cd55a1ba-ff3e-4e61-9dd6-6ded3fa8686f",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project/:createProjectId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"create-project",
																":createProjectId"
															],
															"variable": [
																{
																	"id": "73cadac0-74bd-4c0e-a920-d1008cb7088e",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "3680f33c-f69b-43a1-a682-1173f71ca975",
																	"key": "createProjectId",
																	"value": "49175899",
																	"description": "(Required) Create project job ID."
																}
															]
														},
														"description": "Remove a transformation job. This will stop all running jobs."
													},
													"response": [
														{
															"id": "a426aa89-67b6-4ce7-af09-e322ed6920dd",
															"name": "OK",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project/:createProjectId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"create-project",
																		":createProjectId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "createProjectId",
																			"value": "49175899",
																			"description": "(Required) Create project job ID."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												},
												{
													"name": "Retry transformation upload job",
													"id": "215a4616-81c4-4e2d-9223-9a5f7b3578af",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project/:createProjectId/upload/retry",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"create-project",
																":createProjectId",
																"upload",
																"retry"
															],
															"variable": [
																{
																	"id": "8b8a4e58-8ee3-4b66-8d55-5097c5936191",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "a446d681-9eda-4c2a-aa35-effafb70e4a6",
																	"key": "createProjectId",
																	"value": "49175899",
																	"description": "(Required) Create project job ID."
																}
															]
														},
														"description": "Retry the upload job from a transformation job. Only jobs that have failed can be retried."
													},
													"response": [
														{
															"id": "b66d6fa6-4735-46ce-a0be-6c9296f0136f",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project/:createProjectId/upload/retry",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"create-project",
																		":createProjectId",
																		"upload",
																		"retry"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "createProjectId",
																			"value": "49175899",
																			"description": "(Required) Create project job ID."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												}
											],
											"id": "e2ca3203-430d-463a-b7cc-4684511bdb1a"
										},
										{
											"name": "List transformation jobs",
											"id": "a8fe2115-f4f6-45a7-881a-9c6113d9cc21",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project?limit=49175899&offset=49175899",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"create-project"
													],
													"query": [
														{
															"key": "limit",
															"value": "49175899",
															"description": "Maximum number of results"
														},
														{
															"key": "offset",
															"value": "49175899",
															"description": "Offset in results, can be used in conjunction with LimitResultsParameter to implement paging."
														}
													],
													"variable": [
														{
															"id": "da9f4a47-3cac-49ab-80a9-30f6b29a8edc",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Get list of transformation jobs."
											},
											"response": [
												{
													"id": "baaea0e7-73a5-4cb6-a1a8-b7f294f706d7",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project?limit=49175899&offset=49175899",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"create-project"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "49175899"
																},
																{
																	"key": "offset",
																	"value": "49175899"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"jobs\": [\n    {\n      \"id\": -33437273,\n      \"name\": \"p\",\n      \"transformJobStatus\": \"failed\",\n      \"uploadJobStatus\": \"waiting\",\n      \"uploadType\": \"dataset\",\n      \"created\": \"2016-01-25T23:01:26.677Z\",\n      \"totalDownloadFileCount\": 65044405,\n      \"totalDownloadFileSize\": -9687552,\n      \"totalDownloadFileSizeString\": \"in aute\",\n      \"organizationId\": 3464613,\n      \"uploadJobId\": 87073472,\n      \"projectOwner\": \"occaecat sint pariatur\",\n      \"projectId\": -18870823,\n      \"projectName\": \"incididunt qui\",\n      \"transformationBlockId\": -45660377,\n      \"builtinTransformationBlock\": {},\n      \"transformationBlockName\": \"ullamco reprehenderit adipisicing\",\n      \"outputDatasetName\": \"occaecat cillum\",\n      \"totalUploadFileCount\": -7796028\n    },\n    {\n      \"id\": -15147141,\n      \"name\": \"quis\",\n      \"transformJobStatus\": \"finished\",\n      \"uploadJobStatus\": \"failed\",\n      \"uploadType\": \"dataset\",\n      \"created\": \"1954-05-15T23:09:35.669Z\",\n      \"totalDownloadFileCount\": 70388783,\n      \"totalDownloadFileSize\": 1912252,\n      \"totalDownloadFileSizeString\": \"in \",\n      \"organizationId\": 5007839,\n      \"uploadJobId\": 18930853,\n      \"projectOwner\": \"culpa\",\n      \"projectId\": 72925531,\n      \"projectName\": \"ad est qui\",\n      \"transformationBlockId\": 13504066,\n      \"builtinTransformationBlock\": {},\n      \"transformationBlockName\": \"nisi Duis co\",\n      \"outputDatasetName\": \"velit eiusmod non\",\n      \"totalUploadFileCount\": 7373081\n    }\n  ],\n  \"success\": true,\n  \"totalJobCount\": -69362507,\n  \"error\": \"quis in laboris\"\n}"
												}
											]
										},
										{
											"name": "Start transformation job",
											"id": "e704abbc-6772-4c27-b579-76844fc385aa",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"laborum commodo adipisicin\",\n  \"filter\": \"ut\",\n  \"uploadType\": \"dataset\",\n  \"projectId\": 63533877,\n  \"newProjectName\": \"anim commodo\",\n  \"projectApiKey\": \"tempor aute\",\n  \"projectHmacKey\": \"ut in tempor velit dolore\",\n  \"transformationBlockId\": 55541340,\n  \"builtinTransformationBlock\": {},\n  \"category\": \"split\",\n  \"outputDatasetName\": \"enim dolore ipsum Duis\",\n  \"label\": \"Duis quis i\",\n  \"emailRecipientUids\": [\n    -96919746.35225193,\n    61259140.98761761\n  ],\n  \"transformationParallel\": -65776459,\n  \"extraCliArguments\": \"deserunt nulla commodo\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"create-project"
													],
													"variable": [
														{
															"id": "470735e7-58c1-4f72-aa5a-ffa98820457c",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Start a transformation job to fetch data from the organization and put it in a project, or transform into new data."
											},
											"response": [
												{
													"id": "d0f759f3-54bc-4be1-965c-6d8cdcc8289e",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"laborum sunt in\",\n  \"filter\": \"culpa exercitation eu sed\",\n  \"uploadType\": \"dataset\",\n  \"projectId\": 31714843,\n  \"newProjectName\": \"esse\",\n  \"projectApiKey\": \"dolor fugiat\",\n  \"projectHmacKey\": \"amet est\",\n  \"transformationBlockId\": 37886517,\n  \"builtinTransformationBlock\": {},\n  \"category\": \"split\",\n  \"outputDatasetName\": \"proident tempor enim\",\n  \"label\": \"voluptate dolore Excepteur\",\n  \"emailRecipientUids\": [\n    -89213269.49541003,\n    -58596716.57028787\n  ],\n  \"transformationParallel\": -55423725,\n  \"extraCliArguments\": \"magna in\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/create-project",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"create-project"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": false,\n  \"error\": \"dolor ad esse sed et\",\n  \"createProjectId\": -44129193\n}"
												}
											]
										}
									],
									"id": "15d78e79-7a61-41b1-898d-2fe3c3f816cf"
								},
								{
									"name": "transformation",
									"item": [
										{
											"name": "{transformation Id}",
											"item": [
												{
													"name": "Update transformation block",
													"id": "6f9b5b4d-de61-439c-8635-930a441325c7",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"consectetur elit sit cupidatat\",\n  \"dockerContainer\": \"ex non adipisicing culpa\",\n  \"indMetadata\": true,\n  \"description\": \"aliquip magna\",\n  \"cliArguments\": \"officia nostrud qui elit\",\n  \"requestsCpu\": 5004151.307430193,\n  \"requestsMemory\": 70189550,\n  \"limitsCpu\": -39306799.31304719,\n  \"limitsMemory\": 95219906,\n  \"additionalMountPoints\": [\n    {\n      \"type\": \"portal\",\n      \"mountPoint\": \"cupidatat elit esse officia\",\n      \"bucketId\": -43940730,\n      \"portalId\": 46879271\n    },\n    {\n      \"type\": \"portal\",\n      \"mountPoint\": \"sint ut\",\n      \"bucketId\": -57313716,\n      \"portalId\": 99607059\n    }\n  ],\n  \"operatesOn\": \"dataitem\",\n  \"allowExtraCliArguments\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/transformation/:transformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"transformation",
																":transformationId"
															],
															"variable": [
																{
																	"id": "870942f0-6a57-4a43-87ca-a91029c6efb1",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "63f02fef-dda3-4347-986c-d5d28356e9ea",
																	"key": "transformationId",
																	"value": "49175899",
																	"description": "(Required) Transformation block ID."
																}
															]
														},
														"description": "Updates a transformation block. Only values in the body will be updated."
													},
													"response": [
														{
															"id": "da314427-1081-499c-bbd6-d1a837fff86c",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"incididunt magna minim consequat\",\n  \"dockerContainer\": \"laboris voluptate sed\",\n  \"indMetadata\": true,\n  \"description\": \"magna laboris amet\",\n  \"cliArguments\": \"est laboris cupidatat\",\n  \"requestsCpu\": -70896754.97796151,\n  \"requestsMemory\": 72390993,\n  \"limitsCpu\": 56480913.67138773,\n  \"limitsMemory\": -17382264,\n  \"additionalMountPoints\": [\n    {\n      \"type\": \"portal\",\n      \"mountPoint\": \"esse est eu anim\",\n      \"bucketId\": -20952208,\n      \"portalId\": 91208942\n    },\n    {\n      \"type\": \"portal\",\n      \"mountPoint\": \"incididunt\",\n      \"bucketId\": 64216263,\n      \"portalId\": 49546888\n    }\n  ],\n  \"operatesOn\": \"dataitem\",\n  \"allowExtraCliArguments\": false\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/transformation/:transformationId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"transformation",
																		":transformationId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "transformationId",
																			"value": "49175899",
																			"description": "(Required) Transformation block ID."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												},
												{
													"name": "Delete transformation block",
													"id": "7b3ff09f-655b-4770-94b2-826d3958bd6b",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/transformation/:transformationId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"transformation",
																":transformationId"
															],
															"variable": [
																{
																	"id": "be3c2347-1c98-4b6c-b2b4-c346667a473a",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "c4abcaa2-db25-4ad4-b932-df1b7372c88d",
																	"key": "transformationId",
																	"value": "49175899",
																	"description": "(Required) Transformation block ID."
																}
															]
														},
														"description": "Deletes a transformation block."
													},
													"response": [
														{
															"id": "05e42925-d177-482f-af11-e3ec8ff4e7a1",
															"name": "OK",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/transformation/:transformationId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"transformation",
																		":transformationId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "transformationId",
																			"value": "49175899",
																			"description": "(Required) Transformation block ID."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												}
											],
											"id": "0ccf875a-b010-440d-a082-afa197ee154c"
										},
										{
											"name": "Get transformation blocks",
											"id": "08f76c01-f60d-470a-886b-396b3173de39",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/transformation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"transformation"
													],
													"variable": [
														{
															"id": "c536368b-5b00-4340-a5ac-25c5d2da0fe4",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Retrieve all transformation blocks."
											},
											"response": [
												{
													"id": "d28f3a06-77b6-459b-9e6f-c7f62103df9b",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/transformation",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"transformation"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"transformationBlocks\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dockerContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dockerContainerManagedByEdgeImpulse\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cliArguments\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"indMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"additionalMountPoints\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"operatesOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowExtraCliArguments\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestsCpu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestsMemory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"limitsCpu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"limitsMemory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dockerContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dockerContainerManagedByEdgeImpulse\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cliArguments\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"indMetadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"additionalMountPoints\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"operatesOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"allowExtraCliArguments\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestsCpu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestsMemory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"limitsCpu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"limitsMemory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"error\": \"Lorem aute\"\n}"
												}
											]
										},
										{
											"name": "Add transformation block",
											"id": "e161ffbf-718d-43a6-982f-969af84febb9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"veniam sint do reprehenderit incididunt\",\n  \"dockerContainer\": \"est anim in\",\n  \"indMetadata\": false,\n  \"description\": \"labore culpa nisi\",\n  \"cliArguments\": \"aliqua sunt Lorem\",\n  \"additionalMountPoints\": [\n    {\n      \"type\": \"portal\",\n      \"mountPoint\": \"ad nulla minim id\",\n      \"bucketId\": 34154828,\n      \"portalId\": 96388090\n    },\n    {\n      \"type\": \"portal\",\n      \"mountPoint\": \"occaecat\",\n      \"bucketId\": -95960126,\n      \"portalId\": -12767743\n    }\n  ],\n  \"operatesOn\": \"standalone\",\n  \"requestsCpu\": -54158080.06641405,\n  \"requestsMemory\": 33105585,\n  \"limitsCpu\": 32896201.019964263,\n  \"limitsMemory\": 83550381,\n  \"allowExtraCliArguments\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/transformation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"transformation"
													],
													"variable": [
														{
															"id": "0f8933cd-5d5b-4753-b451-3e6bd57c7370",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Adds a transformation block."
											},
											"response": [
												{
													"id": "5391d572-4f5e-4c1a-86a2-c08c88d0fa41",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"laborum culpa\",\n  \"dockerContainer\": \"incididunt su\",\n  \"indMetadata\": true,\n  \"description\": \"aute quis\",\n  \"cliArguments\": \"commodo quis veniam laborum n\",\n  \"additionalMountPoints\": [\n    {\n      \"type\": \"portal\",\n      \"mountPoint\": \"minim id officia\",\n      \"bucketId\": -61223236,\n      \"portalId\": 77226061\n    },\n    {\n      \"type\": \"bucket\",\n      \"mountPoint\": \"labore Excepteur sed anim\",\n      \"bucketId\": -43326780,\n      \"portalId\": 18589814\n    }\n  ],\n  \"operatesOn\": \"file\",\n  \"requestsCpu\": 49312242.44994792,\n  \"requestsMemory\": -85393106,\n  \"limitsCpu\": -31512111.860703215,\n  \"limitsMemory\": 3938615,\n  \"allowExtraCliArguments\": true\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/transformation",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"transformation"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 84076932,\n  \"success\": false,\n  \"error\": \"ea est aliqua aute\"\n}"
												}
											]
										}
									],
									"id": "457edc81-e68d-4593-b6fb-7cc9db4bc382"
								},
								{
									"name": "deploy",
									"item": [
										{
											"name": "{deploy Id}",
											"item": [
												{
													"name": "Update deploy block",
													"id": "1d524bfa-80aa-408d-9a7b-2b40821a51ab",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "multipart/form-data"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "name",
																	"value": "ut ipsum volup",
																	"type": "text"
																},
																{
																	"key": "dockerContainer",
																	"value": "Excepteur",
																	"type": "text"
																},
																{
																	"key": "description",
																	"value": "ex",
																	"type": "text"
																},
																{
																	"key": "cliArguments",
																	"value": "amet proident do in",
																	"type": "text"
																},
																{
																	"key": "requestsCpu",
																	"value": "-2736574.5992105007",
																	"type": "text"
																},
																{
																	"key": "requestsMemory",
																	"value": "-11122028",
																	"type": "text"
																},
																{
																	"key": "limitsCpu",
																	"value": "-28776283.37630132",
																	"type": "text"
																},
																{
																	"key": "limitsMemory",
																	"value": "93277952",
																	"type": "text"
																},
																{
																	"key": "photo",
																	"type": "file",
																	"value": null
																},
																{
																	"key": "integrateUrl",
																	"value": "labore",
																	"type": "text"
																},
																{
																	"key": "privileged",
																	"value": "false",
																	"type": "text"
																},
																{
																	"key": "mountLearnBlock",
																	"value": "false",
																	"type": "text"
																},
																{
																	"key": "supportsEonCompiler",
																	"value": "false",
																	"type": "text"
																},
																{
																	"key": "showOptimizations",
																	"value": "true",
																	"type": "text"
																},
																{
																	"key": "category",
																	"value": "firmware",
																	"type": "text",
																	"description": " (This can only be one of library,firmware)"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/deploy/:deployId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"deploy",
																":deployId"
															],
															"variable": [
																{
																	"id": "b2600b8e-bf6a-44de-baa7-5aa3768ffdf2",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "48129e0c-f77d-4230-800f-042cb78e2543",
																	"key": "deployId",
																	"value": "49175899",
																	"description": "(Required) Deploy block ID."
																}
															]
														},
														"description": "Updates a deploy block. Only values in the body will be updated."
													},
													"response": [
														{
															"id": "fe820cb5-78d5-4272-8331-340e84af7c82",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "formdata",
																	"formdata": [
																		{
																			"key": "name",
																			"value": "ut ipsum volup",
																			"type": "text"
																		},
																		{
																			"key": "dockerContainer",
																			"value": "Excepteur",
																			"type": "text"
																		},
																		{
																			"key": "description",
																			"value": "ex",
																			"type": "text"
																		},
																		{
																			"key": "cliArguments",
																			"value": "amet proident do in",
																			"type": "text"
																		},
																		{
																			"key": "requestsCpu",
																			"value": "-2736574.5992105007",
																			"type": "text"
																		},
																		{
																			"key": "requestsMemory",
																			"value": "-11122028",
																			"type": "text"
																		},
																		{
																			"key": "limitsCpu",
																			"value": "-28776283.37630132",
																			"type": "text"
																		},
																		{
																			"key": "limitsMemory",
																			"value": "93277952",
																			"type": "text"
																		},
																		{
																			"key": "photo",
																			"type": "file"
																		},
																		{
																			"key": "integrateUrl",
																			"value": "labore",
																			"type": "text"
																		},
																		{
																			"key": "privileged",
																			"value": "false",
																			"type": "text"
																		},
																		{
																			"key": "mountLearnBlock",
																			"value": "false",
																			"type": "text"
																		},
																		{
																			"key": "supportsEonCompiler",
																			"value": "false",
																			"type": "text"
																		},
																		{
																			"key": "showOptimizations",
																			"value": "true",
																			"type": "text"
																		},
																		{
																			"description": " (This can only be one of library,firmware)",
																			"key": "category",
																			"value": "firmware",
																			"type": "text"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/deploy/:deployId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"deploy",
																		":deployId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "deployId",
																			"value": "49175899",
																			"description": "(Required) Deploy block ID."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												},
												{
													"name": "Delete deploy block",
													"id": "7d4e3c5f-6a9c-48a8-be8f-d731b9947152",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/deploy/:deployId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"deploy",
																":deployId"
															],
															"variable": [
																{
																	"id": "01b5ff4a-ff43-4d24-b11b-6d80e31058d3",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "f207698c-3a6a-4bdc-8529-1ac53269acc1",
																	"key": "deployId",
																	"value": "49175899",
																	"description": "(Required) Deploy block ID."
																}
															]
														},
														"description": "Deletes a deploy block."
													},
													"response": [
														{
															"id": "87ba9185-4f20-4cac-93fa-4418aac92a2e",
															"name": "OK",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/deploy/:deployId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"deploy",
																		":deployId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "deployId",
																			"value": "49175899",
																			"description": "(Required) Deploy block ID."
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												}
											],
											"id": "95d506dd-c415-441a-8af9-9cd2363db1ec"
										},
										{
											"name": "Get deploy blocks",
											"id": "64d1650b-1045-4a10-aba3-d2f160790b21",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/deploy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"deploy"
													],
													"variable": [
														{
															"id": "f743f512-8ff9-4c8c-89fb-7dcdcc632f7f",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Retrieve all deploy blocks."
											},
											"response": [
												{
													"id": "a6da7b67-1ffa-41b3-b941-e613cbe118c4",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/deploy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"deploy"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"deployBlocks\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dockerContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dockerContainerManagedByEdgeImpulse\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cliArguments\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"photo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"privileged\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mountLearnBlock\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"supportsEonCompiler\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"showOptimizations\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestsCpu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestsMemory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"limitsCpu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"limitsMemory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"integrateUrl\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dockerContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dockerContainerManagedByEdgeImpulse\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"cliArguments\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"photo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"privileged\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"mountLearnBlock\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"supportsEonCompiler\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"showOptimizations\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestsCpu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestsMemory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"limitsCpu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"limitsMemory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"integrateUrl\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"error\": \"ullamco elit\"\n}"
												}
											]
										},
										{
											"name": "Add deploy block",
											"id": "ead5c927-4c9c-4cea-b78a-eee55a8f3cc0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "name",
															"value": "eu si",
															"type": "text",
															"description": "(Required) "
														},
														{
															"key": "dockerContainer",
															"value": "enim dolor nulla",
															"type": "text",
															"description": "(Required) "
														},
														{
															"key": "description",
															"value": "consequat veniam",
															"type": "text",
															"description": "(Required) "
														},
														{
															"key": "cliArguments",
															"value": "officia quis in exe",
															"type": "text",
															"description": "(Required) "
														},
														{
															"key": "requestsCpu",
															"value": "-7623096.669693783",
															"type": "text"
														},
														{
															"key": "requestsMemory",
															"value": "-76301776",
															"type": "text"
														},
														{
															"key": "limitsCpu",
															"value": "-74059608.8901095",
															"type": "text"
														},
														{
															"key": "limitsMemory",
															"value": "1140855",
															"type": "text"
														},
														{
															"key": "photo",
															"type": "file",
															"value": null
														},
														{
															"key": "integrateUrl",
															"value": "irure proident sit ad velit",
															"type": "text"
														},
														{
															"key": "privileged",
															"value": "true",
															"type": "text"
														},
														{
															"key": "mountLearnBlock",
															"value": "false",
															"type": "text"
														},
														{
															"key": "supportsEonCompiler",
															"value": "false",
															"type": "text"
														},
														{
															"key": "showOptimizations",
															"value": "false",
															"type": "text"
														},
														{
															"key": "category",
															"value": "firmware",
															"type": "text",
															"description": " (This can only be one of library,firmware)"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/deploy",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"deploy"
													],
													"variable": [
														{
															"id": "0d8fc66d-e607-4f46-a803-77bb7e6de3fa",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Adds a deploy block."
											},
											"response": [
												{
													"id": "72ec8c00-75aa-4ce2-9698-86f77408eaea",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"description": "(Required) ",
																	"key": "name",
																	"value": "eu si",
																	"type": "text"
																},
																{
																	"description": "(Required) ",
																	"key": "dockerContainer",
																	"value": "enim dolor nulla",
																	"type": "text"
																},
																{
																	"description": "(Required) ",
																	"key": "description",
																	"value": "consequat veniam",
																	"type": "text"
																},
																{
																	"description": "(Required) ",
																	"key": "cliArguments",
																	"value": "officia quis in exe",
																	"type": "text"
																},
																{
																	"key": "requestsCpu",
																	"value": "-7623096.669693783",
																	"type": "text"
																},
																{
																	"key": "requestsMemory",
																	"value": "-76301776",
																	"type": "text"
																},
																{
																	"key": "limitsCpu",
																	"value": "-74059608.8901095",
																	"type": "text"
																},
																{
																	"key": "limitsMemory",
																	"value": "1140855",
																	"type": "text"
																},
																{
																	"key": "photo",
																	"type": "file"
																},
																{
																	"key": "integrateUrl",
																	"value": "irure proident sit ad velit",
																	"type": "text"
																},
																{
																	"key": "privileged",
																	"value": "true",
																	"type": "text"
																},
																{
																	"key": "mountLearnBlock",
																	"value": "false",
																	"type": "text"
																},
																{
																	"key": "supportsEonCompiler",
																	"value": "false",
																	"type": "text"
																},
																{
																	"key": "showOptimizations",
																	"value": "false",
																	"type": "text"
																},
																{
																	"description": " (This can only be one of library,firmware)",
																	"key": "category",
																	"value": "firmware",
																	"type": "text"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/deploy",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"deploy"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 84076932,\n  \"success\": false,\n  \"error\": \"ea est aliqua aute\"\n}"
												}
											]
										}
									],
									"id": "e39c17c0-5191-47c9-899b-5ef34534bacc"
								},
								{
									"name": "dsp",
									"item": [
										{
											"name": "{dsp Id}",
											"item": [
												{
													"name": "Update dsp block",
													"id": "29f0e15d-40a0-4116-a4fc-2030ebcae0e7",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"ullamco laborum veniam adipisicing dolor\",\n  \"dockerContainer\": \"culpa\",\n  \"description\": \"laborum\",\n  \"requestsCpu\": 61400376.32101062,\n  \"requestsMemory\": 45234789,\n  \"limitsCpu\": -30266247.755444065,\n  \"limitsMemory\": -73641279,\n  \"port\": -87369568\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/dsp/:dspId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"dsp",
																":dspId"
															],
															"variable": [
																{
																	"id": "cb10e47b-5c32-4bad-b6fa-220a3d44df45",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "47534a89-d69d-4a47-8ce2-2fce9df934a9",
																	"key": "dspId",
																	"value": "49175899",
																	"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																}
															]
														},
														"description": "Updates a dsp block. Only values in the body will be updated."
													},
													"response": [
														{
															"id": "a1282b5a-d3d4-4ea2-a3df-d795c3b10359",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"ullamco laborum veniam adipisicing dolor\",\n  \"dockerContainer\": \"culpa\",\n  \"description\": \"laborum\",\n  \"requestsCpu\": 61400376.32101062,\n  \"requestsMemory\": 45234789,\n  \"limitsCpu\": -30266247.755444065,\n  \"limitsMemory\": -73641279,\n  \"port\": -87369568\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/dsp/:dspId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"dsp",
																		":dspId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "dspId",
																			"value": "49175899",
																			"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												},
												{
													"name": "Delete dsp block",
													"id": "0c63ff1a-75af-4a74-a3a3-ebed628f7aa9",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/dsp/:dspId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"dsp",
																":dspId"
															],
															"variable": [
																{
																	"id": "bbb2d2a4-66b1-4cca-8021-113bd6257b58",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "6285f40b-cf83-4926-8180-5baf1579fd79",
																	"key": "dspId",
																	"value": "49175899",
																	"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																}
															]
														},
														"description": "Deletes a dsp block."
													},
													"response": [
														{
															"id": "029a1bd6-f03f-4ebd-80ac-4b5cc0d4238b",
															"name": "OK",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/dsp/:dspId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"dsp",
																		":dspId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "dspId",
																			"value": "49175899",
																			"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												},
												{
													"name": "Retry connection to dsp block",
													"id": "355847d4-a178-464c-bf74-feab9f0341e9",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/dsp/:dspId/retry",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"dsp",
																":dspId",
																"retry"
															],
															"variable": [
																{
																	"id": "c0bdccac-521d-4a81-94d5-2cf0f9e12648",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "74ba6a34-9912-4aa9-a79d-a42ff9798c36",
																	"key": "dspId",
																	"value": "49175899",
																	"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																}
															]
														},
														"description": "Retry launch a dsp block."
													},
													"response": [
														{
															"id": "8bb0e01b-9a4d-44c6-a43c-8f73d34ff20e",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/dsp/:dspId/retry",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"dsp",
																		":dspId",
																		"retry"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "dspId",
																			"value": "49175899",
																			"description": "(Required) DSP Block ID, use the impulse functions to retrieve the ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												}
											],
											"id": "9513a9a6-80e7-411a-bb98-eea3b343e7a7"
										},
										{
											"name": "Get dsp blocks",
											"id": "ffc4c8a4-64a8-489d-aeac-7e104351cf25",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/dsp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"dsp"
													],
													"variable": [
														{
															"id": "665edf1d-ccfc-417a-9b38-534f66d29ac5",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Retrieve all dsp blocks."
											},
											"response": [
												{
													"id": "9651729e-6314-47f5-bdf9-76a43ec3e3fb",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/dsp",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"dsp"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"dspBlocks\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dockerContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dockerContainerManagedByEdgeImpulse\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"port\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isConnected\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestsCpu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestsMemory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"limitsCpu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"limitsMemory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dockerContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dockerContainerManagedByEdgeImpulse\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"port\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isConnected\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestsCpu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"requestsMemory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"limitsCpu\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"limitsMemory\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"error\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": false,\n  \"error\": \"consectetur\"\n}"
												}
											]
										},
										{
											"name": "Add dsp block",
											"id": "3fe5ed87-6172-4db4-a697-9e738102d9f4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"cupidatat ipsum dolor ut\",\n  \"dockerContainer\": \"esse occaecat cupidatat\",\n  \"description\": \"Ut qui proident\",\n  \"port\": -15188569,\n  \"requestsCpu\": 48886465.63765651,\n  \"requestsMemory\": -37212423,\n  \"limitsCpu\": 85005261.93860969,\n  \"limitsMemory\": -31056151\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/dsp",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"dsp"
													],
													"variable": [
														{
															"id": "ab3a3cb6-7ff9-4fba-80d8-23e90281d67b",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Adds a dsp block."
											},
											"response": [
												{
													"id": "2d10c1c6-c3bb-431b-b472-f0c1c943e840",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"cupidatat ipsum dolor ut\",\n  \"dockerContainer\": \"esse occaecat cupidatat\",\n  \"description\": \"Ut qui proident\",\n  \"port\": -15188569,\n  \"requestsCpu\": 48886465.63765651,\n  \"requestsMemory\": -37212423,\n  \"limitsCpu\": 85005261.93860969,\n  \"limitsMemory\": -31056151\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/dsp",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"dsp"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 84076932,\n  \"success\": false,\n  \"error\": \"ea est aliqua aute\"\n}"
												}
											]
										}
									],
									"id": "92a81d5d-7c06-4835-8e5a-4922a9bca1a1"
								},
								{
									"name": "transfer-learning",
									"item": [
										{
											"name": "{transfer Learning Id}",
											"item": [
												{
													"name": "Update transfer learning block",
													"id": "e7b44c01-8672-44cf-9aae-02374209db63",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"nisi eu dolore velit\",\n  \"dockerContainer\": \"in sunt ullamco\",\n  \"description\": \"proident dolore exercitation irure\",\n  \"operatesOn\": \"other\",\n  \"objectDetectionLastLayer\": \"fomo\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/transfer-learning/:transferLearningId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"transfer-learning",
																":transferLearningId"
															],
															"variable": [
																{
																	"id": "00140f38-1b8f-4a61-9bd1-435a57e0056c",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "f1382b70-4d57-4fc9-9f95-001a5c354dad",
																	"key": "transferLearningId",
																	"value": "49175899",
																	"description": "(Required) Transfer learning ID"
																}
															]
														},
														"description": "Updates a transfer learning block. Only values in the body will be updated."
													},
													"response": [
														{
															"id": "0a6d27f8-2d9b-4871-afa2-fd4b980f4934",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"nisi eu dolore velit\",\n  \"dockerContainer\": \"in sunt ullamco\",\n  \"description\": \"proident dolore exercitation irure\",\n  \"operatesOn\": \"other\",\n  \"objectDetectionLastLayer\": \"fomo\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/transfer-learning/:transferLearningId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"transfer-learning",
																		":transferLearningId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "transferLearningId",
																			"value": "49175899",
																			"description": "(Required) Transfer learning ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												},
												{
													"name": "Delete transfer learning block",
													"id": "cf360311-a8c8-46ba-9e3e-4f52aae5e323",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/transfer-learning/:transferLearningId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"transfer-learning",
																":transferLearningId"
															],
															"variable": [
																{
																	"id": "03a6d2f1-82ae-4735-83df-b6f12a49ac18",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "5fb71e61-21c5-4d96-9195-dd177fc2e6bc",
																	"key": "transferLearningId",
																	"value": "49175899",
																	"description": "(Required) Transfer learning ID"
																}
															]
														},
														"description": "Deletes a transfer learning block."
													},
													"response": [
														{
															"id": "0ac3d21f-0258-4e9e-9295-ff3d6b85f237",
															"name": "OK",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/transfer-learning/:transferLearningId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"transfer-learning",
																		":transferLearningId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "transferLearningId",
																			"value": "49175899",
																			"description": "(Required) Transfer learning ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												}
											],
											"id": "0470d204-0702-4fc0-8b1f-ceefd1de072c"
										},
										{
											"name": "Get transfer learning blocks",
											"id": "95f72b1b-7e19-4f32-9c2a-4bae17c2d663",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/transfer-learning",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"transfer-learning"
													],
													"variable": [
														{
															"id": "3e75ebdd-b850-4eac-8bdf-4dd5349d7ef1",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Retrieve all transfer learning blocks."
											},
											"response": [
												{
													"id": "1bca02e5-d911-4d1c-9a86-9e37f81ef3e0",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/transfer-learning",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"transfer-learning"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"transferLearningBlocks\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dockerContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dockerContainerManagedByEdgeImpulse\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"operatesOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectDetectionLastLayer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dockerContainer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dockerContainerManagedByEdgeImpulse\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"operatesOn\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectDetectionLastLayer\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"error\": \"pariatur elit laboris cupidatat exercitation\"\n}"
												}
											]
										},
										{
											"name": "Add transfer learning block",
											"id": "c3b1fa0c-dfab-411a-bfee-2c4b02ceef47",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"labore eu\",\n  \"dockerContainer\": \"enim nulla lab\",\n  \"description\": \"culpa ex eiusmod cupidatat labore\",\n  \"operatesOn\": \"image\",\n  \"objectDetectionLastLayer\": \"yolov5\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/transfer-learning",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"transfer-learning"
													],
													"variable": [
														{
															"id": "972040b4-98e0-44b4-af8b-eaa04fa8325f",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Adds a transfer learning block."
											},
											"response": [
												{
													"id": "64579822-787c-49d7-a37c-c14fa435bd00",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"labore eu\",\n  \"dockerContainer\": \"enim nulla lab\",\n  \"description\": \"culpa ex eiusmod cupidatat labore\",\n  \"operatesOn\": \"image\",\n  \"objectDetectionLastLayer\": \"yolov5\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/transfer-learning",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"transfer-learning"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 84076932,\n  \"success\": false,\n  \"error\": \"ea est aliqua aute\"\n}"
												}
											]
										}
									],
									"id": "2b97646d-b637-447c-9788-f8463e7de849"
								},
								{
									"name": "secrets",
									"item": [
										{
											"name": "Get secrets",
											"id": "f0b5dbf2-3998-438a-b62d-4c71341bba57",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/secrets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"secrets"
													],
													"variable": [
														{
															"id": "ee551438-e46d-4b6a-b90c-7aa75cef2595",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Retrieve all secrets."
											},
											"response": [
												{
													"id": "6c2382db-d2a8-4c60-a6b4-19b447130f91",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/secrets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"secrets"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"secrets\": [\n    {\n      \"id\": 538043,\n      \"name\": \"nostrud veniam amet consectetur\",\n      \"description\": \"sint labore minim\",\n      \"created\": \"1983-03-23T06:48:53.125Z\"\n    },\n    {\n      \"id\": -49622540,\n      \"name\": \"fugiat Excepteur ex occaecat aliqua\",\n      \"description\": \"tempor laborum ut ad culpa\",\n      \"created\": \"1963-03-27T23:18:07.960Z\"\n    }\n  ],\n  \"success\": false,\n  \"error\": \"cupidatat laboris mollit\"\n}"
												}
											]
										},
										{
											"name": "Add secret",
											"id": "bb50400f-255c-4f22-92a3-6857119a1888",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"ul\",\n  \"description\": \"enim ut\",\n  \"secret\": \"qui\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/secrets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"secrets"
													],
													"variable": [
														{
															"id": "bb52f67b-789b-44cb-ba5a-afab30e94248",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Adds a secret."
											},
											"response": [
												{
													"id": "703a5da3-8a03-400c-938a-6bb955be4608",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"ul\",\n  \"description\": \"enim ut\",\n  \"secret\": \"qui\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/secrets",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"secrets"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 86527662,\n  \"success\": false,\n  \"error\": \"ullamco laborum\"\n}"
												}
											]
										},
										{
											"name": "Delete transfer learning block",
											"id": "3fa875ac-53dc-473c-99e8-7bda0feba1c5",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/secrets/:secretId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"secrets",
														":secretId"
													],
													"variable": [
														{
															"id": "5c300a14-268e-4270-8118-49cf5fd4ae1a",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														},
														{
															"id": "724addbe-5591-42b1-99e2-7917e2b2cf23",
															"key": "secretId",
															"value": "49175899",
															"description": "(Required) Secret ID"
														}
													]
												},
												"description": "Deletes a transfer learning block."
											},
											"response": [
												{
													"id": "0863dc3a-aebb-4d9f-bb28-0edd34130b11",
													"name": "OK",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/secrets/:secretId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"secrets",
																":secretId"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"key": "secretId",
																	"value": "49175899",
																	"description": "(Required) Secret ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
												}
											]
										}
									],
									"id": "67e8cff4-7031-4d6b-8844-cfe3e39e3bd3"
								},
								{
									"name": "jobs",
									"item": [
										{
											"name": "{job Id}",
											"item": [
												{
													"name": "stdout",
													"item": [
														{
															"name": "Get logs",
															"id": "bc087789-1d65-4161-bd2f-f39e0827ad90",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/jobs/:jobId/stdout?limit=49175899",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"jobs",
																		":jobId",
																		"stdout"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "49175899",
																			"description": "Maximum number of results"
																		}
																	],
																	"variable": [
																		{
																			"id": "92d2e828-334a-47d2-bec9-cc383fbcfb26",
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"id": "1e7e7180-60b5-457e-96d4-ec584c2cb5ac",
																			"key": "jobId",
																			"value": "49175899",
																			"description": "(Required) Job ID"
																		}
																	]
																},
																"description": "Get the logs for a job."
															},
															"response": [
																{
																	"id": "805ca7ea-443f-41f0-8c74-1e01e504aaf5",
																	"name": "OK",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "x-api-key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/organizations/:organizationId/jobs/:jobId/stdout?limit=49175899",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"organizations",
																				":organizationId",
																				"jobs",
																				":jobId",
																				"stdout"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "49175899"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "49175899",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "jobId",
																					"value": "49175899",
																					"description": "(Required) Job ID"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "{\n  \"stdout\": [\n    {\n      \"created\": \"2012-06-13T12:46:14.202Z\",\n      \"data\": \"anim dolore deserunt\"\n    },\n    {\n      \"created\": \"1951-08-22T12:03:25.503Z\",\n      \"data\": \"aliqua\"\n    }\n  ],\n  \"success\": false,\n  \"error\": \"consequat deserunt sint\"\n}"
																}
															]
														},
														{
															"name": "Download logs",
															"id": "8219760e-c492-4e27-ba02-d5e20d7e61c8",
															"protocolProfileBehavior": {
																"disableBodyPruning": true
															},
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "text/plain"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/jobs/:jobId/stdout/download?limit=49175899",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"jobs",
																		":jobId",
																		"stdout",
																		"download"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "49175899",
																			"description": "Maximum number of results"
																		}
																	],
																	"variable": [
																		{
																			"id": "0e79c7c6-0498-44de-8732-fc0fe0ae5c05",
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"id": "e4046907-7ec4-4c96-ac36-228c8e13e81f",
																			"key": "jobId",
																			"value": "49175899",
																			"description": "(Required) Job ID"
																		}
																	]
																},
																"description": "Download the logs for a job (as a text file)."
															},
															"response": [
																{
																	"id": "624f040d-4e56-4a73-8ecd-5c65e729f23f",
																	"name": "OK",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"description": "Added as a part of security scheme: apikey",
																				"key": "x-api-key",
																				"value": "<API Key>"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/api/organizations/:organizationId/jobs/:jobId/stdout/download?limit=49175899",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"api",
																				"organizations",
																				":organizationId",
																				"jobs",
																				":jobId",
																				"stdout",
																				"download"
																			],
																			"query": [
																				{
																					"key": "limit",
																					"value": "49175899"
																				}
																			],
																			"variable": [
																				{
																					"key": "organizationId",
																					"value": "49175899",
																					"description": "(Required) Organization ID"
																				},
																				{
																					"key": "jobId",
																					"value": "49175899",
																					"description": "(Required) Job ID"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"responseTime": null,
																	"body": "ipsum non sunt"
																}
															]
														}
													],
													"id": "58a2f4c3-c6ab-4264-a3ac-a260c2cf7ca8"
												},
												{
													"name": "Cancel job",
													"id": "d2aaa14a-1844-48ca-b61e-4e0276722ba6",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/jobs/:jobId/cancel?forceCancel=ipsum non sunt",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"jobs",
																":jobId",
																"cancel"
															],
															"query": [
																{
																	"key": "forceCancel",
																	"value": "ipsum non sunt",
																	"description": "If set to 'true', we won't wait for the job cluster to cancel the job, and will mark the job as finished."
																}
															],
															"variable": [
																{
																	"id": "a13aacda-686e-45ab-b302-3880a9cf6a9a",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "1f3786a3-aadc-4939-bbc1-23b95efecc35",
																	"key": "jobId",
																	"value": "49175899",
																	"description": "(Required) Job ID"
																}
															]
														},
														"description": "Cancel a running job."
													},
													"response": [
														{
															"id": "329c4704-0c59-4e45-88ff-2c21b1621679",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/jobs/:jobId/cancel?forceCancel=ipsum non sunt",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"jobs",
																		":jobId",
																		"cancel"
																	],
																	"query": [
																		{
																			"key": "forceCancel",
																			"value": "ipsum non sunt"
																		}
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "jobId",
																			"value": "49175899",
																			"description": "(Required) Job ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												},
												{
													"name": "Get job status",
													"id": "7ef65b6e-f0f7-456d-a732-a4a8a4ea1b5a",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/jobs/:jobId/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"jobs",
																":jobId",
																"status"
															],
															"variable": [
																{
																	"id": "4c3156cf-4853-4bae-8682-b3071e88a41b",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "2d13e983-80b8-478a-b5a6-7c23f0138940",
																	"key": "jobId",
																	"value": "49175899",
																	"description": "(Required) Job ID"
																}
															]
														},
														"description": "Get the status for a job."
													},
													"response": [
														{
															"id": "ab988d2e-8e2e-45db-8aa2-b776725dafd1",
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/jobs/:jobId/status",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"jobs",
																		":jobId",
																		"status"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "jobId",
																			"value": "49175899",
																			"description": "(Required) Job ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"minim dolore do\",\n  \"job\": {\n    \"id\": 29814348,\n    \"key\": \"ut laboris\",\n    \"created\": \"1985-06-21T06:30:06.228Z\",\n    \"category\": \"esse dolore\",\n    \"jobNotificationUids\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"started\": \"2003-11-29T21:06:27.520Z\",\n    \"finished\": \"1961-08-06T17:31:49.636Z\",\n    \"finishedSuccessful\": false\n  }\n}"
														}
													]
												}
											],
											"id": "c8bc2d0b-1be8-4bda-b464-205e4615e12a"
										},
										{
											"name": "List active jobs",
											"id": "5655e126-f66c-4118-bc6a-4c29c0f50770",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/jobs?rootOnly=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"jobs"
													],
													"query": [
														{
															"key": "rootOnly",
															"value": "true",
															"description": "Whether to exclude jobs with a parent ID (so jobs started as part of another job)"
														}
													],
													"variable": [
														{
															"id": "da8a4697-ff1d-4a2a-adbd-736b06bc91f3",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Get all active jobs for this organization"
											},
											"response": [
												{
													"id": "c824e3e1-0a65-4e93-8ed7-afc08c3c83ef",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/jobs?rootOnly=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"jobs"
															],
															"query": [
																{
																	"key": "rootOnly",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"jobs\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jobNotificationUids\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"started\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finished\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finishedSuccessful\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jobNotificationUids\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"started\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finished\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finishedSuccessful\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"totalJobCount\": 32247515,\n  \"error\": \"exercitation cupidatat ullamco\"\n}"
												}
											]
										},
										{
											"name": "List finished jobs",
											"id": "b1ce04f9-146b-4493-b443-bb96508f0b2d",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/jobs/history?startDate=2018-10-24T21:01:50.686Z&endDate=2018-10-24T21:01:50.686Z&limit=49175899&offset=49175899&rootOnly=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"jobs",
														"history"
													],
													"query": [
														{
															"key": "startDate",
															"value": "2018-10-24T21:01:50.686Z",
															"description": "Start date"
														},
														{
															"key": "endDate",
															"value": "2018-10-24T21:01:50.686Z",
															"description": "End date"
														},
														{
															"key": "limit",
															"value": "49175899",
															"description": "Maximum number of results"
														},
														{
															"key": "offset",
															"value": "49175899",
															"description": "Offset in results, can be used in conjunction with LimitResultsParameter to implement paging."
														},
														{
															"key": "rootOnly",
															"value": "true",
															"description": "Whether to exclude jobs with a parent ID (so jobs started as part of another job)"
														}
													],
													"variable": [
														{
															"id": "572c2b5e-ead7-471b-9785-4e88994af66d",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Get all finished jobs for this organization"
											},
											"response": [
												{
													"id": "680749e3-7197-4351-8d65-cec99ca1d121",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/jobs/history?startDate=2018-10-24T21:01:50.686Z&endDate=2018-10-24T21:01:50.686Z&limit=49175899&offset=49175899&rootOnly=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"jobs",
																"history"
															],
															"query": [
																{
																	"key": "startDate",
																	"value": "2018-10-24T21:01:50.686Z"
																},
																{
																	"key": "endDate",
																	"value": "2018-10-24T21:01:50.686Z"
																},
																{
																	"key": "limit",
																	"value": "49175899"
																},
																{
																	"key": "offset",
																	"value": "49175899"
																},
																{
																	"key": "rootOnly",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"jobs\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jobNotificationUids\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"started\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finished\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finishedSuccessful\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jobNotificationUids\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"started\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finished\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finishedSuccessful\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"totalJobCount\": 32247515,\n  \"error\": \"exercitation cupidatat ullamco\"\n}"
												}
											]
										},
										{
											"name": "List all jobs",
											"id": "a2065124-9536-4a4e-ad82-bfa39e8a6ddf",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/jobs/all?startDate=2018-10-24T21:01:50.686Z&endDate=2018-10-24T21:01:50.686Z&limit=49175899&offset=49175899&excludePipelineTransformJobs=true&rootOnly=true",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"jobs",
														"all"
													],
													"query": [
														{
															"key": "startDate",
															"value": "2018-10-24T21:01:50.686Z",
															"description": "Start date"
														},
														{
															"key": "endDate",
															"value": "2018-10-24T21:01:50.686Z",
															"description": "End date"
														},
														{
															"key": "limit",
															"value": "49175899",
															"description": "Maximum number of results"
														},
														{
															"key": "offset",
															"value": "49175899",
															"description": "Offset in results, can be used in conjunction with LimitResultsParameter to implement paging."
														},
														{
															"key": "excludePipelineTransformJobs",
															"value": "true",
															"description": "Whether to exclude pipeline / transformation jobs"
														},
														{
															"key": "rootOnly",
															"value": "true",
															"description": "Whether to exclude jobs with a parent ID (so jobs started as part of another job)"
														}
													],
													"variable": [
														{
															"id": "e4c13650-0f9d-4776-bf4d-62aa7c1fd51e",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Get all jobs for this organization"
											},
											"response": [
												{
													"id": "9030fac6-c3db-4431-89ef-b4f4a013dcb3",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/jobs/all?startDate=2018-10-24T21:01:50.686Z&endDate=2018-10-24T21:01:50.686Z&limit=49175899&offset=49175899&excludePipelineTransformJobs=true&rootOnly=true",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"jobs",
																"all"
															],
															"query": [
																{
																	"key": "startDate",
																	"value": "2018-10-24T21:01:50.686Z"
																},
																{
																	"key": "endDate",
																	"value": "2018-10-24T21:01:50.686Z"
																},
																{
																	"key": "limit",
																	"value": "49175899"
																},
																{
																	"key": "offset",
																	"value": "49175899"
																},
																{
																	"key": "excludePipelineTransformJobs",
																	"value": "true"
																},
																{
																	"key": "rootOnly",
																	"value": "true"
																}
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"jobs\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jobNotificationUids\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"started\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finished\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finishedSuccessful\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"key\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jobNotificationUids\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"started\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finished\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"finishedSuccessful\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"totalJobCount\": 32247515,\n  \"error\": \"exercitation cupidatat ullamco\"\n}"
												}
											]
										}
									],
									"id": "f7bd60ad-3b88-476d-aaf5-ebab1ec29ee9"
								},
								{
									"name": "pipelines",
									"item": [
										{
											"name": "{pipeline Id}",
											"item": [
												{
													"name": "Get pipeline",
													"id": "6a8a9e7e-43e9-434d-9303-0d6ca26ce2f9",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/pipelines/:pipelineId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"pipelines",
																":pipelineId"
															],
															"variable": [
																{
																	"id": "ac7b7940-d1f6-45c9-b6df-9106454fb05d",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "c5a58032-5310-465f-ab42-fe0939307086",
																	"key": "pipelineId",
																	"value": "49175899",
																	"description": "(Required) Pipeline ID"
																}
															]
														},
														"description": "Retrieve an organizational pipelines"
													},
													"response": [
														{
															"id": "889607d5-8dda-41eb-a6ab-0687a6386973",
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/pipelines/:pipelineId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"pipelines",
																		":pipelineId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "pipelineId",
																			"value": "49175899",
																			"description": "(Required) Pipeline ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"pipeline\": {\n    \"id\": -11099710,\n    \"name\": \"reprehenderit dolor cupidatat\",\n    \"description\": \"quis\",\n    \"intervalStr\": \"\",\n    \"steps\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"created\": \"2008-11-18T04:53:06.670Z\",\n    \"emailRecipientUids\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"whenToEmail\": \"always\",\n    \"nextRun\": \"2006-08-26T02:09:02.856Z\",\n    \"currentRun\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastRun\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"feedingIntoDataset\": {\n      \"dataset\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"datasetLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"itemCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"itemCountChecklistOK\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"itemCountChecklistError\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"feedingIntoProject\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"projectLink\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"itemCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"lastRunStartError\": \"ea commodo sunt\",\n    \"notificationWebhook\": \"culpa\"\n  },\n  \"success\": false,\n  \"error\": \"veniam dolor in fugiat\"\n}"
														}
													]
												},
												{
													"name": "Update pipeline",
													"id": "7951122c-1db7-4a99-a1a0-453b78a9b126",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"deserunt ipsum consequat\",\n  \"description\": \"fugiat\",\n  \"intervalStr\": \"in fugiat\",\n  \"steps\": [\n    {\n      \"name\": \"dolore labore non\",\n      \"filter\": \"magna\",\n      \"uploadType\": \"project\",\n      \"projectId\": -23493721,\n      \"newProjectName\": \"vol\",\n      \"projectApiKey\": \"ullamco\",\n      \"projectHmacKey\": \"cupidatat sunt anim est\",\n      \"transformationBlockId\": -84276991,\n      \"builtinTransformationBlock\": {},\n      \"category\": \"testing\",\n      \"outputDatasetName\": \"aliqua dolore nostrud esse sunt\",\n      \"label\": \"reprehenderit non sed amet ad\",\n      \"transformationParallel\": -12839993,\n      \"extraCliArguments\": \"anim fugiat nulla reprehenderit exercitation\"\n    },\n    {\n      \"name\": \"cillum dolor\",\n      \"filter\": \"labore irure in non\",\n      \"uploadType\": \"project\",\n      \"projectId\": 90320104,\n      \"newProjectName\": \"amet aliqua et\",\n      \"projectApiKey\": \"deserunt\",\n      \"projectHmacKey\": \"ut\",\n      \"transformationBlockId\": 51773602,\n      \"builtinTransformationBlock\": {},\n      \"category\": \"training\",\n      \"outputDatasetName\": \"amet ex dolore\",\n      \"label\": \"enim pariatur id mollit\",\n      \"transformationParallel\": -80940617,\n      \"extraCliArguments\": \"Duis reprehenderit consectetur\"\n    }\n  ],\n  \"emailRecipientUids\": [\n    -18408206.754009455,\n    -38169815.64508479\n  ],\n  \"whenToEmail\": \"always\",\n  \"dataset\": \"ea sed irure\",\n  \"projectId\": -44202897,\n  \"notificationWebhook\": \"adipisicing ut occaecat\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/pipelines/:pipelineId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"pipelines",
																":pipelineId"
															],
															"variable": [
																{
																	"id": "e6eb4e7e-4c11-45d4-baa0-0adfdbd98bf8",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "7c2e62de-3e18-42d8-8d0a-5bfe1dcf7874",
																	"key": "pipelineId",
																	"value": "49175899",
																	"description": "(Required) Pipeline ID"
																}
															]
														},
														"description": "Update an organizational pipelines"
													},
													"response": [
														{
															"id": "6ba5c059-b3b1-4605-ac7e-ec22e5205e7d",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"deserunt ipsum consequat\",\n  \"description\": \"fugiat\",\n  \"intervalStr\": \"in fugiat\",\n  \"steps\": [\n    {\n      \"name\": \"dolore labore non\",\n      \"filter\": \"magna\",\n      \"uploadType\": \"project\",\n      \"projectId\": -23493721,\n      \"newProjectName\": \"vol\",\n      \"projectApiKey\": \"ullamco\",\n      \"projectHmacKey\": \"cupidatat sunt anim est\",\n      \"transformationBlockId\": -84276991,\n      \"builtinTransformationBlock\": {},\n      \"category\": \"testing\",\n      \"outputDatasetName\": \"aliqua dolore nostrud esse sunt\",\n      \"label\": \"reprehenderit non sed amet ad\",\n      \"transformationParallel\": -12839993,\n      \"extraCliArguments\": \"anim fugiat nulla reprehenderit exercitation\"\n    },\n    {\n      \"name\": \"cillum dolor\",\n      \"filter\": \"labore irure in non\",\n      \"uploadType\": \"project\",\n      \"projectId\": 90320104,\n      \"newProjectName\": \"amet aliqua et\",\n      \"projectApiKey\": \"deserunt\",\n      \"projectHmacKey\": \"ut\",\n      \"transformationBlockId\": 51773602,\n      \"builtinTransformationBlock\": {},\n      \"category\": \"training\",\n      \"outputDatasetName\": \"amet ex dolore\",\n      \"label\": \"enim pariatur id mollit\",\n      \"transformationParallel\": -80940617,\n      \"extraCliArguments\": \"Duis reprehenderit consectetur\"\n    }\n  ],\n  \"emailRecipientUids\": [\n    -18408206.754009455,\n    -38169815.64508479\n  ],\n  \"whenToEmail\": \"always\",\n  \"dataset\": \"ea sed irure\",\n  \"projectId\": -44202897,\n  \"notificationWebhook\": \"adipisicing ut occaecat\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/pipelines/:pipelineId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"pipelines",
																		":pipelineId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "pipelineId",
																			"value": "49175899",
																			"description": "(Required) Pipeline ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												},
												{
													"name": "Delete pipeline",
													"id": "5dd7d9d4-a0ae-464e-a539-2742e55872ca",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/pipelines/:pipelineId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"pipelines",
																":pipelineId"
															],
															"variable": [
																{
																	"id": "20f9f1c3-1b91-4b78-9908-0a5368b42962",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "9e40408d-2b13-4054-8020-041e2c7be5bb",
																	"key": "pipelineId",
																	"value": "49175899",
																	"description": "(Required) Pipeline ID"
																}
															]
														},
														"description": "Delete an organizational pipelines"
													},
													"response": [
														{
															"id": "2b88c05d-7dd6-482e-aa7a-fdd7d274cc79",
															"name": "OK",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/pipelines/:pipelineId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"pipelines",
																		":pipelineId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "pipelineId",
																			"value": "49175899",
																			"description": "(Required) Pipeline ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												},
												{
													"name": "Run pipelines",
													"id": "0ca2715b-e855-4153-b686-931492900558",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/pipelines/:pipelineId/run",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"pipelines",
																":pipelineId",
																"run"
															],
															"variable": [
																{
																	"id": "6a29159d-2d94-41d3-aea7-3fa5082e2212",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "e4c58d6a-e7fd-41a9-802b-6e834bf099a0",
																	"key": "pipelineId",
																	"value": "49175899",
																	"description": "(Required) Pipeline ID"
																}
															]
														},
														"description": "Run an organizational pipeline"
													},
													"response": [
														{
															"id": "e3181bc3-e75e-42cd-8b84-9d770a24037b",
															"name": "OK",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/pipelines/:pipelineId/run",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"pipelines",
																		":pipelineId",
																		"run"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "pipelineId",
																			"value": "49175899",
																			"description": "(Required) Pipeline ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"pipelineRun\": {\n    \"id\": -26574254,\n    \"steps\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"created\": \"1970-09-28T09:08:21.838Z\",\n    \"finished\": \"1960-01-04T01:12:02.097Z\",\n    \"itemCountBefore\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"itemCountAfter\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"itemCountImportIntoProjectFailed\": 62144297\n  },\n  \"success\": false,\n  \"error\": \"Duis reprehenderit aliqua do\"\n}"
														}
													]
												}
											],
											"id": "cd2a34f1-2e9a-4cd9-a5f3-5de273f3cd2d"
										},
										{
											"name": "List pipelines",
											"id": "fd4a3718-348f-471e-b8e1-9921c7a0cefd",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/pipelines",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"pipelines"
													],
													"variable": [
														{
															"id": "330c5173-4381-4f66-90e3-1e4fd4df0ad1",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Retrieve all organizational pipelines"
											},
											"response": [
												{
													"id": "46a8945f-47a8-4661-a69f-464eae79099e",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/pipelines",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"pipelines"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"pipelines\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"intervalStr\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"steps\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"emailRecipientUids\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"whenToEmail\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"nextRun\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currentRun\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastRun\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"feedingIntoDataset\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"feedingIntoProject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastRunStartError\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"notificationWebhook\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"intervalStr\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"steps\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"emailRecipientUids\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"whenToEmail\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"nextRun\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currentRun\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastRun\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"feedingIntoDataset\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"feedingIntoProject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastRunStartError\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"notificationWebhook\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": false,\n  \"error\": \"commodo ad est minim\"\n}"
												}
											]
										},
										{
											"name": "Create pipeline",
											"id": "bbf32ce9-2772-4e36-8c76-1a2aa6b55a83",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"in veniam minim mollit\",\n  \"description\": \"labore\",\n  \"intervalStr\": \"et ea Lorem\",\n  \"steps\": [\n    {\n      \"name\": \"qui ea non\",\n      \"filter\": \"cillum in\",\n      \"uploadType\": \"project\",\n      \"projectId\": -81060159,\n      \"newProjectName\": \"ipsum nisi\",\n      \"projectApiKey\": \"in et\",\n      \"projectHmacKey\": \"labore incididunt aute cupidatat\",\n      \"transformationBlockId\": -63961017,\n      \"builtinTransformationBlock\": {},\n      \"category\": \"training\",\n      \"outputDatasetName\": \"cupidatat exercitation\",\n      \"label\": \"id labore\",\n      \"transformationParallel\": 11270811,\n      \"extraCliArguments\": \"pariatur aute Excepteur\"\n    },\n    {\n      \"name\": \"dolore nisi ea incididunt\",\n      \"filter\": \"cupidatat proident\",\n      \"uploadType\": \"dataset\",\n      \"projectId\": 90315106,\n      \"newProjectName\": \"veniam\",\n      \"projectApiKey\": \"adipisicing mollit\",\n      \"projectHmacKey\": \"Ut minim nulla et reprehenderit\",\n      \"transformationBlockId\": -66077840,\n      \"builtinTransformationBlock\": {},\n      \"category\": \"testing\",\n      \"outputDatasetName\": \"nulla incididunt elit\",\n      \"label\": \"voluptate ea ullamco est\",\n      \"transformationParallel\": -88666924,\n      \"extraCliArguments\": \"et reprehenderit\"\n    }\n  ],\n  \"emailRecipientUids\": [\n    60646263.42581624,\n    -66724967.95248892\n  ],\n  \"whenToEmail\": \"on_new_data\",\n  \"dataset\": \"ad adipisicing cillum nisi commodo\",\n  \"projectId\": -27803735,\n  \"notificationWebhook\": \"sint dolor minim\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/pipelines",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"pipelines"
													],
													"variable": [
														{
															"id": "63ed5770-ea49-4071-a567-5cfbed3b244a",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Create an organizational pipelines"
											},
											"response": [
												{
													"id": "45b4f47a-7827-476e-8888-62297240e921",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"deserunt ipsum consequat\",\n  \"description\": \"fugiat\",\n  \"intervalStr\": \"in fugiat\",\n  \"steps\": [\n    {\n      \"name\": \"dolore labore non\",\n      \"filter\": \"magna\",\n      \"uploadType\": \"project\",\n      \"projectId\": -23493721,\n      \"newProjectName\": \"vol\",\n      \"projectApiKey\": \"ullamco\",\n      \"projectHmacKey\": \"cupidatat sunt anim est\",\n      \"transformationBlockId\": -84276991,\n      \"builtinTransformationBlock\": {},\n      \"category\": \"testing\",\n      \"outputDatasetName\": \"aliqua dolore nostrud esse sunt\",\n      \"label\": \"reprehenderit non sed amet ad\",\n      \"transformationParallel\": -12839993,\n      \"extraCliArguments\": \"anim fugiat nulla reprehenderit exercitation\"\n    },\n    {\n      \"name\": \"cillum dolor\",\n      \"filter\": \"labore irure in non\",\n      \"uploadType\": \"project\",\n      \"projectId\": 90320104,\n      \"newProjectName\": \"amet aliqua et\",\n      \"projectApiKey\": \"deserunt\",\n      \"projectHmacKey\": \"ut\",\n      \"transformationBlockId\": 51773602,\n      \"builtinTransformationBlock\": {},\n      \"category\": \"training\",\n      \"outputDatasetName\": \"amet ex dolore\",\n      \"label\": \"enim pariatur id mollit\",\n      \"transformationParallel\": -80940617,\n      \"extraCliArguments\": \"Duis reprehenderit consectetur\"\n    }\n  ],\n  \"emailRecipientUids\": [\n    -18408206.754009455,\n    -38169815.64508479\n  ],\n  \"whenToEmail\": \"always\",\n  \"dataset\": \"ea sed irure\",\n  \"projectId\": -44202897,\n  \"notificationWebhook\": \"adipisicing ut occaecat\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/pipelines",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"pipelines"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 84076932,\n  \"success\": false,\n  \"error\": \"ea est aliqua aute\"\n}"
												}
											]
										}
									],
									"id": "d0c160e4-d241-430f-b37a-b361f1c801e9"
								},
								{
									"name": "portals",
									"item": [
										{
											"name": "{portal Id}",
											"item": [
												{
													"name": "Retrieve upload portal information",
													"id": "7666d98a-f28c-41c5-bdc2-f3a2a1481f83",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/portals/:portalId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"portals",
																":portalId"
															],
															"variable": [
																{
																	"id": "a1a1d1b4-79cc-4d3f-86a7-042c5b605dc2",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "40246653-f044-4c26-8da0-3f056df5da04",
																	"key": "portalId",
																	"value": "49175899",
																	"description": "(Required) Portal ID"
																}
															]
														},
														"description": "Retrieve a single upload portals identified by ID."
													},
													"response": [
														{
															"id": "823c98e1-02a2-4539-b747-f5335e053fae",
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/portals/:portalId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"portals",
																		":portalId"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "portalId",
																			"value": "49175899",
																			"description": "(Required) Portal ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"bucketName\": \"my-s3-bucket\",\n  \"bucketPath\": \"/path/to/bucket\",\n  \"id\": -47066930,\n  \"name\": \"EdgeImpulse Inc.\",\n  \"success\": true,\n  \"token\": \"SECRET_TOKEN\",\n  \"url\": \"edgeImpulse\",\n  \"error\": \"magna ip\",\n  \"description\": \"EdgeImpulse Inc. Portal description\",\n  \"bucketId\": 1,\n  \"bucketUrl\": \"s3://bucketname/path/to/bucket\"\n}"
														}
													]
												},
												{
													"name": "Verify upload portal information",
													"id": "894a1f26-eddf-46d0-b4fb-34b08b54d60b",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/portals/:portalId/verify",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"portals",
																":portalId",
																"verify"
															],
															"variable": [
																{
																	"id": "aa3a47a3-da2c-4e3f-a1f3-963a9c55271c",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "c528d34c-a11c-4418-93c8-c141ce242b9f",
																	"key": "portalId",
																	"value": "49175899",
																	"description": "(Required) Portal ID"
																}
															]
														},
														"description": "Retrieve a subset of files from the portal, to be used in the data source wizard."
													},
													"response": [
														{
															"id": "b8bb9ecb-cb8b-47d4-baf8-378f6f27e752",
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/portals/:portalId/verify",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"portals",
																		":portalId",
																		"verify"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "portalId",
																			"value": "49175899",
																			"description": "(Required) Portal ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"files\": [\n    {\n      \"name\": \"dolor\",\n      \"size\": -39996600,\n      \"folderName\": \"quis deserunt\"\n    },\n    {\n      \"name\": \"labore proident Ut\",\n      \"size\": -51776444,\n      \"folderName\": \"enim velit laborum\"\n    }\n  ],\n  \"success\": true,\n  \"error\": \"in et laboris aute\"\n}"
														}
													]
												},
												{
													"name": "Update upload portal",
													"id": "9f2a774c-3f04-450e-b4d3-b5013de5c92e",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"EdgeImpulse Inc.\",\n  \"bucketId\": 1,\n  \"bucketPath\": \"/path/in/bucket\",\n  \"description\": \"EdgeImpulse Inc. Portal description\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/portals/:portalId/update",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"portals",
																":portalId",
																"update"
															],
															"variable": [
																{
																	"id": "7533b3fb-1d05-429d-9177-899a3c2169a5",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "00b59956-f9f4-4576-bac2-451bfcb791ab",
																	"key": "portalId",
																	"value": "49175899",
																	"description": "(Required) Portal ID"
																}
															]
														},
														"description": "Updates an upload portal for the organization."
													},
													"response": [
														{
															"id": "6af3c3bf-4222-40df-961b-55c67d7a1baa",
															"name": "OK",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"EdgeImpulse Inc.\",\n  \"bucketId\": 1,\n  \"bucketPath\": \"/path/in/bucket\",\n  \"description\": \"EdgeImpulse Inc. Portal description\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/portals/:portalId/update",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"portals",
																		":portalId",
																		"update"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "portalId",
																			"value": "49175899",
																			"description": "(Required) Portal ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": false,\n  \"url\": \"exercitation commodo eu Lorem\",\n  \"error\": \"laborum proident i\",\n  \"signedUrl\": \"sit in sunt consectetur\",\n  \"bucketBucket\": \"eiusmod nulla dolor esse\"\n}"
														}
													]
												},
												{
													"name": "Rotate upload portal token",
													"id": "c8eaf408-9fe2-4bec-ac8b-75a26fde89c7",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/portals/:portalId/rotate-token",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"portals",
																":portalId",
																"rotate-token"
															],
															"variable": [
																{
																	"id": "23b77535-bb15-430f-9fe6-6a2fe51242b4",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "907ed5f4-af27-4ab8-b398-1e50b86744e0",
																	"key": "portalId",
																	"value": "49175899",
																	"description": "(Required) Portal ID"
																}
															]
														},
														"description": "Rotates the token for an upload portal."
													},
													"response": [
														{
															"id": "29d487b8-6b08-4449-98df-25bd6f506a71",
															"name": "OK",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/portals/:portalId/rotate-token",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"portals",
																		":portalId",
																		"rotate-token"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "portalId",
																			"value": "49175899",
																			"description": "(Required) Portal ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												},
												{
													"name": "Delete upload portal",
													"id": "a14cb974-a055-4b50-bfa6-130e21263c5a",
													"protocolProfileBehavior": {
														"disableBodyPruning": true
													},
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/portals/:portalId/delete",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"portals",
																":portalId",
																"delete"
															],
															"variable": [
																{
																	"id": "50f94238-e315-4c14-bd9d-b8acad36ae19",
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																},
																{
																	"id": "88117d01-c722-4243-82a9-214b9c8c17c3",
																	"key": "portalId",
																	"value": "49175899",
																	"description": "(Required) Portal ID"
																}
															]
														},
														"description": "Deletes an upload portal for the organization."
													},
													"response": [
														{
															"id": "af43027d-4b9a-4734-8b1c-34cc2ef9d1bd",
															"name": "OK",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: apikey",
																		"key": "x-api-key",
																		"value": "<API Key>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/api/organizations/:organizationId/portals/:portalId/delete",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"api",
																		"organizations",
																		":organizationId",
																		"portals",
																		":portalId",
																		"delete"
																	],
																	"variable": [
																		{
																			"key": "organizationId",
																			"value": "49175899",
																			"description": "(Required) Organization ID"
																		},
																		{
																			"key": "portalId",
																			"value": "49175899",
																			"description": "(Required) Portal ID"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"responseTime": null,
															"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
														}
													]
												}
											],
											"id": "bacd0bd4-7a67-44f3-b679-836202348cf6"
										},
										{
											"name": "List upload portals",
											"id": "46972cfa-4ec4-4dfc-9f4d-c2fcf6879252",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/portals",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"portals"
													],
													"variable": [
														{
															"id": "ba160c3e-2e46-44b3-b7fe-131fd95d7f14",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Retrieve all configured upload portals."
											},
											"response": [
												{
													"id": "05c4f20a-2ba1-4200-8f88-dde10b26c4ef",
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/portals",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"portals"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"portals\": [\n    {\n      \"id\": -76484411,\n      \"name\": \"magna cupidatat est eu\",\n      \"url\": \"deserunt Ut consectetur\",\n      \"bucketName\": \"aliquip minim cillum\",\n      \"bucketPath\": \"non occaecat\",\n      \"bucketUrl\": \"consectetur dolore nulla pariatur\",\n      \"created\": \"1973-02-03T15:01:56.341Z\",\n      \"description\": \"proident Duis in laboris\"\n    },\n    {\n      \"id\": -26505321,\n      \"name\": \"deserunt cillum commodo est\",\n      \"url\": \"ut aliquip\",\n      \"bucketName\": \"magna reprehenderit sunt\",\n      \"bucketPath\": \"proident consectetur quis\",\n      \"bucketUrl\": \"minim Excepteur laborum cupidatat\",\n      \"created\": \"1959-07-05T14:53:16.543Z\",\n      \"description\": \"in aute\"\n    }\n  ],\n  \"success\": true,\n  \"error\": \"non qui Duis\"\n}"
												}
											]
										},
										{
											"name": "Create upload portal",
											"id": "6cd9bcaf-10e9-4cdb-a81d-dcefeb90ef7b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"EdgeImpulse Inc.\",\n  \"bucketId\": 1,\n  \"bucketPath\": \"/path/in/bucket\",\n  \"description\": \"EdgeImpulse Inc. Portal description\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/portals/create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"portals",
														"create"
													],
													"variable": [
														{
															"id": "cc460b9e-0064-49cc-828b-b6f5924c2885",
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												},
												"description": "Creates a new upload portal for the organization."
											},
											"response": [
												{
													"id": "2e6f02ab-9f48-498a-8348-2617424fcf83",
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: apikey",
																"key": "x-api-key",
																"value": "<API Key>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"EdgeImpulse Inc.\",\n  \"bucketId\": 1,\n  \"bucketPath\": \"/path/in/bucket\",\n  \"description\": \"EdgeImpulse Inc. Portal description\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/organizations/:organizationId/portals/create",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"organizations",
																":organizationId",
																"portals",
																"create"
															],
															"variable": [
																{
																	"key": "organizationId",
																	"value": "49175899",
																	"description": "(Required) Organization ID"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"responseTime": null,
													"body": "{\n  \"id\": 98283509,\n  \"success\": true,\n  \"url\": \"qui reprehenderit \",\n  \"error\": \"enim\",\n  \"signedUrl\": \"eiusmod ut deserunt Excepteur\",\n  \"bucketBucket\": \"ut ut\"\n}"
												}
											]
										}
									],
									"id": "81e7c9b3-0135-467e-b19c-6b4b853363af"
								},
								{
									"name": "Organization information",
									"id": "5e575411-c448-434f-9673-b155cf5111b8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/organizations/:organizationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"organizations",
												":organizationId"
											],
											"variable": [
												{
													"id": "17c39782-4fe1-4edc-9dd8-9860b7da8b83",
													"key": "organizationId",
													"value": "49175899",
													"description": "(Required) Organization ID"
												}
											]
										},
										"description": "List all information about this organization."
									},
									"response": [
										{
											"id": "e6561329-da6d-4e16-8fdc-9ff7bb2641a3",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"datasets\": [\n    {\n      \"dataset\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastFileCreated\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalFileSize\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalFileCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"dataset\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastFileCreated\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalFileSize\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"totalFileCount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"defaultComputeLimits\": {\n    \"requestsCpu\": 63717740.262714535,\n    \"requestsMemory\": -35693869.796975575,\n    \"limitsCpu\": -9212415.284834787,\n    \"limitsMemory\": -59751912.43308937\n  },\n  \"experiments\": [\n    {\n      \"type\": \"in magna laborum dolore deserunt\",\n      \"title\": \"ad tempor\",\n      \"enabled\": true,\n      \"showToUser\": true,\n      \"help\": \"minim dolore labore\"\n    },\n    {\n      \"type\": \"reprehenderit consectetur laboris\",\n      \"title\": \"tempor proident\",\n      \"enabled\": false,\n      \"showToUser\": true,\n      \"help\": \"aliqua magna\"\n    }\n  ],\n  \"organization\": {\n    \"id\": -16776003,\n    \"name\": \"cupidatat aliquip reprehenderit\",\n    \"users\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"isDeveloperProfile\": false,\n    \"whitelabelId\": -58279396.98555759,\n    \"logo\": \"https://usercdn.edgeimpulse.com/logos/1.jpg\",\n    \"headerImg\": \"https://usercdn.edgeimpulse.com/leaders/1.jpg\"\n  },\n  \"success\": true,\n  \"error\": \"veniam irure aute proident amet\",\n  \"readme\": {\n    \"markdown\": \"in irure\",\n    \"html\": \"dolor Ut\"\n  },\n  \"whitelabelId\": -3509030\n}"
										}
									]
								},
								{
									"name": "Update organization",
									"id": "bdca90a5-dd97-4cdd-a45d-1d8cc78d7809",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"logo\": \"anim commodo in esse\",\n  \"headerImg\": \"ea laboris\",\n  \"name\": \"proident et\",\n  \"experiments\": [\n    \"ex deserunt enim laborum\",\n    \"commodo nulla\"\n  ],\n  \"readme\": \"minim dolor laborum Excepteur commodo\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/organizations/:organizationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"organizations",
												":organizationId"
											],
											"variable": [
												{
													"id": "bbd2765f-e2ab-4784-bbfc-a0e281f14ceb",
													"key": "organizationId",
													"value": "49175899",
													"description": "(Required) Organization ID"
												}
											]
										},
										"description": "Update organization properties such as name and logo."
									},
									"response": [
										{
											"id": "1824bf24-a3c7-4542-af7d-56578525a125",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"logo\": \"labore Duis\",\n  \"headerImg\": \"occaecat Lorem ullamco qui\",\n  \"name\": \"adipisicing\",\n  \"experiments\": [\n    \"in\",\n    \"Ut ut aliquip quis\"\n  ],\n  \"readme\": \"do et magna velit\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Remove organization",
									"id": "fba14151-2dfb-4e6b-940a-058ee463f54f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/organizations/:organizationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"organizations",
												":organizationId"
											],
											"variable": [
												{
													"id": "ec52031f-4479-4af1-8de1-b595a6198a0a",
													"key": "organizationId",
													"value": "49175899",
													"description": "(Required) Organization ID"
												}
											]
										},
										"description": "Remove the current organization, and all data associated with it. This is irrevocable!"
									},
									"response": [
										{
											"id": "1f8a1be5-04c5-4b8e-b306-32ba77e7bcc6",
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Upload organization logo",
									"id": "44eabcce-17e5-4a8a-b5e6-cc9195dad46d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "image",
													"type": "file",
													"value": null
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/organizations/:organizationId/logo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"organizations",
												":organizationId",
												"logo"
											],
											"variable": [
												{
													"id": "998875e9-d510-4b51-800a-a92ef79f3e73",
													"key": "organizationId",
													"value": "49175899",
													"description": "(Required) Organization ID"
												}
											]
										},
										"description": "Uploads and updates the organization logo"
									},
									"response": [
										{
											"id": "3b566978-e3f5-4688-a59c-06cc59e70112",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "image",
															"type": "file"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/logo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"logo"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"eiusmod dolor officia\",\n  \"url\": \"dolor Lorem sint sed aliqua\"\n}"
										}
									]
								},
								{
									"name": "Upload organization header image",
									"id": "c610f22b-d282-4219-ad6e-60bc2c6c1bb3",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "image",
													"type": "file",
													"value": null
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/organizations/:organizationId/header",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"organizations",
												":organizationId",
												"header"
											],
											"variable": [
												{
													"id": "9013633e-036e-4515-be63-14aca00144e9",
													"key": "organizationId",
													"value": "49175899",
													"description": "(Required) Organization ID"
												}
											]
										},
										"description": "Uploads and updates the organization header image"
									},
									"response": [
										{
											"id": "3556850b-5662-43ad-be20-ec8dd535f3da",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "image",
															"type": "file"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/header",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"header"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"eiusmod dolor officia\",\n  \"url\": \"dolor Lorem sint sed aliqua\"\n}"
										}
									]
								},
								{
									"name": "Admin endpoint",
									"id": "b55c9d2c-0c72-4e12-bdaf-471afc869523",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/organizations/:organizationId/test-admin",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"organizations",
												":organizationId",
												"test-admin"
											],
											"variable": [
												{
													"id": "9b5ea494-db6e-4c2a-8e05-836c8b99fb68",
													"key": "organizationId",
													"value": "49175899",
													"description": "(Required) Organization ID"
												}
											]
										},
										"description": "Test endpoint that can only be reached with admin rights."
									},
									"response": [
										{
											"id": "27e3f1d3-5973-43a4-9459-cf402e2cf62b",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/test-admin",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"test-admin"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Get projects",
									"id": "1813fa6e-ba85-45fe-84fa-4c4c76c4a08f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/organizations/:organizationId/projects",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"organizations",
												":organizationId",
												"projects"
											],
											"variable": [
												{
													"id": "5fabe9cd-42b0-4687-b3ab-45a7b4a4d12f",
													"key": "organizationId",
													"value": "49175899",
													"description": "(Required) Organization ID"
												}
											]
										},
										"description": "Retrieve all projects for the organization."
									},
									"response": [
										{
											"id": "37d4c516-56c7-4a96-b463-b65ed2862a7d",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/projects",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"projects"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"projects\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"collaborators\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labelingMethod\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isEnterpriseProject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"whitelabelId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastAccessed\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerUserId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerOrganizationId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataExplorerScreenshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"collaborators\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labelingMethod\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isEnterpriseProject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"whitelabelId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastAccessed\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerUserId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerOrganizationId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataExplorerScreenshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"error\": \"magna laboris ex proident\"\n}"
										}
									]
								},
								{
									"name": "Upload image for readme",
									"id": "7485a7f5-9092-4b57-beb4-51a72b714708",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "image",
													"type": "file",
													"description": "(Required) ",
													"value": null
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/organizations/:organizationId/readme/upload-image",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"organizations",
												":organizationId",
												"readme",
												"upload-image"
											],
											"variable": [
												{
													"id": "9874b3b3-0241-4a01-be00-76c83ccc2367",
													"key": "organizationId",
													"value": "49175899",
													"description": "(Required) Organization ID"
												}
											]
										},
										"description": "Uploads an image to the user CDN and returns the path."
									},
									"response": [
										{
											"id": "38ef2e1f-1699-4ac8-8ccd-9b4277d8226a",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"description": "(Required) ",
															"key": "image",
															"type": "file"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/readme/upload-image",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"readme",
														"upload-image"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"url\": \"in\",\n  \"error\": \"ut\"\n}"
										}
									]
								},
								{
									"name": "Upload a custom block",
									"id": "e949c604-e35b-4610-a8d0-ffd4ae28719f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "tar",
													"type": "file",
													"description": "(Required) ",
													"value": null
												},
												{
													"key": "type",
													"value": "deploy",
													"type": "text",
													"description": "(Required)  (This can only be one of transform,deploy,dsp,transferLearning)"
												},
												{
													"key": "blockId",
													"value": "51574965",
													"type": "text",
													"description": "(Required) "
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/organizations/:organizationId/custom-block",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"organizations",
												":organizationId",
												"custom-block"
											],
											"variable": [
												{
													"id": "d0dbf28a-bb3f-4502-8b75-d9c7e389daaa",
													"key": "organizationId",
													"value": "49175899",
													"description": "(Required) Organization ID"
												}
											]
										},
										"description": "Upload a zip file containing a custom transformation or deployment block."
									},
									"response": [
										{
											"id": "c8e7617a-a95e-4f1e-b3a9-61f4dccbd4f4",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"description": "(Required) ",
															"key": "tar",
															"type": "file"
														},
														{
															"description": "(Required)  (This can only be one of transform,deploy,dsp,transferLearning)",
															"key": "type",
															"value": "deploy",
															"type": "text"
														},
														{
															"description": "(Required) ",
															"key": "blockId",
															"value": "51574965",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/custom-block",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"custom-block"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": 12873488112,\n  \"success\": true,\n  \"error\": \"qui est\"\n}"
										}
									]
								},
								{
									"name": "Create new empty project",
									"id": "7827f88e-fbf1-454e-aeb5-a11059a0af37",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"projectName\": \"EEG trials\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/organizations/:organizationId/new-project",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"organizations",
												":organizationId",
												"new-project"
											],
											"variable": [
												{
													"id": "eea07029-605c-4e4a-8607-f28dce22494d",
													"key": "organizationId",
													"value": "49175899",
													"description": "(Required) Organization ID"
												}
											]
										},
										"description": "Create a new empty project within an organization."
									},
									"response": [
										{
											"id": "d412bf3a-b2a4-436a-bb2a-93c4f13cddb5",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"projectName\": \"EEG trials\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/new-project",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"new-project"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"id\": 23540272,\n  \"success\": false,\n  \"error\": \"Duis nostrud in\"\n}"
										}
									]
								},
								{
									"name": "Add a collaborator to a project within an organisation",
									"id": "509608ba-ccd2-4235-b28b-bb9edfdfb6ab",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"projectId\": -67270210.60935727,\n  \"userId\": -28235455.31480743\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/organizations/:organizationId/add-project-collaborator",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"organizations",
												":organizationId",
												"add-project-collaborator"
											],
											"variable": [
												{
													"id": "dddd1f9a-0385-4b2c-b51e-0f650dde1fa7",
													"key": "organizationId",
													"value": "49175899",
													"description": "(Required) Organization ID"
												}
											]
										},
										"description": "Add a new collaborator to a project owned by an organisation."
									},
									"response": [
										{
											"id": "2264fe3e-0350-4298-8830-bc18da7a6a04",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"projectId\": -67270210.60935727,\n  \"userId\": -28235455.31480743\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/add-project-collaborator",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"add-project-collaborator"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Get socket token for an organization",
									"id": "0ad55681-b1bf-490f-9a46-bedfeeffaf93",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/organizations/:organizationId/socket-token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"organizations",
												":organizationId",
												"socket-token"
											],
											"variable": [
												{
													"id": "d481758b-e6f5-4f4c-953f-56008362882d",
													"key": "organizationId",
													"value": "49175899",
													"description": "(Required) Organization ID"
												}
											]
										},
										"description": "Get a token to authenticate with the web socket interface."
									},
									"response": [
										{
											"id": "f45879e7-41b8-40a3-9bc1-074e82ad8897",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/organizations/:organizationId/socket-token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"organizations",
														":organizationId",
														"socket-token"
													],
													"variable": [
														{
															"key": "organizationId",
															"value": "49175899",
															"description": "(Required) Organization ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": false,\n  \"error\": \"amet sit sunt nostrud\",\n  \"token\": {\n    \"socketToken\": \"dolore irure sit ut\",\n    \"expires\": \"2001-02-07T12:32:37.216Z\"\n  }\n}"
										}
									]
								}
							],
							"id": "00e82ded-e380-4faf-ac30-25faf9518fd9"
						},
						{
							"name": "List active organizations",
							"id": "dfa6b18e-70a2-4ec0-9a6b-e7812abeb544",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/organizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"organizations"
									]
								},
								"description": "Retrieve list of organizations that a user is a part of. If authenticating using JWT token this lists all the organizations the user has access to, if authenticating using an API key, this only lists that organization."
							},
							"response": [
								{
									"id": "c0723cd5-e0f6-4244-b06a-575f0e571702",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/organizations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"organizations"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"organizations\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"users\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeveloperProfile\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"whitelabelId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"headerImg\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"users\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDeveloperProfile\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"whitelabelId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"headerImg\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"success\": true,\n  \"error\": \"ut in pariatur exercitation\"\n}"
								}
							]
						},
						{
							"name": "Create new organization",
							"id": "f1e5ba00-7295-4469-aef0-3e6bbaac9476",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"organizationName\": \"EdgeImpulse Inc.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/organizations/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"organizations",
										"create"
									]
								},
								"description": "Create a new organization. This is an internal API."
							},
							"response": [
								{
									"id": "99388eb6-ff26-478b-bbf2-387a39405c4e",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"organizationName\": \"EdgeImpulse Inc.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/organizations/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"organizations",
												"create"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"apiKey\": \"cupidatat aliqua exercitation laborum officia\",\n  \"id\": -94988544,\n  \"success\": false,\n  \"error\": \"sit amet do dolore\"\n}"
								}
							]
						}
					],
					"id": "1cbfd4e8-6209-470b-acf6-114b07dbf73f"
				},
				{
					"name": "admin",
					"item": [
						{
							"name": "users/{user Id}",
							"item": [
								{
									"name": "Get user",
									"id": "03b6a667-7b1c-4634-be7c-e16bacc098ff",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/admin/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"users",
												":userId"
											],
											"variable": [
												{
													"id": "315784a7-b346-4f9f-9761-65505f68c69c",
													"key": "userId",
													"value": "49175899",
													"description": "(Required) User ID"
												}
											]
										},
										"description": "Admin-only API to get information about a user."
									},
									"response": [
										{
											"id": "6c689631-95b6-4ba2-b94d-fad4c6696ca9",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId",
															"value": "49175899",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"activated\": false,\n  \"created\": \"2019-08-31T17:32:28Z\",\n  \"email\": \"eiusmod\",\n  \"experiments\": {},\n  \"id\": 1,\n  \"name\": \"Jan Jongboom\",\n  \"organizations\": [\n    {\n      \"id\": 33045023,\n      \"name\": \"proident\",\n      \"isDeveloperProfile\": false,\n      \"whitelabelId\": 1700781.5112599581,\n      \"logo\": \"labore anim laboris do\"\n    },\n    {\n      \"id\": 91492304,\n      \"name\": \"velit dolore Lorem\",\n      \"isDeveloperProfile\": false,\n      \"whitelabelId\": 39308401.27320555,\n      \"logo\": \"voluptate anim mollit tempor\"\n    }\n  ],\n  \"pending\": false,\n  \"projects\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"collaborators\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labelingMethod\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isEnterpriseProject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"whitelabelId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastAccessed\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerUserId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerOrganizationId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataExplorerScreenshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"created\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"owner\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"collaborators\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"labelingMethod\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"metadata\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isEnterpriseProject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"whitelabelId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lastAccessed\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"logo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerUserId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ownerOrganizationId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataExplorerScreenshot\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"tags\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"category\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"showImagine2022\": true,\n  \"staffInfo\": {\n    \"isStaff\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"hasSudoRights\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"companyName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"success\": true,\n  \"username\": \"janjongboom\",\n  \"error\": \"ut veniam\",\n  \"photo\": \"https://usercdn.edgeimpulse.com/photos/1.jpg\",\n  \"lastTosAcceptanceDate\": \"2019-08-31T17:32:28Z\",\n  \"evaluation\": false,\n  \"ambassador\": false\n}"
										}
									]
								},
								{
									"name": "Get user",
									"id": "f3e08a76-5bbf-4761-bd58-95d90cb57839",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"quijote@lamancha.es\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/admin/users/:userId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"users",
												":userId"
											],
											"variable": [
												{
													"id": "4cd161ac-0810-41c0-be02-295a8a309416",
													"key": "userId",
													"value": "49175899",
													"description": "(Required) User ID"
												}
											]
										},
										"description": "Admin-only API to update user properties."
									},
									"response": [
										{
											"id": "bb76e5a1-625d-4449-aabe-90aa17a9c88c",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"quijote@lamancha.es\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/admin/users/:userId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"users",
														":userId"
													],
													"variable": [
														{
															"key": "userId",
															"value": "49175899",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Get user metrics",
									"id": "63d25095-ac81-4e87-996a-75f5f4285693",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/admin/users/:userId/metrics",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"users",
												":userId",
												"metrics"
											],
											"variable": [
												{
													"id": "5823dbf3-d2a1-4d19-a023-8db761056947",
													"key": "userId",
													"value": "49175899",
													"description": "(Required) User ID"
												}
											]
										},
										"description": "Admin-only API to get marketing metrics about a user."
									},
									"response": [
										{
											"id": "f453ebac-ac9a-4b88-873d-5cb3c2253cad",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/users/:userId/metrics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"users",
														":userId",
														"metrics"
													],
													"variable": [
														{
															"key": "userId",
															"value": "49175899",
															"description": "(Required) User ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"metrics\": {},\n  \"success\": true,\n  \"error\": \"officia Excepteur nostrud cupidatat\",\n  \"classificationType\": true\n}"
										}
									]
								}
							],
							"id": "de772811-9053-4828-987d-fddf9425eb94"
						},
						{
							"name": "users-ids",
							"item": [
								{
									"name": "Get all user IDs",
									"id": "1bb9794d-f11c-48c8-85bd-453a647332e9",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/admin/users-ids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"users-ids"
											]
										},
										"description": "Admin-only API to get list of all users."
									},
									"response": [
										{
											"id": "2b86bf7a-d0ba-4a3a-b7fb-5838a965e37c",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/users-ids",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"users-ids"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"ids\": [\n    28252597,\n    -85184701\n  ],\n  \"success\": false,\n  \"error\": \"dolore\"\n}"
										}
									]
								},
								{
									"name": "Get all user IDs (active last 30 days)",
									"id": "68948434-226a-43da-844e-b7bac8daa156",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/admin/users-ids/active",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"users-ids",
												"active"
											]
										},
										"description": "Admin-only API to get list of all users that have been active in the past 30 days."
									},
									"response": [
										{
											"id": "df0785d1-1e65-40a8-a2b3-25ff6862a06e",
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/users-ids/active",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"users-ids",
														"active"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"ids\": [\n    75416184,\n    -12712026\n  ],\n  \"success\": true,\n  \"error\": \"Duis laborum\"\n}"
										}
									]
								}
							],
							"id": "ec9dd911-b7db-40d6-8d2b-a5836cabaea6"
						},
						{
							"name": "projects/{admin Project Id}",
							"item": [
								{
									"name": "Add current user to a project",
									"id": "deddf020-3deb-41cf-b481-33143be8c862",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/admin/projects/:adminProjectId/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"projects",
												":adminProjectId",
												"add"
											],
											"variable": [
												{
													"id": "9165537a-b821-42fe-a8dc-10605a0c9473",
													"key": "adminProjectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Admin-only API to add the current user to a project."
									},
									"response": [
										{
											"id": "997c8d8d-05eb-420d-8a8b-1f4415a1f731",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/projects/:adminProjectId/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"projects",
														":adminProjectId",
														"add"
													],
													"variable": [
														{
															"key": "adminProjectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Remove current user from a project",
									"id": "211b47d0-55fa-4a67-a54b-b3ffeabf6dac",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/admin/projects/:adminProjectId/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"projects",
												":adminProjectId",
												"remove"
											],
											"variable": [
												{
													"id": "c89dbad0-37b8-4488-a77e-a945f1831bf1",
													"key": "adminProjectId",
													"value": "49175899",
													"description": "(Required) Project ID"
												}
											]
										},
										"description": "Admin-only API to remove the current user from a project."
									},
									"response": [
										{
											"id": "788e7606-c845-4110-aeed-cc818557913e",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/admin/projects/:adminProjectId/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"admin",
														"projects",
														":adminProjectId",
														"remove"
													],
													"variable": [
														{
															"key": "adminProjectId",
															"value": "49175899",
															"description": "(Required) Project ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								}
							],
							"id": "676154e4-b989-4172-81c0-d1e46d767309"
						},
						{
							"name": "Find a user",
							"id": "cb4293f2-25a0-432d-8c19-5c120b4f39e7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/admin/find-user?query=ipsum non sunt",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"admin",
										"find-user"
									],
									"query": [
										{
											"key": "query",
											"value": "ipsum non sunt",
											"description": "(Required) Part of e-mail address or username"
										}
									]
								},
								"description": "Admin-only API to find a user by username or email address."
							},
							"response": [
								{
									"id": "94c08575-7774-47fb-8a49-c3ad88834bba",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/admin/find-user?query=ipsum non sunt",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"admin",
												"find-user"
											],
											"query": [
												{
													"key": "query",
													"value": "ipsum non sunt"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": false,\n  \"users\": [\n    {\n      \"id\": 1,\n      \"username\": \"janjongboom\",\n      \"name\": \"Jan Jongboom\",\n      \"created\": \"2019-08-31T17:32:28Z\",\n      \"email\": \"fugiat Duis\",\n      \"photo\": \"https://usercdn.edgeimpulse.com/photos/1.jpg\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"janjongboom\",\n      \"name\": \"Jan Jongboom\",\n      \"created\": \"2019-08-31T17:32:28Z\",\n      \"email\": \"pariatur adipisicing\",\n      \"photo\": \"https://usercdn.edgeimpulse.com/photos/1.jpg\"\n    }\n  ],\n  \"error\": \"cillum\"\n}"
								}
							]
						}
					],
					"id": "cc846946-57e9-45ce-8a0f-a9e9ca19b7f5"
				},
				{
					"name": "portals/{portal Id}",
					"item": [
						{
							"name": "files",
							"item": [
								{
									"name": "List files in portal",
									"id": "341f3267-82b7-45a7-9127-b87c185d43a5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"prefix\": \"anim nostrud fugiat sint\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/portals/:portalId/files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"portals",
												":portalId",
												"files"
											],
											"variable": [
												{
													"id": "1748a25d-6894-4bf2-a717-e999ff0d4b83",
													"key": "portalId",
													"value": "49175899",
													"description": "(Required) Portal ID"
												}
											]
										},
										"description": "List all files and directories in specified prefix."
									},
									"response": [
										{
											"id": "6438a705-e708-4e8c-8aa2-83546a0f4050",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"prefix\": \"anim nostrud fugiat sint\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/portals/:portalId/files",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"portals",
														":portalId",
														"files"
													],
													"variable": [
														{
															"key": "portalId",
															"value": "49175899",
															"description": "(Required) Portal ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": false,\n  \"error\": \"in laborum quis ut deserunt\",\n  \"files\": [\n    {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"path\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"addedDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"size\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ETag\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"path\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"addedDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"size\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"ETag\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete file from portal",
									"id": "cfa6f667-e643-42db-8752-b363925fb2c8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"path\": \"deserunt ad in\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/portals/:portalId/files/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"portals",
												":portalId",
												"files",
												"delete"
											],
											"variable": [
												{
													"id": "56c8dbf6-71dd-4360-9e9e-cf24615c3912",
													"key": "portalId",
													"value": "49175899",
													"description": "(Required) Portal ID"
												}
											]
										},
										"description": "Delete a file from an upload portal (requires JWT auth)."
									},
									"response": [
										{
											"id": "8560e9b7-8522-4e86-a81d-b8b194a28375",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"path\": \"deserunt ad in\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/portals/:portalId/files/delete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"portals",
														":portalId",
														"files",
														"delete"
													],
													"variable": [
														{
															"key": "portalId",
															"value": "49175899",
															"description": "(Required) Portal ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Rename file from portal",
									"id": "6c2dc39f-e27b-4a37-93f5-5c40d9533a1f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"oldPath\": \"id ad deserunt aute nisi\",\n  \"newPath\": \"commodo consectetur dolor do\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/portals/:portalId/files/rename",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"portals",
												":portalId",
												"files",
												"rename"
											],
											"variable": [
												{
													"id": "1c122d87-219f-43df-87f9-a2dcf1eda04b",
													"key": "portalId",
													"value": "49175899",
													"description": "(Required) Portal ID"
												}
											]
										},
										"description": "Rename a file on an upload portal (requires JWT auth)."
									},
									"response": [
										{
											"id": "cda5dd88-d471-4974-a3ed-e00c5d30e7d8",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"oldPath\": \"id ad deserunt aute nisi\",\n  \"newPath\": \"commodo consectetur dolor do\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/portals/:portalId/files/rename",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"portals",
														":portalId",
														"files",
														"rename"
													],
													"variable": [
														{
															"key": "portalId",
															"value": "49175899",
															"description": "(Required) Portal ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
										}
									]
								},
								{
									"name": "Download file from portal",
									"id": "a4e568be-1fcc-4768-a441-2c1bb47eb55e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"path\": \"deserunt ad in\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/portals/:portalId/files/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"portals",
												":portalId",
												"files",
												"download"
											],
											"variable": [
												{
													"id": "e999cdcb-9adb-4000-af6a-ca52ae0387d0",
													"key": "portalId",
													"value": "49175899",
													"description": "(Required) Portal ID"
												}
											]
										},
										"description": "Download a file from an upload portal (requires JWT auth). Will return a signed URL to the bucket."
									},
									"response": [
										{
											"id": "e1ea095f-a854-488e-b8b7-9456f765020e",
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "x-api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"path\": \"deserunt ad in\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/portals/:portalId/files/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"portals",
														":portalId",
														"files",
														"download"
													],
													"variable": [
														{
															"key": "portalId",
															"value": "49175899",
															"description": "(Required) Portal ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"responseTime": null,
											"body": "{\n  \"success\": true,\n  \"url\": \"non\",\n  \"error\": \"et cillum dolor officia laboris\"\n}"
										}
									]
								}
							],
							"id": "4e3fb9a8-781c-4da8-b841-457571a9db3e"
						},
						{
							"name": "Portal info",
							"id": "7637da12-f0c8-4011-a644-c74b4e3ebabf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/portals/:portalId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"portals",
										":portalId"
									],
									"variable": [
										{
											"id": "6a9288c7-975f-4d0c-8a6c-1a529ee6acb3",
											"key": "portalId",
											"value": "49175899",
											"description": "(Required) Portal ID"
										}
									]
								},
								"description": "Get information about a portal"
							},
							"response": [
								{
									"id": "ea4d7833-c139-4d76-9f0f-76a661c3dfcb",
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/portals/:portalId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"portals",
												":portalId"
											],
											"variable": [
												{
													"key": "portalId",
													"value": "49175899",
													"description": "(Required) Portal ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"name\": \"incididunt culpa\",\n  \"description\": \"culpa sunt\",\n  \"organizationId\": -56763686,\n  \"organizationName\": \"dolor reprehenderit in ea\",\n  \"organizationLogo\": \"Ut ei\"\n}"
								}
							]
						},
						{
							"name": "Create pre-signed S3 upload link",
							"id": "96e7ade4-d440-4fdc-824c-0f3c9ce9fdf9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fileName\": \"nisi ulla\",\n  \"fileSize\": -82198072,\n  \"fileHash\": \"quis sunt\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/portals/:portalId/upload-link",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"portals",
										":portalId",
										"upload-link"
									],
									"variable": [
										{
											"id": "45e5d495-d616-4d20-9075-6878879344f0",
											"key": "portalId",
											"value": "49175899",
											"description": "(Required) Portal ID"
										}
									]
								},
								"description": "Creates a signed link to securely upload data to s3 bucket directly from the client."
							},
							"response": [
								{
									"id": "29b0de93-e54d-467d-825d-f82856454f74",
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "x-api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileName\": \"nisi ulla\",\n  \"fileSize\": -82198072,\n  \"fileHash\": \"quis sunt\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/portals/:portalId/upload-link",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"portals",
												":portalId",
												"upload-link"
											],
											"variable": [
												{
													"key": "portalId",
													"value": "49175899",
													"description": "(Required) Portal ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"responseTime": null,
									"body": "{\n  \"success\": false,\n  \"error\": \"in veniam\",\n  \"url\": \"incididunt voluptate esse dolore labore\",\n  \"ETag\": \"dolore anim\"\n}"
								}
							]
						}
					],
					"id": "12ef92e1-3079-401e-b1fd-c1740cff7b02"
				},
				{
					"name": "Deployment targets",
					"id": "0b7f17a5-daf1-471b-ab65-647a0869ca39",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/deployment/targets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"deployment",
								"targets"
							]
						},
						"description": "List all deployment targets"
					},
					"response": [
						{
							"id": "7919e929-c0f8-4611-9c6b-fd501f778e61",
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "x-api-key",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/deployment/targets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"deployment",
										"targets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n  \"success\": false,\n  \"targets\": [\n    {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"image\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imageClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"format\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasEonCompiler\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasTensorRT\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasTensaiFlow\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasDRPAI\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hideOptimizations\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"uiSection\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"latencyDevice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"badge\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"customDeployId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"integrateUrl\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"description\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"image\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imageClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"format\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasEonCompiler\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasTensorRT\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasTensaiFlow\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hasDRPAI\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hideOptimizations\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"uiSection\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"latencyDevice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"badge\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"customDeployId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"integrateUrl\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"error\": \"sunt ut minim pariatur\"\n}"
						}
					]
				}
			],
			"id": "160c5fb4-b5c5-441b-8e7b-20f11697ddb7"
		},
		{
			"name": "Get JWT token",
			"id": "d964a876-b2c0-48c5-8ac7-ac0d85395a53",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"edge-user-01\",\n  \"password\": \"culpa ut reprehenderit eu\",\n  \"uuid\": \"enim r\",\n  \"ssoType\": \"cli\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api-login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api-login"
					]
				},
				"description": "Get a JWT token to authenticate with the API."
			},
			"response": [
				{
					"id": "32176175-6c16-4ac3-925b-fa88b2a8e667",
					"name": "OK",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "x-api-key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"edge-user-01\",\n  \"password\": \"culpa ut reprehenderit eu\",\n  \"uuid\": \"enim r\",\n  \"ssoType\": \"cli\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api-login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-login"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n  \"success\": true,\n  \"error\": \"qui\",\n  \"token\": \"voluptate sed incididunt do\",\n  \"redirectUrl\": \"dolor\"\n}"
				}
			]
		},
		{
			"name": "Create user",
			"id": "17edd8c1-2fe9-4663-b3ad-c4d2b8e5611f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Jan Jongboom\",\n  \"username\": \"janjongboom\",\n  \"email\": \"jan@edgeimpulse.com\",\n  \"privacyPolicy\": false,\n  \"password\": \"ex sunt\",\n  \"projectName\": \"id\",\n  \"activationToken\": \"adipisicing\",\n  \"identityProvider\": \"enim nisi id\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api-user-create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api-user-create"
					]
				},
				"description": "Create a new user and project"
			},
			"response": [
				{
					"id": "e2321231-d55f-4840-840e-10ee1d467cb1",
					"name": "OK",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "x-api-key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Jan Jongboom\",\n  \"username\": \"janjongboom\",\n  \"email\": \"jan@edgeimpulse.com\",\n  \"privacyPolicy\": false,\n  \"password\": \"ex sunt\",\n  \"projectName\": \"id\",\n  \"activationToken\": \"adipisicing\",\n  \"identityProvider\": \"enim nisi id\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api-user-create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-user-create"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n  \"success\": false,\n  \"error\": \"do officia ad\",\n  \"redirectUrl\": \"Ut dolore eu fugiat\",\n  \"id\": -79170105.47305897\n}"
				}
			]
		},
		{
			"name": "Create evaluation user",
			"id": "699f5061-67c4-463d-9501-eea946220a88",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api-user-create-evaluate",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api-user-create-evaluate"
					]
				},
				"description": "Creates an evaluation user and a new project, and redirects the user to the new project."
			},
			"response": [
				{
					"id": "e4e0382f-7c72-471d-8045-c33c012e68f7",
					"name": "OK",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "x-api-key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api-user-create-evaluate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-user-create-evaluate"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n  \"redirectUrl\": \"pariatur Excepteur occaecat in Duis\",\n  \"success\": false,\n  \"token\": \"of\",\n  \"error\": \"fugiat dolore amet officia\"\n}"
				}
			]
		},
		{
			"name": "Get user password state",
			"id": "9c2b5257-7640-4813-a3dd-92503b6c4311",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api-user-need-to-set-password/:usernameOrEmail",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api-user-need-to-set-password",
						":usernameOrEmail"
					],
					"variable": [
						{
							"id": "b8d30384-1c4b-437e-a4b8-42fc443b0fa4",
							"key": "usernameOrEmail",
							"value": "ipsum non sunt",
							"description": "(Required) Username or email"
						}
					]
				},
				"description": "Tells whether the user needs to set its password."
			},
			"response": [
				{
					"id": "9d153456-763c-4e97-b591-66e35dc5ee73",
					"name": "OK",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "x-api-key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api-user-need-to-set-password/:usernameOrEmail",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-user-need-to-set-password",
								":usernameOrEmail"
							],
							"variable": [
								{
									"key": "usernameOrEmail",
									"value": "ipsum non sunt",
									"description": "(Required) Username or email"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n  \"success\": true,\n  \"error\": \"ut\",\n  \"email\": \"ut dolore proident\",\n  \"needPassword\": false,\n  \"whitelabels\": [\n    \"labore Ut\",\n    \"in nostrud amet ad\"\n  ]\n}"
				}
			]
		},
		{
			"name": "Request reset password",
			"id": "7978b4c5-16e1-4e51-86cb-ea66e6387637",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"aliquip repreh\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api-user-request-reset-password",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api-user-request-reset-password"
					]
				},
				"description": "Request a password reset link for a user."
			},
			"response": [
				{
					"id": "b2ef90c1-4e41-4086-8011-f377155cd33d",
					"name": "OK",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "x-api-key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"aliquip repreh\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api-user-request-reset-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-user-request-reset-password"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
				}
			]
		},
		{
			"name": "Reset password",
			"id": "0bb4a2b2-b8c4-47f9-9be3-dc1dc52ddaa5",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"incididunt ipsum esse commodo\",\n  \"code\": \"id sed dolor\",\n  \"newPassword\": \"aliqua\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api-user-reset-password",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api-user-reset-password"
					]
				},
				"description": "Reset the password for a user."
			},
			"response": [
				{
					"id": "93a41809-49a0-4fce-a229-b9709103fe68",
					"name": "OK",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "x-api-key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"incididunt ipsum esse commodo\",\n  \"code\": \"id sed dolor\",\n  \"newPassword\": \"aliqua\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api-user-reset-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-user-reset-password"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
				}
			]
		},
		{
			"name": "Verify reset password code",
			"id": "7b0e19cb-98f4-4f5d-b534-001c461ceaf4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"sed velit\",\n  \"code\": \"occaecat\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api-user-verify-reset-password-code",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api-user-verify-reset-password-code"
					]
				},
				"description": "Verify whether the reset password code for the user is valid."
			},
			"response": [
				{
					"id": "212f66c7-5248-4c2b-a0b9-ec0948299ec7",
					"name": "OK",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "x-api-key",
								"value": "<API Key>"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"sed velit\",\n  \"code\": \"occaecat\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api-user-verify-reset-password-code",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-user-verify-reset-password-code"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
				}
			]
		},
		{
			"name": "User CDN resource",
			"id": "f678c268-dd7c-4535-86ee-b915e0707218",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "image/jpeg"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api-usercdn?path=ipsum non sunt",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api-usercdn"
					],
					"query": [
						{
							"key": "path",
							"value": "ipsum non sunt",
							"description": "(Required) CDN Path"
						}
					]
				},
				"description": "Proxy function to retrieve data from the user CDN. This function is only used during development."
			},
			"response": [
				{
					"id": "56ac541d-68c9-4c0a-a25f-9411c109b45c",
					"name": "Image",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "x-api-key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api-usercdn?path=ipsum non sunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-usercdn"
							],
							"query": [
								{
									"key": "path",
									"value": "ipsum non sunt"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "image/jpeg"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "ipsum non sunt"
				}
			]
		},
		{
			"name": "Get container health",
			"id": "bf3ef947-c0bd-47d9-bd5c-de59546c0ab5",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api-health?requester=ipsum non sunt",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api-health"
					],
					"query": [
						{
							"key": "requester",
							"value": "ipsum non sunt",
							"description": "Health check requester"
						}
					]
				},
				"description": "Get container health."
			},
			"response": [
				{
					"id": "b5767501-39f3-4dc4-978f-a8de5d7883e5",
					"name": "OK",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "x-api-key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api-health?requester=ipsum non sunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-health"
							],
							"query": [
								{
									"key": "requester",
									"value": "ipsum non sunt"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
				},
				{
					"id": "d41e7a99-5769-49e6-9731-a7c7ff107683",
					"name": "Unhealthy",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "x-api-key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api-health?requester=ipsum non sunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-health"
							],
							"query": [
								{
									"key": "requester",
									"value": "ipsum non sunt"
								}
							]
						}
					},
					"status": "Service Unavailable",
					"code": 503,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n  \"success\": true,\n  \"error\": \"Excepteur cupidatat ut\"\n}"
				}
			]
		},
		{
			"name": "Get public metrics",
			"id": "dc4418a5-39ef-4491-987e-f5f49384b061",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/api-metrics",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api-metrics"
					]
				},
				"description": "Get information about number of projects, compute and data samples. Updated once per hour."
			},
			"response": [
				{
					"id": "315c6a20-5dbe-4a42-bd5a-7049764f83ed",
					"name": "OK",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: apikey",
								"key": "x-api-key",
								"value": "<API Key>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api-metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-metrics"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n  \"data_samples\": 59795341,\n  \"jobs\": -35592197,\n  \"projects\": 43295550,\n  \"success\": false,\n  \"error\": \"exercitation dolore fugiat occaecat Excepteur\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "x-jwt-token",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{x-jwt-token}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "ec547f20-99bd-434b-9276-48995fe62626",
				"type": "text/javascript",
				"exec": [
					"const loginPostRequest = {",
					"  url: pm.collectionVariables.get('baseUrl') + \"/api-login\",",
					"  method: 'POST',",
					"  header: 'Content-Type:application/json',",
					"  body: {",
					"    mode: 'application/json',",
					"    raw: JSON.stringify(",
					"        {",
					"        \tusername: pm.collectionVariables.get('username'),",
					"        \tpassword: pm.collectionVariables.get('password')",
					"        })",
					"  }",
					"};",
					"",
					"pm.sendRequest(loginPostRequest, function (err, response) {",
					"    pm.collectionVariables.set(\"x-jwt-token\", response.json().token);",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "274767e4-d951-4828-b4eb-3bf42600783d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "62b0d8a9-3e27-4b8b-8525-4bbbc34631f8",
			"key": "baseUrl",
			"value": "https://studio.edgeimpulse.com/v1",
			"type": "string"
		},
		{
			"id": "5aed312f-7b45-41a2-bc18-c6714cede73a",
			"key": "x-jwt-token",
			"value": "x-jwt-token",
			"type": "string"
		},
		{
			"id": "79f102fe-6a79-4773-b637-6bc29458cd9f",
			"key": "username",
			"value": "username",
			"type": "string"
		},
		{
			"id": "a159dc7b-756d-4776-bd5f-7d003518f5d8",
			"key": "password",
			"value": "password",
			"type": "string"
		}
	]
}